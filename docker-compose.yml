services:
  postgres:
    image: postgres:13
    container_name: whaticket_postgres
    environment:
      POSTGRES_DB: whaticket
      POSTGRES_USER: whaticket
      POSTGRES_PASSWORD: whaticket123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - whaticket_network

  redis:
    image: redis:7-alpine
    container_name: whaticket_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - whaticket_network

  mailhog:
    image: mailhog/mailhog
    container_name: whaticket_mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    restart: unless-stopped
    networks:
      - whaticket_network

  backend:
    build:
      context: ./whaticket/backend
      dockerfile: Dockerfile
    container_name: whaticket_backend
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=whaticket
      - DB_PASS=whaticket123
      - DB_NAME=whaticket
      - REDIS_URI=redis://redis:6379
      - BACKEND_URL=http://localhost:8081
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    volumes:
      - ./whaticket/backend:/app
      - /app/node_modules
    networks:
      - whaticket_network
    command: sh -c "npm run db:migrate && npm run db:seed && npm run dev:server"

  frontend:
    build:
      context: ./whaticket/frontend
      dockerfile: Dockerfile
    container_name: whaticket_frontend
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8081
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - NODE_OPTIONS=--max_old_space_size=4096
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      - ./whaticket/frontend:/app
      - /app/node_modules
    networks:
      - whaticket_network
    stdin_open: true
    tty: true
    command: sh -c "npm start"

networks:
  whaticket_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: