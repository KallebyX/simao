{"ast":null,"code":"var _jsxFileName = \"/workspaces/simao/whaticket/frontend/src/components/MessagesList/index.js\";\nimport React, { useContext, useState, useEffect, useReducer, useRef, memo, useCallback } from \"react\";\nimport { isSameDay, parseISO, format } from \"date-fns\";\nimport clsx from \"clsx\";\nimport { isNil } from \"lodash\";\nimport { blue, green, red } from \"@material-ui/core/colors\";\nimport { Button, CircularProgress, Divider, IconButton, makeStyles, Badge } from \"@material-ui/core\";\nimport { AccessTime, Block, Done, DoneAll, ExpandMore, GetApp, Facebook, Instagram, Reply, Close } from \"@material-ui/icons\";\nimport MarkdownWrapper from \"../MarkdownWrapper\";\nimport VcardPreview from \"../VcardPreview\";\nimport LocationPreview from \"../LocationPreview\";\nimport ModalImageCors from \"../ModalImageCors\";\nimport MessageOptionsMenu from \"../MessageOptionsMenu\";\nimport whatsBackground from \"../../assets/wa-background.png\";\nimport whatsBackgroundDark from \"../../assets/wa-background-dark.png\";\nimport YouTubePreview from \"../ModalYoutubeCors\";\nimport ListPreview from \"../ListPreview\";\nimport PixPreview from \"../PixPreview\";\nimport ButtonPreview from \"../ButtonPreview\";\nimport EventPreview from \"../EventPreview\";\nimport { ReplyMessageContext } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport { ForwardMessageContext } from \"../../context/ForwarMessage/ForwardMessageContext\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport AdMetaPreview from \"../AdMetaPreview\"; // Adicionado componente de preview de anÃºncio\n// import { SocketContext } from \"../../context/Socket/SocketContext\";\nimport { i18n } from \"../../translate/i18n\";\nimport SelectMessageCheckbox from \"./SelectMessageCheckbox\";\nimport useCompanySettings from \"../../hooks/useSettings/companySettings\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { QueueSelectedContext } from \"../../context/QueuesSelected/QueuesSelectedContext\";\nimport AudioModal from \"../AudioModal\";\nimport { messages } from \"../../translate/languages\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport { downloadResource } from \"../../utils\";\nconst useStyles = makeStyles(theme => ({\n  messagesListWrapper: {\n    overflow: \"hidden\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    width: \"100%\",\n    minWidth: 300,\n    minHeight: 200\n  },\n  currentTick: {\n    alignItems: \"center\",\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    width: \"95%\",\n    backgroundColor: theme.palette.primary.main,\n    margin: \"10px\",\n    borderRadius: \"10px\",\n    boxShadow: \"1px 5px 10px #b3b3b3\"\n  },\n  currentTicktText: {\n    color: theme.palette.primary,\n    fontWeight: 'bold',\n    padding: 8,\n    alignSelf: \"center\",\n    marginLeft: \"0px\"\n  },\n  messagesList: {\n    backgroundImage: theme.mode === 'light' ? `url(${whatsBackground})` : `url(${whatsBackgroundDark})`,\n    backgroundColor: theme.mode === 'light' ? \"transparent\" : \"#0b0b0d\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    padding: \"20px 20px 30px 20px\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles\n  },\n  dragElement: {\n    background: 'rgba(255, 255, 255, 0.8)',\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 999999,\n    textAlign: \"center\",\n    fontSize: \"3em\",\n    border: \"5px dashed #333\",\n    color: '#333',\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  circleLoading: {\n    color: blue[500],\n    position: \"absolute\",\n    opacity: \"70%\",\n    top: 0,\n    left: \"50%\",\n    marginTop: 12\n  },\n  messageLeft: {\n    marginRight: 20,\n    marginTop: 2,\n    minWidth: 100,\n    maxWidth: 600,\n    height: \"auto\",\n    display: \"block\",\n    position: \"relative\",\n    \"&:hover #messageActionsButton\": {\n      display: \"flex\",\n      position: \"absolute\",\n      top: 0,\n      right: 0\n    },\n    whiteSpace: \"pre-wrap\",\n    backgroundColor: theme.mode === 'light' ? \"#ffffff\" : \"#202c33\",\n    color: theme.mode === 'light' ? \"#303030\" : \"#ffffff\",\n    alignSelf: \"flex-start\",\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: theme.mode === 'light' ? \"0 1px 1px #b3b3b3\" : \"0 1px 1px #000000\"\n  },\n  quotedContainerLeft: {\n    margin: \"-3px -80px 6px -6px\",\n    overflow: \"hidden\",\n    backgroundColor: theme.mode === 'light' ? \"#f0f0f0\" : \"#1d282f\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\"\n  },\n  quotedMsg: {\n    padding: 10,\n    maxWidth: 300,\n    height: \"auto\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\",\n    overflow: \"hidden\"\n  },\n  quotedSideColorLeft: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#388aff\"\n  },\n  messageRight: {\n    marginLeft: 20,\n    marginTop: 2,\n    minWidth: 100,\n    maxWidth: 600,\n    height: \"auto\",\n    display: \"block\",\n    position: \"relative\",\n    \"&:hover #messageActionsButton\": {\n      display: \"flex\",\n      position: \"absolute\",\n      top: 0,\n      right: 0\n    },\n    whiteSpace: \"pre-wrap\",\n    backgroundColor: theme.mode === 'light' ? \"#dcf8c6\" : \"#005c4b\",\n    color: theme.mode === 'light' ? \"#303030\" : \"#ffffff\",\n    alignSelf: \"flex-end\",\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 0,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: theme.mode === 'light' ? \"0 1px 1px #b3b3b3\" : \"0 1px 1px #000000\"\n  },\n  messageRightPrivate: {\n    marginLeft: 20,\n    marginTop: 2,\n    minWidth: 100,\n    maxWidth: 600,\n    height: \"auto\",\n    display: \"block\",\n    position: \"relative\",\n    \"&:hover #messageActionsButton\": {\n      display: \"flex\",\n      position: \"absolute\",\n      top: 0,\n      right: 0\n    },\n    whiteSpace: \"pre-wrap\",\n    backgroundColor: \"#F0E68C\",\n    color: \"#303030\",\n    alignSelf: \"flex-end\",\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 0,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: theme.mode === 'light' ? \"0 1px 1px #b3b3b3\" : \"0 1px 1px #000000\"\n  },\n  quotedContainerRight: {\n    margin: \"-3px -80px 6px -6px\",\n    overflowY: \"hidden\",\n    backgroundColor: theme.mode === 'light' ? \"#cfe9ba\" : \"#025144\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\"\n  },\n  quotedMsgRight: {\n    padding: 10,\n    maxWidth: 300,\n    height: \"auto\",\n    whiteSpace: \"pre-wrap\"\n  },\n  quotedSideColorRight: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#35cd96\"\n  },\n  messageActionsButton: {\n    display: \"none\",\n    position: \"relative\",\n    color: \"#999\",\n    zIndex: 1,\n    backgroundColor: \"inherit\",\n    opacity: \"90%\",\n    \"&:hover, &.Mui-focusVisible\": {\n      backgroundColor: \"inherit\"\n    }\n  },\n  messageContactName: {\n    display: \"flex\",\n    color: \"#6bcbef\",\n    fontWeight: 500\n  },\n  textContentItem: {\n    overflowWrap: \"break-word\",\n    padding: \"3px 80px 6px 6px\"\n  },\n  textContentItemDeleted: {\n    fontStyle: \"italic\",\n    color: \"rgba(0, 0, 0, 0.36)\",\n    overflowWrap: \"break-word\",\n    padding: \"3px 80px 6px 6px\"\n  },\n  messageMedia: {\n    objectFit: \"cover\",\n    width: 400,\n    height: \"auto\",\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8\n  },\n  timestamp: {\n    fontSize: 11,\n    position: \"absolute\",\n    bottom: 0,\n    right: 5,\n    color: \"#999\"\n  },\n  forwardMessage: {\n    fontSize: 12,\n    fontStyle: \"italic\",\n    position: \"absolute\",\n    top: 0,\n    left: 5,\n    color: \"#999\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  dailyTimestamp: {\n    alignItems: \"center\",\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    width: \"110px\",\n    backgroundColor: \"#e1f3fb\",\n    margin: \"10px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 1px 1px #b3b3b3\"\n  },\n  dailyTimestampText: {\n    color: \"#808888\",\n    padding: 8,\n    alignSelf: \"center\",\n    marginLeft: \"0px\"\n  },\n  ackIcons: {\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginLeft: 4\n  },\n  deletedIcon: {\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginRight: 4\n  },\n  ackDoneAllIcon: {\n    color: blue[500],\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginLeft: 4\n  },\n  ackPlayedIcon: {\n    color: green[500],\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginLeft: 4\n  },\n  downloadMedia: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"inherit\",\n    padding: 10,\n    color: theme.mode === \"light\" ? theme.palette.light : theme.palette.dark\n  },\n  messageCenter: {\n    marginTop: 5,\n    alignItems: \"center\",\n    verticalAlign: \"center\",\n    alignContent: \"center\",\n    backgroundColor: \"#E1F5FEEB\",\n    fontSize: \"12px\",\n    minWidth: 100,\n    maxWidth: 270,\n    color: \"#272727\",\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: \"0 1px 1px #b3b3b3\"\n  },\n  deletedMessage: {\n    color: '#f55d65'\n  }\n}));\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_MESSAGES\") {\n    const messages = action.payload;\n    const newMessages = [];\n    messages.forEach(message => {\n      const messageIndex = state.findIndex(m => m.id === message.id);\n      if (messageIndex !== -1) {\n        state[messageIndex] = message;\n      } else {\n        newMessages.push(message);\n      }\n    });\n    return [...newMessages, ...state];\n  }\n  if (action.type === \"ADD_MESSAGE\") {\n    const newMessage = action.payload;\n    const messageIndex = state.findIndex(m => m.id === newMessage.id);\n    if (messageIndex !== -1) {\n      state[messageIndex] = newMessage;\n    } else {\n      state.push(newMessage);\n    }\n    return [...state];\n  }\n  if (action.type === \"UPDATE_MESSAGE\") {\n    const messageToUpdate = action.payload;\n    const messageIndex = state.findIndex(m => m.id === messageToUpdate.id);\n    if (messageIndex !== -1) {\n      state[messageIndex] = messageToUpdate;\n    }\n    return [...state];\n  }\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\nconst MessagesList = ({\n  isGroup,\n  onDrop,\n  whatsappId,\n  queueId,\n  channel\n}) => {\n  const classes = useStyles();\n  const [messagesList, dispatch] = useReducer(reducer, []);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const history = useHistory();\n  const lastMessageRef = useRef();\n  const [selectedMessage, setSelectedMessage] = useState({});\n  const {\n    setReplyingMessage\n  } = useContext(ReplyMessageContext);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const messageOptionsMenuOpen = Boolean(anchorEl);\n  const {\n    ticketId\n  } = useParams();\n  const currentTicketId = useRef(ticketId);\n  const {\n    getAll\n  } = useCompanySettings();\n  const [dragActive, setDragActive] = useState(false);\n  const [lgpdDeleteMessage, setLGPDDeleteMessage] = useState(false);\n  const {\n    selectedQueuesMessage\n  } = useContext(QueueSelectedContext);\n  const {\n    showSelectMessageCheckbox\n  } = useContext(ForwardMessageContext);\n  const {\n    user,\n    socket\n  } = useContext(AuthContext);\n  const companyId = user.companyId;\n  useEffect(() => {\n    async function fetchData() {\n      const settings = await getAll(companyId);\n      let settinglgpdDeleteMessage;\n      let settingEnableLGPD;\n      for (const [key, value] of Object.entries(settings)) {\n        if (key === \"lgpdDeleteMessage\") settinglgpdDeleteMessage = value;\n        if (key === \"enableLGPD\") settingEnableLGPD = value;\n      }\n      if (settingEnableLGPD === \"enabled\" && settinglgpdDeleteMessage === \"enabled\") {\n        setLGPDDeleteMessage(true);\n      }\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    dispatch({\n      type: \"RESET\"\n    });\n    setPageNumber(1);\n    currentTicketId.current = ticketId;\n  }, [ticketId, selectedQueuesMessage]);\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchMessages = async () => {\n        if (ticketId === \"undefined\") {\n          history.push(\"/tickets\");\n          return;\n        }\n        if (isNil(ticketId)) return;\n        try {\n          const {\n            data\n          } = await api.get(\"/messages/\" + ticketId, {\n            params: {\n              pageNumber,\n              selectedQueues: JSON.stringify(selectedQueuesMessage)\n            }\n          });\n          if (currentTicketId.current === ticketId) {\n            dispatch({\n              type: \"LOAD_MESSAGES\",\n              payload: data.messages\n            });\n            setHasMore(data.hasMore);\n            setLoading(false);\n            setLoadingMore(false);\n          }\n          if (pageNumber === 1 && data.messages.length > 1) {\n            scrollToBottom();\n          }\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n          setLoadingMore(false);\n        }\n      };\n      fetchMessages();\n    }, 500);\n    return () => {\n      clearTimeout(delayDebounceFn);\n    };\n  }, [pageNumber, ticketId, selectedQueuesMessage]);\n  useEffect(() => {\n    if (ticketId === \"undefined\") {\n      return;\n    }\n    const companyId = user.companyId;\n\n    //    const socket = socketManager.GetSocket();\n    const connectEventMessagesList = () => {\n      socket.emit(\"joinChatBox\", `${ticketId}`);\n    };\n    const onAppMessageMessagesList = data => {\n      var _data$message, _data$message$ticket, _data$message$ticket2;\n      if (data.action === \"create\" && data.ticket.uuid === ticketId) {\n        dispatch({\n          type: \"ADD_MESSAGE\",\n          payload: data.message\n        });\n        scrollToBottom();\n      }\n      if (data.action === \"update\" && (data === null || data === void 0 ? void 0 : (_data$message = data.message) === null || _data$message === void 0 ? void 0 : (_data$message$ticket = _data$message.ticket) === null || _data$message$ticket === void 0 ? void 0 : _data$message$ticket.uuid) === ticketId) {\n        dispatch({\n          type: \"UPDATE_MESSAGE\",\n          payload: data.message\n        });\n      }\n      if (data.action == \"delete\" && ((_data$message$ticket2 = data.message.ticket) === null || _data$message$ticket2 === void 0 ? void 0 : _data$message$ticket2.uuid) === ticketId) {\n        dispatch({\n          type: \"DELETE_MESSAGE\",\n          payload: data.messageId\n        });\n      }\n    };\n    socket.on(\"connect\", connectEventMessagesList);\n    socket.on(`company-${companyId}-appMessage`, onAppMessageMessagesList);\n    return () => {\n      socket.emit(\"joinChatBoxLeave\", `${ticketId}`);\n      socket.off(\"connect\", connectEventMessagesList);\n      socket.off(`company-${companyId}-appMessage`, onAppMessageMessagesList);\n    };\n  }, [ticketId]);\n  const loadMore = () => {\n    if (loadingMore) return;\n    setLoadingMore(true);\n    setPageNumber(prevPageNumber => prevPageNumber + 1);\n  };\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      if (lastMessageRef.current) {\n        lastMessageRef.current.scrollIntoView({});\n      }\n    }, 100);\n  };\n  const handleScroll = e => {\n    if (!hasMore) return;\n    const {\n      scrollTop\n    } = e.currentTarget;\n    if (scrollTop === 0) {\n      document.getElementById(\"messagesList\").scrollTop = 1;\n    }\n    if (loading) {\n      return;\n    }\n    if (scrollTop < 50) {\n      loadMore();\n    }\n  };\n  const handleOpenMessageOptionsMenu = (e, message) => {\n    setAnchorEl(e.currentTarget);\n    setSelectedMessage(message);\n  };\n  const handleCloseMessageOptionsMenu = e => {\n    setAnchorEl(null);\n  };\n  const hanldeReplyMessage = (e, message) => {\n    //if (ticket.status === \"open\" || ticket.status === \"group\") {\n    setAnchorEl(null);\n    setReplyingMessage(message);\n    //}\n  };\n  const checkMessageMedia = message => {\n    console.log(message);\n    if (message.mediaType === \"eventMessage\") {\n      try {\n        var _eventMessage$locatio;\n        // Parsear o dataJson diretamente da coluna do banco de dados\n        const parsedData = JSON.parse(message.dataJson);\n        const eventMessage = parsedData.message.eventMessage;\n        const titulo = eventMessage.name || \"Sem tÃ­tulo\";\n        const descricao = eventMessage.description || \"Sem descriÃ§Ã£o\";\n        const local = ((_eventMessage$locatio = eventMessage.location) === null || _eventMessage$locatio === void 0 ? void 0 : _eventMessage$locatio.name) || \"Local nÃ£o especificado\";\n        const link = eventMessage.joinLink || \"#\";\n        const linkTipo = link.includes(\"video\") ? \"video\" : \"voice\";\n\n        // Converter timestamps para data/hora formatada\n        const startTime = Number(eventMessage.startTime); // Em segundos\n        const endTime = startTime + 7200; // Exemplo: reuniÃ£o de 2h\n\n        const formatDateTime = timestamp => {\n          const date = new Date(timestamp * 1000);\n          const day = String(date.getDate()).padStart(2, '0');\n          const month = String(date.getMonth() + 1).padStart(2, '0');\n          const year = date.getFullYear();\n          const time = date.toLocaleTimeString('pt-BR', {\n            hour: '2-digit',\n            minute: '2-digit'\n          });\n          return `${day}/${month}/${year}, ${time}`;\n        };\n        return /*#__PURE__*/React.createElement(EventPreview, {\n          name: titulo,\n          description: descricao,\n          location: local,\n          startTime: startTime,\n          endTime: endTime,\n          joinLink: link,\n          linkType: linkTipo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 9\n          }\n        });\n      } catch (error) {\n        console.error(\"Erro ao processar a mensagem de evento: \", error);\n      }\n    } else if (message.mediaType === \"listMessage\") {\n      try {\n        var _message$ticket;\n        // Parsear o dataJson diretamente da coluna do banco de dados\n        const parsedData = JSON.parse(message.dataJson);\n        const listMessage = parsedData.message.listMessage;\n        let titulo = listMessage.title || \"\";\n        let descricao = listMessage.description || \"\";\n        let rodape = listMessage.footerText || \"\";\n        let secoes = [];\n        let rows = [];\n        listMessage.sections.forEach((section, index) => {\n          let currentSection = section.title || \"\";\n          section.rows.forEach((row, rowIndex) => {\n            rows.push({\n              titulo: row.title,\n              // TÃ­tulo do item da linha\n              descricao: row.description,\n              // DescriÃ§Ã£o do item da linha\n              idLinha: row.rowId // ID da linha\n            });\n          });\n          secoes.push({\n            titulo: currentSection,\n            linhas: rows\n          });\n          rows = [];\n        });\n        return /*#__PURE__*/React.createElement(ListPreview, {\n          titulo: titulo,\n          descricao: descricao,\n          textoBotao: listMessage.buttonText || \"Clique aqui\" // Texto do botÃ£o\n          ,\n          secoes: secoes,\n          rodape: rodape,\n          ticketId: message === null || message === void 0 ? void 0 : (_message$ticket = message.ticket) === null || _message$ticket === void 0 ? void 0 : _message$ticket.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 9\n          }\n        });\n      } catch (error) {\n        console.error(\"Erro ao processar a lista de mensagens: \", error);\n      }\n    } else if (message.mediaType === \"viewOnceMessage\" && message.body.startsWith('[BOTOES]')) {\n      try {\n        var _viewOnceMessage$body, _viewOnceMessage$foot, _viewOnceMessage$nati, _viewOnceMessage$nati2, _viewOnceMessage$head, _viewOnceMessage$head2, _message$ticket2;\n        const dataJsonString = message.dataJson;\n        if (!dataJsonString || typeof dataJsonString !== 'string') {\n          console.error(\"dataJson nÃ£o estÃ¡ definido ou nÃ£o Ã© uma string vÃ¡lida.\");\n          return;\n        }\n        const parsedData = JSON.parse(dataJsonString);\n        const viewOnceMessage = parsedData.message.viewOnceMessage.message.interactiveMessage; // Acessando a mensagem diretamente\n        if (!viewOnceMessage) {\n          console.error(\"viewOnceMessage nÃ£o estÃ¡ definido.\");\n          return; // Sai da funÃ§Ã£o se viewOnceMessage nÃ£o estiver definido\n        }\n        const titulo = ((_viewOnceMessage$body = viewOnceMessage.body) === null || _viewOnceMessage$body === void 0 ? void 0 : _viewOnceMessage$body.text) || \"\"; // TÃ­tulo\n        const rodape = ((_viewOnceMessage$foot = viewOnceMessage.footer) === null || _viewOnceMessage$foot === void 0 ? void 0 : _viewOnceMessage$foot.text) || \"\"; // RodapÃ©\n        const botoes = ((_viewOnceMessage$nati = viewOnceMessage.nativeFlowMessage) === null || _viewOnceMessage$nati === void 0 ? void 0 : (_viewOnceMessage$nati2 = _viewOnceMessage$nati.buttons) === null || _viewOnceMessage$nati2 === void 0 ? void 0 : _viewOnceMessage$nati2.map(button => {\n          const {\n            name,\n            buttonParamsJson\n          } = button;\n          const params = JSON.parse(buttonParamsJson); // Parse JSON para obter o conteÃºdo\n          return {\n            tipo: name,\n            texto: params.display_text,\n            conteudo: params.phoneNumber || params.url || params.copy_code\n          };\n        })) || [];\n        let imagem = null;\n        if ((_viewOnceMessage$head = viewOnceMessage.header) === null || _viewOnceMessage$head === void 0 ? void 0 : (_viewOnceMessage$head2 = _viewOnceMessage$head.imageMessage) === null || _viewOnceMessage$head2 === void 0 ? void 0 : _viewOnceMessage$head2.jpegThumbnail) {\n          imagem = viewOnceMessage.header.imageMessage.jpegThumbnail;\n        } else {\n          console.log(\"Nenhuma imagem encontrada no header.\");\n        }\n        return /*#__PURE__*/React.createElement(ButtonPreview, {\n          titulo: titulo,\n          rodape: rodape,\n          secoes: [{\n            titulo: \"BotÃµes\",\n            linhas: botoes\n          }],\n          imagem: imagem,\n          ticketId: message === null || message === void 0 ? void 0 : (_message$ticket2 = message.ticket) === null || _message$ticket2 === void 0 ? void 0 : _message$ticket2.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 13\n          }\n        });\n      } catch (error) {\n        console.error(\"Erro ao processar a mensagem do tipo viewOnceMessage: \", error);\n      }\n    } else if ((message.mediaType === \"viewOnceMessage\" || message.mediaType === \"interactiveMessage\") && message.body.startsWith('[PIX]')) {\n      try {\n        var _parsedData$message, _parsedData$message$i, _parsedData$message2, _parsedData$message2$, _parsedData$message2$2, _parsedData$message2$3, _nativeFlowMessage$bu, _params$total_amount, _params$order, _params$order$items, _params$order$items$, _nativeFlowMessage$he, _nativeFlowMessage$he2, _message$ticket3, _message$ticket3$user, _message$ticket4, _message$ticket4$user, _message$contact, _message$contact2, _message$ticket5;\n        // Verifica se o dataJson existe e Ã© uma string antes de tentar fazer o parse\n        const dataJsonString = message.dataJson;\n        if (!dataJsonString || typeof dataJsonString !== 'string') {\n          console.error(\"dataJson nÃ£o estÃ¡ definido ou nÃ£o Ã© uma string vÃ¡lida.\");\n          return; // Sai da funÃ§Ã£o se nÃ£o for vÃ¡lido\n        }\n        // Parse do JSON\n        const parsedData = JSON.parse(dataJsonString);\n        const nativeFlowMessage = ((_parsedData$message = parsedData.message) === null || _parsedData$message === void 0 ? void 0 : (_parsedData$message$i = _parsedData$message.interactiveMessage) === null || _parsedData$message$i === void 0 ? void 0 : _parsedData$message$i.nativeFlowMessage) || ((_parsedData$message2 = parsedData.message) === null || _parsedData$message2 === void 0 ? void 0 : (_parsedData$message2$ = _parsedData$message2.viewOnceMessage) === null || _parsedData$message2$ === void 0 ? void 0 : (_parsedData$message2$2 = _parsedData$message2$.message) === null || _parsedData$message2$2 === void 0 ? void 0 : (_parsedData$message2$3 = _parsedData$message2$2.interactiveMessage) === null || _parsedData$message2$3 === void 0 ? void 0 : _parsedData$message2$3.nativeFlowMessage);\n        if (!nativeFlowMessage) {\n          console.error(\"Mensagem de fluxo nativa nÃ£o encontrada.\");\n          return; // Sai da funÃ§Ã£o se nÃ£o encontrar o fluxo nativo\n        }\n        const button = (_nativeFlowMessage$bu = nativeFlowMessage.buttons) === null || _nativeFlowMessage$bu === void 0 ? void 0 : _nativeFlowMessage$bu[0]; // Considera que hÃ¡ um Ãºnico botÃ£o\n        if (!button) {\n          console.error(\"BotÃ£o nÃ£o encontrado.\");\n          return;\n        }\n        const {\n          name,\n          buttonParamsJson\n        } = button;\n        const params = JSON.parse(buttonParamsJson);\n        const numeroCobranca = params.reference_id || \"N/A\";\n        const total = ((_params$total_amount = params.total_amount) === null || _params$total_amount === void 0 ? void 0 : _params$total_amount.value) || \"N/A\";\n        const produto = ((_params$order = params.order) === null || _params$order === void 0 ? void 0 : (_params$order$items = _params$order.items) === null || _params$order$items === void 0 ? void 0 : (_params$order$items$ = _params$order$items[0]) === null || _params$order$items$ === void 0 ? void 0 : _params$order$items$.name) || \"N/A\";\n        let imagem = null;\n        if ((_nativeFlowMessage$he = nativeFlowMessage.header) === null || _nativeFlowMessage$he === void 0 ? void 0 : (_nativeFlowMessage$he2 = _nativeFlowMessage$he.imageMessage) === null || _nativeFlowMessage$he2 === void 0 ? void 0 : _nativeFlowMessage$he2.jpegThumbnail) {\n          imagem = nativeFlowMessage.header.imageMessage.jpegThumbnail;\n        } else {}\n        // Renderizar o componente PixPreview\n        return /*#__PURE__*/React.createElement(PixPreview, {\n          companyId: message.companyId,\n          avatarUser: (_message$ticket3 = message.ticket) === null || _message$ticket3 === void 0 ? void 0 : (_message$ticket3$user = _message$ticket3.user) === null || _message$ticket3$user === void 0 ? void 0 : _message$ticket3$user.profileImage,\n          avatarName: (_message$ticket4 = message.ticket) === null || _message$ticket4 === void 0 ? void 0 : (_message$ticket4$user = _message$ticket4.user) === null || _message$ticket4$user === void 0 ? void 0 : _message$ticket4$user.name,\n          avatarUrl: (_message$contact = message.contact) === null || _message$contact === void 0 ? void 0 : _message$contact.urlPicture,\n          name: (_message$contact2 = message.contact) === null || _message$contact2 === void 0 ? void 0 : _message$contact2.name,\n          numeroCobranca: numeroCobranca,\n          total: total,\n          produto: produto,\n          imagem: imagem,\n          ticketId: message === null || message === void 0 ? void 0 : (_message$ticket5 = message.ticket) === null || _message$ticket5 === void 0 ? void 0 : _message$ticket5.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 11\n          }\n        });\n      } catch (error) {\n        console.error(\"Erro ao processar a mensagem de pagamento: \", error);\n      }\n    } else if (message.mediaType === \"locationMessage\" && message.body.split('|').length >= 2) {\n      let locationParts = message.body.split('|');\n      let imageLocation = locationParts[0];\n      let linkLocation = locationParts[1];\n      let descriptionLocation = null;\n      if (locationParts.length > 2) descriptionLocation = message.body.split('|')[2];\n      return /*#__PURE__*/React.createElement(LocationPreview, {\n        image: imageLocation,\n        link: linkLocation,\n        description: descriptionLocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 12\n        }\n      });\n    } else if (message.mediaType === \"contactMessage\") {\n      var _obj$, _message$ticket6, _message$ticket7;\n      let array = message.body.split(\"\\n\");\n      let obj = [];\n      let contact = \"\";\n      for (let index = 0; index < array.length; index++) {\n        const v = array[index];\n        let values = v.split(\":\");\n        for (let ind = 0; ind < values.length; ind++) {\n          if (values[ind].indexOf(\"+\") !== -1) {\n            obj.push({\n              number: values[ind]\n            });\n          }\n          if (values[ind].indexOf(\"FN\") !== -1) {\n            contact = values[ind + 1];\n          }\n        }\n      }\n      // console.log(message)\n      return /*#__PURE__*/React.createElement(VcardPreview, {\n        contact: contact,\n        numbers: (_obj$ = obj[0]) === null || _obj$ === void 0 ? void 0 : _obj$.number,\n        queueId: message === null || message === void 0 ? void 0 : (_message$ticket6 = message.ticket) === null || _message$ticket6 === void 0 ? void 0 : _message$ticket6.queueId,\n        whatsappId: message === null || message === void 0 ? void 0 : (_message$ticket7 = message.ticket) === null || _message$ticket7 === void 0 ? void 0 : _message$ticket7.whatsappId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 14\n        }\n      });\n    } else if (message.mediaType === \"adMetaPreview\") {\n      // Adicionado para renderizar o componente de preview de anÃºncio\n      console.log(\"Entrou no MetaPreview\");\n      let [image, sourceUrl, title, body, messageUser] = message.body.split('|');\n      return /*#__PURE__*/React.createElement(AdMetaPreview, {\n        image: image,\n        sourceUrl: sourceUrl,\n        title: title,\n        body: body,\n        messageUser: messageUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 14\n        }\n      });\n    } else if (message.mediaType === \"image\") {\n      return /*#__PURE__*/React.createElement(ModalImageCors, {\n        imageUrl: message.mediaUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 16\n        }\n      });\n    } else if (message.mediaType === \"audio\") {\n      return /*#__PURE__*/React.createElement(AudioModal, {\n        url: message.mediaUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 13\n        }\n      })\n      // <audio controls>\n      //   <source src={message.mediaUrl} type=\"audio/ogg\"></source>\n      //   {/* <source src={message.mediaUrl} type=\"audio/mp3\"></source> */}\n      // </audio>\n      ;\n    } else if (message.mediaType === \"video\") {\n      return /*#__PURE__*/React.createElement(\"video\", {\n        className: classes.messageMedia,\n        src: message.mediaUrl,\n        controls: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 15\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.downloadMedia,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(GetApp, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 32\n          }\n        }),\n        variant: \"outlined\",\n        target: \"_blank\",\n        onClick: () => {\n          downloadResource(message.mediaUrl || message.body);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 19\n        }\n      }, \"Download\")), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 17\n        }\n      }));\n    }\n  };\n  const renderMessageAck = message => {\n    if (message.ack === 0) {\n      return /*#__PURE__*/React.createElement(AccessTime, {\n        fontSize: \"small\",\n        className: classes.ackIcons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 12\n        }\n      });\n    } else if (message.ack === 1) {\n      return /*#__PURE__*/React.createElement(Done, {\n        fontSize: \"small\",\n        className: classes.ackIcons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 14\n        }\n      });\n    } else if (message.ack === 2) {\n      return /*#__PURE__*/React.createElement(DoneAll, {\n        fontSize: \"small\",\n        className: classes.ackIcons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 16\n        }\n      });\n    } else if (message.ack === 3 || message.ack === 4) {\n      return /*#__PURE__*/React.createElement(DoneAll, {\n        fontSize: \"small\",\n        className: message.mediaType === \"audio\" ? classes.ackPlayedIcon : classes.ackDoneAllIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 18\n        }\n      });\n    } else if (message.ack === 5) {\n      return /*#__PURE__*/React.createElement(DoneAll, {\n        fontSize: \"small\",\n        className: classes.ackDoneAllIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n  const renderDailyTimestamps = (message, index) => {\n    const today = format(new Date(), \"dd/MM/yyyy\");\n    if (index === 0) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.dailyTimestamp,\n        key: `timestamp-${message.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.dailyTimestampText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 9\n        }\n      }, today === format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\") ? \"HOJE\" : format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\")));\n    } else if (index < messagesList.length - 1) {\n      let messageDay = parseISO(messagesList[index].createdAt);\n      let previousMessageDay = parseISO(messagesList[index - 1].createdAt);\n      if (!isSameDay(messageDay, previousMessageDay)) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: classes.dailyTimestamp,\n          key: `timestamp-${message.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.dailyTimestampText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 13\n          }\n        }, today === format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\") ? \"HOJE\" : format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\")));\n      }\n    } else if (index === messagesList.length - 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: `ref-${message.id}`,\n        ref: lastMessageRef,\n        style: {\n          float: \"left\",\n          clear: \"both\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 11\n        }\n      });\n    }\n  };\n  const renderTicketsSeparator = (message, index) => {\n    var _messagesList;\n    let lastTicket = (_messagesList = messagesList[index - 1]) === null || _messagesList === void 0 ? void 0 : _messagesList.ticketId;\n    let currentTicket = message.ticketId;\n    if (lastTicket !== currentTicket && lastTicket !== undefined) {\n      var _message$ticket8;\n      if (message === null || message === void 0 ? void 0 : (_message$ticket8 = message.ticket) === null || _message$ticket8 === void 0 ? void 0 : _message$ticket8.queue) {\n        var _message$ticket9, _message$ticket9$queu, _message$ticket0, _message$ticket0$queu;\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: classes.currentTick,\n          key: `timestamp-${message.id}a`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.currentTicktText,\n          style: {\n            backgroundColor: (message === null || message === void 0 ? void 0 : (_message$ticket9 = message.ticket) === null || _message$ticket9 === void 0 ? void 0 : (_message$ticket9$queu = _message$ticket9.queue) === null || _message$ticket9$queu === void 0 ? void 0 : _message$ticket9$queu.color) || \"grey\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 11\n          }\n        }, \"#\", i18n.t(\"ticketsList.called\"), \" \", message === null || message === void 0 ? void 0 : message.ticketId, \" - \", message === null || message === void 0 ? void 0 : (_message$ticket0 = message.ticket) === null || _message$ticket0 === void 0 ? void 0 : (_message$ticket0$queu = _message$ticket0.queue) === null || _message$ticket0$queu === void 0 ? void 0 : _message$ticket0$queu.name));\n      } else {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: classes.currentTick,\n          key: `timestamp-${message.id}b`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.currentTicktText,\n          style: {\n            backgroundColor: \"grey\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 11\n          }\n        }, \"#\", i18n.t(\"ticketsList.called\"), \" \", message.ticketId, \" - \", i18n.t(\"ticketsList.noQueue\")));\n      }\n    }\n  };\n  const renderMessageDivider = (message, index) => {\n    if (index < messagesList.length && index > 0) {\n      let messageUser = messagesList[index].fromMe;\n      let previousMessageUser = messagesList[index - 1].fromMe;\n      if (messageUser !== previousMessageUser) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            marginTop: 16\n          },\n          key: `divider-${message.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  };\n  const path = require('path');\n  const renderQuotedMessage = message => {\n    var _message$quotedMsg, _message$quotedMsg2, _message$quotedMsg3, _message$quotedMsg3$c, _message$quotedMsg4, _message$quotedMsg5;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: clsx(classes.quotedContainerLeft, {\n        [classes.quotedContainerRight]: message.fromMe\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 998,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: clsx(classes.quotedSideColorLeft, {\n        [classes.quotedSideColorRight]: (_message$quotedMsg = message.quotedMsg) === null || _message$quotedMsg === void 0 ? void 0 : _message$quotedMsg.fromMe\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.quotedMsg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 7\n      }\n    }, !((_message$quotedMsg2 = message.quotedMsg) === null || _message$quotedMsg2 === void 0 ? void 0 : _message$quotedMsg2.fromMe) && /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.messageContactName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1010,\n        columnNumber: 11\n      }\n    }, (_message$quotedMsg3 = message.quotedMsg) === null || _message$quotedMsg3 === void 0 ? void 0 : (_message$quotedMsg3$c = _message$quotedMsg3.contact) === null || _message$quotedMsg3$c === void 0 ? void 0 : _message$quotedMsg3$c.name), message.quotedMsg.mediaType === \"audio\" && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.downloadMedia,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AudioModal, {\n      url: message.quotedMsg.mediaUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1018,\n        columnNumber: 15\n      }\n    })), message.quotedMsg.mediaType === \"video\" && /*#__PURE__*/React.createElement(\"video\", {\n      className: classes.messageMedia,\n      src: message.quotedMsg.mediaUrl,\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1029,\n        columnNumber: 13\n      }\n    }), message.quotedMsg.mediaType === \"contactMessage\" && \"Contato\", message.quotedMsg.mediaType === \"application\" && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.downloadMedia,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      startIcon: /*#__PURE__*/React.createElement(GetApp, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 28\n        }\n      })\n      // color=\"primary\"\n      ,\n      variant: \"outlined\",\n      target: \"_blank\",\n      href: message.quotedMsg.mediaUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 15\n      }\n    }, \"Download\")), message.quotedMsg.mediaType === \"image\" && /*#__PURE__*/React.createElement(ModalImageCors, {\n      imageUrl: message.quotedMsg.mediaUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1059,\n        columnNumber: 13\n      }\n    }) || ((_message$quotedMsg4 = message.quotedMsg) === null || _message$quotedMsg4 === void 0 ? void 0 : _message$quotedMsg4.body), !message.quotedMsg.mediaType === \"image\" && ((_message$quotedMsg5 = message.quotedMsg) === null || _message$quotedMsg5 === void 0 ? void 0 : _message$quotedMsg5.body)));\n  };\n  const handleDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.type === \"dragenter\" || event.type === \"dragover\") {\n      setDragActive(true);\n    } else if (event.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n  const isYouTubeLink = url => {\n    const youtubeRegex = /(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/;\n    return youtubeRegex.test(url);\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    setDragActive(false);\n    if (event.dataTransfer.files && event.dataTransfer.files[0]) {\n      if (onDrop) {\n        onDrop(event.dataTransfer.files);\n      }\n    }\n  };\n  const xmlRegex = /<([^>]+)>/g;\n  const boldRegex = /\\*(.*?)\\*/g;\n  const formatXml = xmlString => {\n    // Verifica se o XML contÃ©m a assinatura com nome do atendente\n    if (boldRegex.test(xmlString)) {\n      // Formata o texto dentro da assinatura em negrito\n      xmlString = xmlString.replace(boldRegex, \"**$1**\");\n    }\n    return xmlString;\n  };\n  const renderMessages = () => {\n    if (messagesList.length > 0) {\n      const viewMessagesList = messagesList.map((message, index) => {\n        if (message.mediaType === \"call_log\") {\n          var _message$contact3;\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            key: message.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 11\n            }\n          }, renderDailyTimestamps(message, index), renderTicketsSeparator(message, index), renderMessageDivider(message, index), /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.messageCenter,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1117,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            variant: \"contained\",\n            size: \"small\",\n            id: \"messageActionsButton\",\n            disabled: message.isDeleted,\n            className: classes.messageActionsButton,\n            onClick: e => handleOpenMessageOptionsMenu(e, message),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(ExpandMore, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 17\n            }\n          })), isGroup && /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.messageContactName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1129,\n              columnNumber: 17\n            }\n          }, (_message$contact3 = message.contact) === null || _message$contact3 === void 0 ? void 0 : _message$contact3.name), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 20 17\",\n            width: \"20\",\n            height: \"17\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1140,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"path\", {\n            fill: \"#df3333\",\n            d: \"M18.2 12.1c-1.5-1.8-5-2.7-8.2-2.7s-6.7 1-8.2 2.7c-.7.8-.3 2.3.2 2.8.2.2.3.3.5.3 1.4 0 3.6-.7 3.6-.7.5-.2.8-.5.8-1v-1.3c.7-1.2 5.4-1.2 6.4-.1l.1.1v1.3c0 .2.1.4.2.6.1.2.3.3.5.4 0 0 2.2.7 3.6.7.2 0 1.4-2 .5-3.1zM5.4 3.2l4.7 4.6 5.8-5.7-.9-.8L10.1 6 6.4 2.3h2.5V1H4.1v4.8h1.3V3.2z\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1141,\n              columnNumber: 19\n            }\n          })), \" \", /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1142,\n              columnNumber: 24\n            }\n          }, i18n.t(\"ticketsList.missedCall\"), \" \", format(parseISO(message.createdAt), \"HH:mm\")))));\n        }\n        if (!message.fromMe) {\n          var _message$queue, _message$contact4, _message$contact5;\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            key: message.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1151,\n              columnNumber: 11\n            }\n          }, renderDailyTimestamps(message, index), renderTicketsSeparator(message, index), renderMessageDivider(message, index), /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.messageLeft,\n            title: message.queueId && ((_message$queue = message.queue) === null || _message$queue === void 0 ? void 0 : _message$queue.name),\n            onDoubleClick: e => hanldeReplyMessage(e, message),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1155,\n              columnNumber: 13\n            }\n          }, showSelectMessageCheckbox && /*#__PURE__*/React.createElement(SelectMessageCheckbox\n          // showSelectMessageCheckbox={showSelectMessageCheckbox}\n          , {\n            message: message\n            // selectedMessagesList={selectedMessagesList}\n            // setSelectedMessagesList={setSelectedMessagesList}\n            ,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(IconButton, {\n            variant: \"contained\",\n            size: \"small\",\n            id: \"messageActionsButton\",\n            disabled: message.isDeleted,\n            className: classes.messageActionsButton,\n            onClick: e => handleOpenMessageOptionsMenu(e, message),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1168,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(ExpandMore, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1176,\n              columnNumber: 17\n            }\n          })), message.isForwarded && /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1180,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.forwardMessage,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1181,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Reply, {\n            style: {\n              color: \"grey\",\n              transform: 'scaleX(-1)'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1182,\n              columnNumber: 20\n            }\n          }), \" Encaminhada\"), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1184,\n              columnNumber: 19\n            }\n          })), isGroup && /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.messageContactName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1188,\n              columnNumber: 17\n            }\n          }, (_message$contact4 = message.contact) === null || _message$contact4 === void 0 ? void 0 : _message$contact4.name), isYouTubeLink(message.body) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(YouTubePreview, {\n            videoUrl: message.body,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1194,\n              columnNumber: 19\n            }\n          })), !lgpdDeleteMessage && message.isDeleted && /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.deletedMessage,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1207,\n              columnNumber: 19\n            }\n          }, \"\\uD83D\\uDEAB Essa mensagem foi apagada pelo contato \\xA0\")), (message.mediaUrl || message.mediaType === \"locationMessage\" || message.mediaType === \"contactMessage\" || message.mediaType === \"pollCreationMessageV3\" || message.mediaType === \"eventMessage\" || message.mediaType === \"listMessage\" || message.mediaType === \"viewOnceMessage\" || message.mediaType === \"interactiveMessage\" || message.mediaType === \"adMetaPreview\" // Adicionado para aceitar o componente de preview de anÃºncio\n          //|| message.mediaType === \"multi_vcard\" \n          ) && checkMessageMedia(message), /*#__PURE__*/React.createElement(\"div\", {\n            className: clsx(classes.textContentItem, {\n              [classes.textContentItemDeleted]: message.isDeleted\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1217,\n              columnNumber: 15\n            }\n          }, message.quotedMsg && renderQuotedMessage(message), (message.mediaUrl !== null && (message.mediaType === \"image\" || message.mediaType === \"video\") && path.basename(message.mediaUrl).trim() !== message.body.trim() || message.mediaType !== \"audio\" && message.mediaType !== \"image\" && message.mediaType !== \"video\" && message.mediaType != \"reactionMessage\" && message.mediaType != \"locationMessage\" && message.mediaType !== \"contactMessage\" && message.mediaType != \"pollCreationMessageV3\" && message.mediaType != \"eventMessage\" && message.mediaType != \"listMessage\" && message.mediaType != \"viewOnceMessage\" && message.mediaType != \"interactiveMessage\" && message.mediaType !== \"adMetaPreview\") && /*#__PURE__*/React.createElement(React.Fragment, null, xmlRegex.test(message.body) && /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1234,\n              columnNumber: 25\n            }\n          }, message.body), !xmlRegex.test(message.body) && /*#__PURE__*/React.createElement(MarkdownWrapper, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1238,\n              columnNumber: 25\n            }\n          }, lgpdDeleteMessage && message.isDeleted ? \"ð« _Mensagem apagada_ \" : message.body)), message.quotedMsg && message.mediaType === \"reactionMessage\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              marginLeft: \"0px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1248,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(MarkdownWrapper, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1249,\n              columnNumber: 23\n            }\n          }, \"\" + (message === null || message === void 0 ? void 0 : (_message$contact5 = message.contact) === null || _message$contact5 === void 0 ? void 0 : _message$contact5.name) + \" reagiu... \" + message.body))), /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.timestamp,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1256,\n              columnNumber: 17\n            }\n          }, message.isEdited ? \"Editada \" + format(parseISO(message.createdAt), \"HH:mm\") : format(parseISO(message.createdAt), \"HH:mm\")))));\n        } else {\n          var _message$queue2;\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            key: message.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1265,\n              columnNumber: 11\n            }\n          }, renderDailyTimestamps(message, index), renderTicketsSeparator(message, index), renderMessageDivider(message, index), /*#__PURE__*/React.createElement(\"div\", {\n            className: message.isPrivate ? classes.messageRightPrivate : classes.messageRight,\n            title: message.queueId && ((_message$queue2 = message.queue) === null || _message$queue2 === void 0 ? void 0 : _message$queue2.name),\n            onDoubleClick: e => hanldeReplyMessage(e, message),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1269,\n              columnNumber: 13\n            }\n          }, showSelectMessageCheckbox && /*#__PURE__*/React.createElement(SelectMessageCheckbox\n          // showSelectMessageCheckbox={showSelectMessageCheckbox}\n          , {\n            message: message\n            // selectedMessagesList={selectedMessagesList}\n            // setSelectedMessagesList={setSelectedMessagesList}\n            ,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1275,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(IconButton, {\n            variant: \"contained\",\n            size: \"small\",\n            id: \"messageActionsButton\",\n            disabled: message.isDeleted,\n            className: classes.messageActionsButton,\n            onClick: e => handleOpenMessageOptionsMenu(e, message),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1283,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(ExpandMore, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1291,\n              columnNumber: 17\n            }\n          })), message.isForwarded && /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1294,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.forwardMessage,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1295,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Reply, {\n            style: {\n              color: \"grey\",\n              transform: 'scaleX(-1)'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1296,\n              columnNumber: 20\n            }\n          }), \" Encaminhada\"), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1298,\n              columnNumber: 19\n            }\n          })), isYouTubeLink(message.body) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(YouTubePreview, {\n            videoUrl: message.body,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1303,\n              columnNumber: 19\n            }\n          })), !lgpdDeleteMessage && message.isDeleted && /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1307,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.deletedMessage,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1308,\n              columnNumber: 19\n            }\n          }, \"\\uD83D\\uDEAB Essa mensagem foi apagada \\xA0\")), (message.mediaUrl || message.mediaType === \"locationMessage\" || message.mediaType === \"contactMessage\" || message.mediaType === \"pollCreationMessageV3\" || message.mediaType === \"eventMessage\" || message.mediaType === \"listMessage\" || message.mediaType === \"viewOnceMessage\" || message.mediaType === \"interactiveMessage\" || message.mediaType === \"adMetaPreview\" // Adicionado para aceitar o componente de preview de anÃºncio\n          //|| message.mediaType === \"multi_vcard\" \n          ) && checkMessageMedia(message), /*#__PURE__*/React.createElement(\"div\", {\n            className: clsx(classes.textContentItem, {\n              [classes.textContentItemDeleted]: message.isDeleted\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1316,\n              columnNumber: 15\n            }\n          }, message.quotedMsg && renderQuotedMessage(message), (message.mediaType === \"image\" || message.mediaType === \"video\") && path.basename(message.mediaUrl) === message.body || message.mediaType !== \"audio\" && message.mediaType != \"reactionMessage\" && message.mediaType != \"locationMessage\" && message.mediaType !== \"contactMessage\" && message.mediaType != \"pollCreationMessageV3\" && message.mediaType != \"eventMessage\" && message.mediaType != \"listMessage\" && message.mediaType != \"viewOnceMessage\" && message.mediaType != \"interactiveMessage\" && message.mediaType !== \"adMetaPreview\" && /*#__PURE__*/React.createElement(React.Fragment, null, xmlRegex.test(message.body) && /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1336,\n              columnNumber: 25\n            }\n          }, formatXml(message.body)), !xmlRegex.test(message.body) && /*#__PURE__*/React.createElement(MarkdownWrapper, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1339,\n              columnNumber: 57\n            }\n          }, message.body)), message.quotedMsg && message.mediaType === \"reactionMessage\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              marginLeft: \"0px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1346,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(MarkdownWrapper, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1347,\n              columnNumber: 23\n            }\n          }, \"VocÃª reagiu... \" + message.body))), /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.timestamp,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1354,\n              columnNumber: 17\n            }\n          }, message.isEdited ? \"Editada \" + format(parseISO(message.createdAt), \"HH:mm\") : format(parseISO(message.createdAt), \"HH:mm\"), renderMessageAck(message)))));\n        }\n      });\n      return viewMessagesList;\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1366,\n          columnNumber: 12\n        }\n      }, \"Diga ol\\xE1 para seu novo contato!\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.messagesListWrapper,\n    onDragEnter: handleDrag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1371,\n      columnNumber: 3\n    }\n  }, dragActive && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dragElement,\n    onDragEnter: handleDrag,\n    onDragLeave: handleDrag,\n    onDragOver: handleDrag,\n    onDrop: handleDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1372,\n      columnNumber: 20\n    }\n  }, \"Solte o arquivo aqui\"), /*#__PURE__*/React.createElement(MessageOptionsMenu, {\n    message: selectedMessage,\n    anchorEl: anchorEl,\n    menuOpen: messageOptionsMenuOpen,\n    handleClose: handleCloseMessageOptionsMenu,\n    isGroup: isGroup,\n    whatsappId: whatsappId,\n    queueId: queueId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1374,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"messagesList\",\n    className: classes.messagesList,\n    onScroll: handleScroll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1383,\n      columnNumber: 5\n    }\n  }, messagesList.length > 0 ? renderMessages() : []), channel !== \"whatsapp\" && channel !== undefined && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      padding: \"10px\",\n      alignItems: \"center\",\n      backgroundColor: \"#E1F3FB\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1394,\n      columnNumber: 7\n    }\n  }, channel === \"facebook\" ? /*#__PURE__*/React.createElement(Facebook, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1404,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Instagram, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1406,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1409,\n      columnNumber: 9\n    }\n  }, \"Voc\\xEA tem 24h para responder ap\\xF3s receber uma mensagem, de acordo com as pol\\xEDticas do Facebook.\")), loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1416,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    className: classes.circleLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1417,\n      columnNumber: 9\n    }\n  })));\n};\nexport default MessagesList;","map":{"version":3,"names":["React","useContext","useState","useEffect","useReducer","useRef","memo","useCallback","isSameDay","parseISO","format","clsx","isNil","blue","green","red","Button","CircularProgress","Divider","IconButton","makeStyles","Badge","AccessTime","Block","Done","DoneAll","ExpandMore","GetApp","Facebook","Instagram","Reply","Close","MarkdownWrapper","VcardPreview","LocationPreview","ModalImageCors","MessageOptionsMenu","whatsBackground","whatsBackgroundDark","YouTubePreview","ListPreview","PixPreview","ButtonPreview","EventPreview","ReplyMessageContext","ForwardMessageContext","api","toastError","AdMetaPreview","i18n","SelectMessageCheckbox","useCompanySettings","AuthContext","QueueSelectedContext","AudioModal","messages","useParams","useHistory","downloadResource","useStyles","theme","messagesListWrapper","overflow","position","display","flexDirection","flexGrow","width","minWidth","minHeight","currentTick","alignItems","textAlign","alignSelf","backgroundColor","palette","primary","main","margin","borderRadius","boxShadow","currentTicktText","color","fontWeight","padding","marginLeft","messagesList","backgroundImage","mode","overflowY","scrollbarStyles","dragElement","background","height","zIndex","fontSize","border","justifyContent","circleLoading","opacity","top","left","marginTop","messageLeft","marginRight","maxWidth","right","whiteSpace","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","paddingLeft","paddingRight","paddingTop","paddingBottom","quotedContainerLeft","quotedMsg","quotedSideColorLeft","flex","messageRight","messageRightPrivate","quotedContainerRight","quotedMsgRight","quotedSideColorRight","messageActionsButton","messageContactName","textContentItem","overflowWrap","textContentItemDeleted","fontStyle","messageMedia","objectFit","timestamp","bottom","forwardMessage","dailyTimestamp","dailyTimestampText","ackIcons","verticalAlign","deletedIcon","ackDoneAllIcon","ackPlayedIcon","downloadMedia","light","dark","messageCenter","alignContent","deletedMessage","reducer","state","action","type","payload","newMessages","forEach","message","messageIndex","findIndex","m","id","push","newMessage","messageToUpdate","MessagesList","isGroup","onDrop","whatsappId","queueId","channel","classes","dispatch","pageNumber","setPageNumber","hasMore","setHasMore","loading","setLoading","loadingMore","setLoadingMore","history","lastMessageRef","selectedMessage","setSelectedMessage","setReplyingMessage","anchorEl","setAnchorEl","messageOptionsMenuOpen","Boolean","ticketId","currentTicketId","getAll","dragActive","setDragActive","lgpdDeleteMessage","setLGPDDeleteMessage","selectedQueuesMessage","showSelectMessageCheckbox","user","socket","companyId","fetchData","settings","settinglgpdDeleteMessage","settingEnableLGPD","key","value","Object","entries","current","delayDebounceFn","setTimeout","fetchMessages","data","get","params","selectedQueues","JSON","stringify","length","scrollToBottom","err","clearTimeout","connectEventMessagesList","emit","onAppMessageMessagesList","_data$message","_data$message$ticket","_data$message$ticket2","ticket","uuid","messageId","on","off","loadMore","prevPageNumber","scrollIntoView","handleScroll","e","scrollTop","currentTarget","document","getElementById","handleOpenMessageOptionsMenu","handleCloseMessageOptionsMenu","hanldeReplyMessage","checkMessageMedia","console","log","mediaType","_eventMessage$locatio","parsedData","parse","dataJson","eventMessage","titulo","name","descricao","description","local","location","link","joinLink","linkTipo","includes","startTime","Number","endTime","formatDateTime","date","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","time","toLocaleTimeString","hour","minute","createElement","linkType","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","error","_message$ticket","listMessage","title","rodape","footerText","secoes","rows","sections","section","index","currentSection","row","rowIndex","idLinha","rowId","linhas","textoBotao","buttonText","body","startsWith","_viewOnceMessage$body","_viewOnceMessage$foot","_viewOnceMessage$nati","_viewOnceMessage$nati2","_viewOnceMessage$head","_viewOnceMessage$head2","_message$ticket2","dataJsonString","viewOnceMessage","interactiveMessage","text","footer","botoes","nativeFlowMessage","buttons","map","button","buttonParamsJson","tipo","texto","display_text","conteudo","phoneNumber","url","copy_code","imagem","header","imageMessage","jpegThumbnail","_parsedData$message","_parsedData$message$i","_parsedData$message2","_parsedData$message2$","_parsedData$message2$2","_parsedData$message2$3","_nativeFlowMessage$bu","_params$total_amount","_params$order","_params$order$items","_params$order$items$","_nativeFlowMessage$he","_nativeFlowMessage$he2","_message$ticket3","_message$ticket3$user","_message$ticket4","_message$ticket4$user","_message$contact","_message$contact2","_message$ticket5","numeroCobranca","reference_id","total","total_amount","produto","order","items","avatarUser","profileImage","avatarName","avatarUrl","contact","urlPicture","split","locationParts","imageLocation","linkLocation","descriptionLocation","image","_obj$","_message$ticket6","_message$ticket7","array","obj","v","values","ind","indexOf","number","numbers","sourceUrl","messageUser","imageUrl","mediaUrl","className","src","controls","Fragment","startIcon","variant","target","onClick","renderMessageAck","ack","renderDailyTimestamps","today","createdAt","messageDay","previousMessageDay","ref","style","float","clear","renderTicketsSeparator","_messagesList","lastTicket","currentTicket","undefined","_message$ticket8","queue","_message$ticket9","_message$ticket9$queu","_message$ticket0","_message$ticket0$queu","t","renderMessageDivider","fromMe","previousMessageUser","path","require","renderQuotedMessage","_message$quotedMsg","_message$quotedMsg2","_message$quotedMsg3","_message$quotedMsg3$c","_message$quotedMsg4","_message$quotedMsg5","href","handleDrag","event","preventDefault","stopPropagation","isYouTubeLink","youtubeRegex","test","handleDrop","dataTransfer","files","xmlRegex","boldRegex","formatXml","xmlString","replace","renderMessages","viewMessagesList","_message$contact3","size","disabled","isDeleted","xmlns","viewBox","fill","d","_message$queue","_message$contact4","_message$contact5","onDoubleClick","isForwarded","transform","videoUrl","basename","trim","isEdited","_message$queue2","isPrivate","onDragEnter","onDragLeave","onDragOver","menuOpen","handleClose","onScroll"],"sources":["/workspaces/simao/whaticket/frontend/src/components/MessagesList/index.js"],"sourcesContent":["import React, { useContext, useState, useEffect, useReducer, useRef, memo, useCallback } from \"react\";\nimport { isSameDay, parseISO, format } from \"date-fns\";\nimport clsx from \"clsx\";\nimport { isNil } from \"lodash\";\nimport { blue, green, red } from \"@material-ui/core/colors\";\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  IconButton,\n  makeStyles,\n  Badge\n} from \"@material-ui/core\";\n\nimport {\n  AccessTime,\n  Block,\n  Done,\n  DoneAll,\n  ExpandMore,\n  GetApp,\n  Facebook,\n  Instagram,\n  Reply,\n  Close,\n} from \"@material-ui/icons\";\n\nimport MarkdownWrapper from \"../MarkdownWrapper\";\nimport VcardPreview from \"../VcardPreview\";\nimport LocationPreview from \"../LocationPreview\";\nimport ModalImageCors from \"../ModalImageCors\";\nimport MessageOptionsMenu from \"../MessageOptionsMenu\";\nimport whatsBackground from \"../../assets/wa-background.png\";\nimport whatsBackgroundDark from \"../../assets/wa-background-dark.png\";\nimport YouTubePreview from \"../ModalYoutubeCors\";\nimport ListPreview from \"../ListPreview\";\nimport PixPreview from \"../PixPreview\";\nimport ButtonPreview from \"../ButtonPreview\";\nimport EventPreview from \"../EventPreview\";\nimport { ReplyMessageContext } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport { ForwardMessageContext } from \"../../context/ForwarMessage/ForwardMessageContext\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport AdMetaPreview from \"../AdMetaPreview\"; // Adicionado componente de preview de anÃºncio\n// import { SocketContext } from \"../../context/Socket/SocketContext\";\nimport { i18n } from \"../../translate/i18n\";\nimport SelectMessageCheckbox from \"./SelectMessageCheckbox\";\nimport useCompanySettings from \"../../hooks/useSettings/companySettings\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { QueueSelectedContext } from \"../../context/QueuesSelected/QueuesSelectedContext\";\nimport AudioModal from \"../AudioModal\";\nimport { messages } from \"../../translate/languages\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport { downloadResource } from \"../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  messagesListWrapper: {\n    overflow: \"hidden\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    width: \"100%\",\n    minWidth: 300,\n    minHeight: 200,\n  },\n\n  currentTick: {\n    alignItems: \"center\",\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    width: \"95%\",\n    backgroundColor: theme.palette.primary.main,\n    margin: \"10px\",\n    borderRadius: \"10px\",\n    boxShadow: \"1px 5px 10px #b3b3b3\",\n  },\n\n  currentTicktText: {\n    color: theme.palette.primary,\n    fontWeight: 'bold',\n    padding: 8,\n    alignSelf: \"center\",\n    marginLeft: \"0px\",\n  },\n\n  messagesList: {\n    backgroundImage: theme.mode === 'light' ? `url(${whatsBackground})` : `url(${whatsBackgroundDark})`,\n    backgroundColor: theme.mode === 'light' ? \"transparent\" : \"#0b0b0d\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    padding: \"20px 20px 30px 20px\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  dragElement: {\n    background: 'rgba(255, 255, 255, 0.8)',\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 999999,\n    textAlign: \"center\",\n    fontSize: \"3em\",\n    border: \"5px dashed #333\",\n    color: '#333',\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  circleLoading: {\n    color: blue[500],\n    position: \"absolute\",\n    opacity: \"70%\",\n    top: 0,\n    left: \"50%\",\n    marginTop: 12,\n  },\n\n  messageLeft: {\n    marginRight: 20,\n    marginTop: 2,\n    minWidth: 100,\n    maxWidth: 600,\n    height: \"auto\",\n    display: \"block\",\n    position: \"relative\",\n    \"&:hover #messageActionsButton\": {\n      display: \"flex\",\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n    },\n\n    whiteSpace: \"pre-wrap\",\n    backgroundColor: theme.mode === 'light' ? \"#ffffff\" : \"#202c33\",\n    color: theme.mode === 'light' ? \"#303030\" : \"#ffffff\",\n    alignSelf: \"flex-start\",\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: theme.mode === 'light' ? \"0 1px 1px #b3b3b3\" : \"0 1px 1px #000000\"\n  },\n\n  quotedContainerLeft: {\n    margin: \"-3px -80px 6px -6px\",\n    overflow: \"hidden\",\n    backgroundColor: theme.mode === 'light' ? \"#f0f0f0\" : \"#1d282f\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\",\n  },\n\n  quotedMsg: {\n    padding: 10,\n    maxWidth: 300,\n    height: \"auto\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\",\n    overflow: \"hidden\",\n  },\n\n  quotedSideColorLeft: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#388aff\",\n  },\n\n  messageRight: {\n    marginLeft: 20,\n    marginTop: 2,\n    minWidth: 100,\n    maxWidth: 600,\n    height: \"auto\",\n    display: \"block\",\n    position: \"relative\",\n    \"&:hover #messageActionsButton\": {\n      display: \"flex\",\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n    },\n    whiteSpace: \"pre-wrap\",\n    backgroundColor: theme.mode === 'light' ? \"#dcf8c6\" : \"#005c4b\",\n    color: theme.mode === 'light' ? \"#303030\" : \"#ffffff\",\n    alignSelf: \"flex-end\",\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 0,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: theme.mode === 'light' ? \"0 1px 1px #b3b3b3\" : \"0 1px 1px #000000\"\n  },\n\n  messageRightPrivate: {\n    marginLeft: 20,\n    marginTop: 2,\n    minWidth: 100,\n    maxWidth: 600,\n    height: \"auto\",\n    display: \"block\",\n    position: \"relative\",\n    \"&:hover #messageActionsButton\": {\n      display: \"flex\",\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n    },\n    whiteSpace: \"pre-wrap\",\n    backgroundColor: \"#F0E68C\",\n    color: \"#303030\",\n    alignSelf: \"flex-end\",\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 0,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: theme.mode === 'light' ? \"0 1px 1px #b3b3b3\" : \"0 1px 1px #000000\"\n  },\n\n  quotedContainerRight: {\n    margin: \"-3px -80px 6px -6px\",\n    overflowY: \"hidden\",\n    backgroundColor: theme.mode === 'light' ? \"#cfe9ba\" : \"#025144\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\",\n  },\n\n  quotedMsgRight: {\n    padding: 10,\n    maxWidth: 300,\n    height: \"auto\",\n    whiteSpace: \"pre-wrap\",\n  },\n\n  quotedSideColorRight: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#35cd96\",\n  },\n\n  messageActionsButton: {\n    display: \"none\",\n    position: \"relative\",\n    color: \"#999\",\n    zIndex: 1,\n    backgroundColor: \"inherit\",\n    opacity: \"90%\",\n    \"&:hover, &.Mui-focusVisible\": { backgroundColor: \"inherit\" },\n  },\n\n  messageContactName: {\n    display: \"flex\",\n    color: \"#6bcbef\",\n    fontWeight: 500,\n  },\n\n  textContentItem: {\n    overflowWrap: \"break-word\",\n    padding: \"3px 80px 6px 6px\",\n  },\n\n  textContentItemDeleted: {\n    fontStyle: \"italic\",\n    color: \"rgba(0, 0, 0, 0.36)\",\n    overflowWrap: \"break-word\",\n    padding: \"3px 80px 6px 6px\",\n  },\n\n  messageMedia: {\n    objectFit: \"cover\",\n    width: 400,\n    height: \"auto\",\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8,\n  },\n\n  timestamp: {\n    fontSize: 11,\n    position: \"absolute\",\n    bottom: 0,\n    right: 5,\n    color: \"#999\",\n  },\n\n  forwardMessage: {\n    fontSize: 12,\n    fontStyle: \"italic\",\n    position: \"absolute\",\n    top: 0,\n    left: 5,\n    color: \"#999\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n\n  dailyTimestamp: {\n    alignItems: \"center\",\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    width: \"110px\",\n    backgroundColor: \"#e1f3fb\",\n    margin: \"10px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 1px 1px #b3b3b3\",\n  },\n\n  dailyTimestampText: {\n    color: \"#808888\",\n    padding: 8,\n    alignSelf: \"center\",\n    marginLeft: \"0px\",\n  },\n\n  ackIcons: {\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginLeft: 4,\n  },\n\n  deletedIcon: {\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginRight: 4,\n  },\n\n  ackDoneAllIcon: {\n    color: blue[500],\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginLeft: 4,\n  },\n\n  ackPlayedIcon: {\n    color: green[500],\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginLeft: 4,\n  },\n  downloadMedia: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"inherit\",\n    padding: 10,\n    color: theme.mode === \"light\" ? theme.palette.light : theme.palette.dark,\n  },\n\n  messageCenter: {\n    marginTop: 5,\n    alignItems: \"center\",\n    verticalAlign: \"center\",\n    alignContent: \"center\",\n    backgroundColor: \"#E1F5FEEB\",\n    fontSize: \"12px\",\n    minWidth: 100,\n    maxWidth: 270,\n    color: \"#272727\",\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: \"0 1px 1px #b3b3b3\",\n  },\n\n  deletedMessage: {\n    color: '#f55d65'\n  }\n}));\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_MESSAGES\") {\n    const messages = action.payload;\n    const newMessages = [];\n\n    messages.forEach((message) => {\n\n      const messageIndex = state.findIndex((m) => m.id === message.id);\n      if (messageIndex !== -1) {\n        state[messageIndex] = message;\n      } else {\n        newMessages.push(message);\n      }\n    });\n\n    return [...newMessages, ...state];\n  }\n\n  if (action.type === \"ADD_MESSAGE\") {\n    const newMessage = action.payload;\n    const messageIndex = state.findIndex((m) => m.id === newMessage.id);\n\n    if (messageIndex !== -1) {\n      state[messageIndex] = newMessage;\n    } else {\n      state.push(newMessage);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_MESSAGE\") {\n    const messageToUpdate = action.payload;\n    const messageIndex = state.findIndex((m) => m.id === messageToUpdate.id);\n\n    if (messageIndex !== -1) {\n      state[messageIndex] = messageToUpdate;\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst MessagesList = ({\n  isGroup,\n  onDrop,\n  whatsappId,\n  queueId,\n  channel\n}) => {\n  const classes = useStyles();\n  const [messagesList, dispatch] = useReducer(reducer, []);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const history = useHistory();\n  const lastMessageRef = useRef();\n\n  const [selectedMessage, setSelectedMessage] = useState({});\n  const { setReplyingMessage } = useContext(ReplyMessageContext);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const messageOptionsMenuOpen = Boolean(anchorEl);\n  const { ticketId } = useParams();\n\n  const currentTicketId = useRef(ticketId);\n  const { getAll } = useCompanySettings();\n  const [dragActive, setDragActive] = useState(false);\n\n  const [lgpdDeleteMessage, setLGPDDeleteMessage] = useState(false);\n  const { selectedQueuesMessage } = useContext(QueueSelectedContext);\n\n  const { showSelectMessageCheckbox } = useContext(ForwardMessageContext);\n\n  const { user, socket } = useContext(AuthContext);\n\n  const companyId = user.companyId;\n\n  useEffect(() => {\n\n    async function fetchData() {\n\n      const settings = await getAll(companyId);\n\n      let settinglgpdDeleteMessage;\n      let settingEnableLGPD;\n\n      for (const [key, value] of Object.entries(settings)) {\n\n        if (key === \"lgpdDeleteMessage\") settinglgpdDeleteMessage = value\n        if (key === \"enableLGPD\") settingEnableLGPD = value\n      }\n      if (settingEnableLGPD === \"enabled\" && settinglgpdDeleteMessage === \"enabled\") {\n        setLGPDDeleteMessage(true);\n      }\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n\n    currentTicketId.current = ticketId;\n  }, [ticketId, selectedQueuesMessage]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchMessages = async () => {\n        if (ticketId === \"undefined\") {\n          history.push(\"/tickets\");\n          return;\n        }\n        if (isNil(ticketId)) return;\n        try {\n          const { data } = await api.get(\"/messages/\" + ticketId, {\n            params: { pageNumber, selectedQueues: JSON.stringify(selectedQueuesMessage) },\n          });\n\n          if (currentTicketId.current === ticketId) {\n            dispatch({ type: \"LOAD_MESSAGES\", payload: data.messages });\n            setHasMore(data.hasMore);\n            setLoading(false);\n            setLoadingMore(false);\n          }\n\n          if (pageNumber === 1 && data.messages.length > 1) {\n            scrollToBottom();\n          }\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n          setLoadingMore(false);\n        }\n      };\n\n      fetchMessages();\n    }, 500);\n    return () => {\n      clearTimeout(delayDebounceFn);\n    };\n  }, [pageNumber, ticketId, selectedQueuesMessage]);\n\n  useEffect(() => {\n    if (ticketId === \"undefined\") {\n      return;\n    }\n\n    const companyId = user.companyId;\n\n    //    const socket = socketManager.GetSocket();\n    const connectEventMessagesList = () => {\n      socket.emit(\"joinChatBox\", `${ticketId}`);\n    }\n\n    const onAppMessageMessagesList = (data) => {\n      if (data.action === \"create\" && data.ticket.uuid === ticketId) {\n        dispatch({ type: \"ADD_MESSAGE\", payload: data.message });\n        scrollToBottom();\n      }\n\n      if (data.action === \"update\" && data?.message?.ticket?.uuid === ticketId) {\n        dispatch({ type: \"UPDATE_MESSAGE\", payload: data.message });\n      }\n\n      if (data.action == \"delete\" && data.message.ticket?.uuid === ticketId) {\n        dispatch({ type: \"DELETE_MESSAGE\", payload: data.messageId });\n      }\n    }\n    socket.on(\"connect\", connectEventMessagesList);\n    socket.on(`company-${companyId}-appMessage`, onAppMessageMessagesList);\n\n    return () => {\n\n      socket.emit(\"joinChatBoxLeave\", `${ticketId}`)\n\n      socket.off(\"connect\", connectEventMessagesList);\n      socket.off(`company-${companyId}-appMessage`, onAppMessageMessagesList);\n    };\n\n  }, [ticketId]);\n\n  const loadMore = () => {\n    if (loadingMore) return;\n    setLoadingMore(true);\n    setPageNumber((prevPageNumber) => prevPageNumber + 1);\n  };\n\nconst scrollToBottom = () => {\n  setTimeout(() => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({});\n    }\n  }, 100);\n};\n\nconst handleScroll = (e) => {\n  if (!hasMore) return;\n  const { scrollTop } = e.currentTarget;\n\n  if (scrollTop === 0) {\n    document.getElementById(\"messagesList\").scrollTop = 1;\n  }\n\n  if (loading) {\n    return;\n  }\n\n  if (scrollTop < 50) {\n    loadMore();\n  }\n};\n\nconst handleOpenMessageOptionsMenu = (e, message) => {\n  setAnchorEl(e.currentTarget);\n  setSelectedMessage(message);\n};\n\nconst handleCloseMessageOptionsMenu = (e) => {\n  setAnchorEl(null);\n};\n\nconst hanldeReplyMessage = (e, message) => {\n  //if (ticket.status === \"open\" || ticket.status === \"group\") {\n  setAnchorEl(null);\n  setReplyingMessage(message);\n  //}\n};\n\nconst checkMessageMedia = (message) => {\n  console.log(message)\n  if (message.mediaType === \"eventMessage\") {\n    try {\n      // Parsear o dataJson diretamente da coluna do banco de dados\n      const parsedData = JSON.parse(message.dataJson);\n      const eventMessage = parsedData.message.eventMessage;\n  \n      const titulo = eventMessage.name || \"Sem tÃ­tulo\";\n      const descricao = eventMessage.description || \"Sem descriÃ§Ã£o\";\n      const local = eventMessage.location?.name || \"Local nÃ£o especificado\";\n      const link = eventMessage.joinLink || \"#\";\n      const linkTipo = link.includes(\"video\") ? \"video\" : \"voice\";\n  \n      // Converter timestamps para data/hora formatada\n      const startTime = Number(eventMessage.startTime); // Em segundos\n      const endTime = startTime + 7200; // Exemplo: reuniÃ£o de 2h\n  \n      const formatDateTime = (timestamp) => {\n        const date = new Date(timestamp * 1000);\n        const day = String(date.getDate()).padStart(2, '0');\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const year = date.getFullYear();\n        const time = date.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });\n        return `${day}/${month}/${year}, ${time}`;\n      };\n  \n      return (\n        <EventPreview\n          name={titulo}\n          description={descricao}\n          location={local}\n          startTime={startTime}\n          endTime={endTime}\n          joinLink={link}\n          linkType={linkTipo}\n        />\n      );\n    } catch (error) {\n      console.error(\"Erro ao processar a mensagem de evento: \", error);\n    }\n  } else\n  if (message.mediaType === \"listMessage\") {\n    try {\n      // Parsear o dataJson diretamente da coluna do banco de dados\n      const parsedData = JSON.parse(message.dataJson);\n      const listMessage = parsedData.message.listMessage;\n      let titulo = listMessage.title || \"\";\n      let descricao = listMessage.description || \"\";\n      let rodape = listMessage.footerText || \"\";\n      let secoes = [];\n      let rows = [];\n      listMessage.sections.forEach((section, index) => {\n        let currentSection = section.title || \"\"; \n        section.rows.forEach((row, rowIndex) => {\n          rows.push({\n            titulo: row.title,           // TÃ­tulo do item da linha\n            descricao: row.description,  // DescriÃ§Ã£o do item da linha\n            idLinha: row.rowId           // ID da linha\n          });\n        });\n        secoes.push({ titulo: currentSection, linhas: rows });\n        rows = [];\n      });\n      return (\n        <ListPreview\n          titulo={titulo}\n          descricao={descricao}\n          textoBotao={listMessage.buttonText || \"Clique aqui\"} // Texto do botÃ£o\n          secoes={secoes}\n          rodape={rodape}\n          ticketId={message?.ticket?.id}\n        />\n      );\n    } catch (error) {\n      console.error(\"Erro ao processar a lista de mensagens: \", error);\n    }\n  }\n   else\n   if (message.mediaType === \"viewOnceMessage\" && message.body.startsWith('[BOTOES]')) {\n    try {\n        const dataJsonString = message.dataJson;\n        if (!dataJsonString || typeof dataJsonString !== 'string') {\n            console.error(\"dataJson nÃ£o estÃ¡ definido ou nÃ£o Ã© uma string vÃ¡lida.\");\n            return; \n        }\n        const parsedData = JSON.parse(dataJsonString); \n        const viewOnceMessage = parsedData.message.viewOnceMessage.message.interactiveMessage; // Acessando a mensagem diretamente\n        if (!viewOnceMessage) {\n            console.error(\"viewOnceMessage nÃ£o estÃ¡ definido.\");\n            return; // Sai da funÃ§Ã£o se viewOnceMessage nÃ£o estiver definido\n        }\n        const titulo = viewOnceMessage.body?.text || \"\";  // TÃ­tulo\n        const rodape = viewOnceMessage.footer?.text || \"\";  // RodapÃ©\n        const botoes = viewOnceMessage.nativeFlowMessage?.buttons?.map(button => {\n            const { name, buttonParamsJson } = button;\n            const params = JSON.parse(buttonParamsJson);  // Parse JSON para obter o conteÃºdo\n            return {\n                tipo: name,\n                texto: params.display_text,\n                conteudo: params.phoneNumber || params.url || params.copy_code\n            };\n        }) || [];  \n        let imagem = null;\n        if (viewOnceMessage.header?.imageMessage?.jpegThumbnail) {\n            imagem = viewOnceMessage.header.imageMessage.jpegThumbnail;    \n        } else {\n            console.log(\"Nenhuma imagem encontrada no header.\");\n        }\n        return (\n            <ButtonPreview \n                titulo={titulo} \n                rodape={rodape} \n                secoes={[{ titulo: \"BotÃµes\", linhas: botoes }]} \n                imagem={imagem} \n                ticketId={message?.ticket?.id} \n            />\n        );\n    } catch (error) {\n        console.error(\"Erro ao processar a mensagem do tipo viewOnceMessage: \", error);\n    }\n} else \n   if ((message.mediaType === \"viewOnceMessage\" || message.mediaType === \"interactiveMessage\") && message.body.startsWith('[PIX]')) {\n  try {\n      // Verifica se o dataJson existe e Ã© uma string antes de tentar fazer o parse\n      const dataJsonString = message.dataJson;\n      if (!dataJsonString || typeof dataJsonString !== 'string') {\n          console.error(\"dataJson nÃ£o estÃ¡ definido ou nÃ£o Ã© uma string vÃ¡lida.\");\n          return; // Sai da funÃ§Ã£o se nÃ£o for vÃ¡lido\n      }\n      // Parse do JSON\n      const parsedData = JSON.parse(dataJsonString);\n      const nativeFlowMessage =\n          parsedData.message?.interactiveMessage?.nativeFlowMessage ||\n          parsedData.message?.viewOnceMessage?.message?.interactiveMessage?.nativeFlowMessage;\n      if (!nativeFlowMessage) {\n          console.error(\"Mensagem de fluxo nativa nÃ£o encontrada.\");\n          return; // Sai da funÃ§Ã£o se nÃ£o encontrar o fluxo nativo\n      }\n      const button = nativeFlowMessage.buttons?.[0]; // Considera que hÃ¡ um Ãºnico botÃ£o\n      if (!button) {\n          console.error(\"BotÃ£o nÃ£o encontrado.\");\n          return;\n      }\n      const { name, buttonParamsJson } = button;\n      const params = JSON.parse(buttonParamsJson);\n      const numeroCobranca = params.reference_id || \"N/A\";\n      const total = params.total_amount?.value || \"N/A\";\n      const produto = params.order?.items?.[0]?.name || \"N/A\";\n      let imagem = null;\n      if (nativeFlowMessage.header?.imageMessage?.jpegThumbnail) {\n          imagem = nativeFlowMessage.header.imageMessage.jpegThumbnail;\n      } else {\n      }\n      // Renderizar o componente PixPreview\n      return (\n          <PixPreview\n              companyId={message.companyId}\n              avatarUser={message.ticket?.user?.profileImage}\n              avatarName={message.ticket?.user?.name}\n              avatarUrl={message.contact?.urlPicture}\n              name={message.contact?.name}  \n              numeroCobranca={numeroCobranca}\n              total={total}\n              produto={produto}\n              imagem={imagem}\n              ticketId={message?.ticket?.id}\n          />\n      );\n  } catch (error) {\n      console.error(\"Erro ao processar a mensagem de pagamento: \", error);\n  }\n} else\n  if (message.mediaType === \"locationMessage\" && message.body.split('|').length >= 2) {\n    let locationParts = message.body.split('|')\n    let imageLocation = locationParts[0]\n    let linkLocation = locationParts[1]\n\n    let descriptionLocation = null\n\n    if (locationParts.length > 2)\n      descriptionLocation = message.body.split('|')[2]\n\n    return <LocationPreview image={imageLocation} link={linkLocation} description={descriptionLocation} />\n  } else\n\n    if (message.mediaType === \"contactMessage\") {\n      let array = message.body.split(\"\\n\");\n      let obj = [];\n      let contact = \"\";\n      for (let index = 0; index < array.length; index++) {\n        const v = array[index];\n        let values = v.split(\":\");\n        for (let ind = 0; ind < values.length; ind++) {\n          if (values[ind].indexOf(\"+\") !== -1) {\n            obj.push({ number: values[ind] });\n          }\n          if (values[ind].indexOf(\"FN\") !== -1) {\n            contact = values[ind + 1];\n          }\n        }\n      }\n      // console.log(message)\n      return <VcardPreview contact={contact} numbers={obj[0]?.number} queueId={message?.ticket?.queueId} whatsappId={message?.ticket?.whatsappId} />\n    } \n    else if (message.mediaType === \"adMetaPreview\") { // Adicionado para renderizar o componente de preview de anÃºncio\n      console.log(\"Entrou no MetaPreview\");\n      let [image, sourceUrl, title, body, messageUser] = message.body.split('|');\n      return <AdMetaPreview image={image} sourceUrl={sourceUrl} title={title} body={body} messageUser={messageUser} />;\n  }\n  else if (message.mediaType === \"image\") {\n        return <ModalImageCors imageUrl={message.mediaUrl} />;\n      } else\n\n        if (message.mediaType === \"audio\") {\n          return (\n            <AudioModal url={message.mediaUrl} />\n            // <audio controls>\n            //   <source src={message.mediaUrl} type=\"audio/ogg\"></source>\n            //   {/* <source src={message.mediaUrl} type=\"audio/mp3\"></source> */}\n            // </audio>\n          );\n        } else\n\n          if (message.mediaType === \"video\") {\n            return (\n              <video\n                className={classes.messageMedia}\n                src={message.mediaUrl}\n                controls\n              />\n            );\n          } else {\n            return (\n              <>\n                <div className={classes.downloadMedia}>\n                  <Button\n                    startIcon={<GetApp />}\n                    variant=\"outlined\"\n                    target=\"_blank\"\n                    onClick={() => {\n                      downloadResource(message.mediaUrl || message.body)\n                    }}\n                  >\n                    Download\n                  </Button>\n                </div>\n                <Divider />\n              </>\n            );\n          }\n};\n\nconst renderMessageAck = (message) => {\n  if (message.ack === 0) {\n    return <AccessTime fontSize=\"small\" className={classes.ackIcons} />;\n  } else\n    if (message.ack === 1) {\n      return <Done fontSize=\"small\" className={classes.ackIcons} />;\n    } else\n      if (message.ack === 2) {\n        return <DoneAll fontSize=\"small\" className={classes.ackIcons} />;\n      } else\n        if (message.ack === 3 || message.ack === 4) {\n          return <DoneAll fontSize=\"small\" className={message.mediaType === \"audio\" ? classes.ackPlayedIcon : classes.ackDoneAllIcon} />;\n        } else\n          if (message.ack === 5) {\n            return <DoneAll fontSize=\"small\" className={classes.ackDoneAllIcon} />\n          }\n};\n\nconst renderDailyTimestamps = (message, index) => {\n  const today = format(new Date(), \"dd/MM/yyyy\")\n\n  if (index === 0) {\n    return (\n      <span\n        className={classes.dailyTimestamp}\n        key={`timestamp-${message.id}`}\n      >\n        <div className={classes.dailyTimestampText}>\n          {today === format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\") ? \"HOJE\" : format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\")}\n        </div>\n      </span>\n    );\n  } else\n    if (index < messagesList.length - 1) {\n      let messageDay = parseISO(messagesList[index].createdAt);\n      let previousMessageDay = parseISO(messagesList[index - 1].createdAt);\n\n      if (!isSameDay(messageDay, previousMessageDay)) {\n        return (\n          <span\n            className={classes.dailyTimestamp}\n            key={`timestamp-${message.id}`}\n          >\n            <div className={classes.dailyTimestampText}>\n              {today === format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\") ? \"HOJE\" : format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\")}\n            </div>\n          </span>\n        );\n      }\n    } else\n      if (index === messagesList.length - 1) {\n        return (\n          <div\n            key={`ref-${message.id}`}\n            ref={lastMessageRef}\n            style={{ float: \"left\", clear: \"both\" }}\n          />\n        );\n      }\n};\n\n\nconst renderTicketsSeparator = (message, index) => {\n  let lastTicket = messagesList[index - 1]?.ticketId;\n  let currentTicket = message.ticketId;\n\n  if (lastTicket !== currentTicket && lastTicket !== undefined) {\n    if (message?.ticket?.queue) {\n      return (\n        <span\n          className={classes.currentTick}\n          key={`timestamp-${message.id}a`}\n        >\n          <div\n            className={classes.currentTicktText}\n            style={{ backgroundColor: message?.ticket?.queue?.color || \"grey\" }}\n          >\n            #{i18n.t(\"ticketsList.called\")} {message?.ticketId} - {message?.ticket?.queue?.name}\n          </div>\n\n        </span>\n      );\n    } else {\n      return (\n        <span\n          className={classes.currentTick}\n          key={`timestamp-${message.id}b`}\n        >\n          <div\n            className={classes.currentTicktText}\n            style={{ backgroundColor: \"grey\" }}\n          >\n            #{i18n.t(\"ticketsList.called\")} {message.ticketId} - {i18n.t(\"ticketsList.noQueue\")}\n          </div>\n\n        </span>\n      );\n    }\n  }\n\n};\n\nconst renderMessageDivider = (message, index) => {\n  if (index < messagesList.length && index > 0) {\n    let messageUser = messagesList[index].fromMe;\n    let previousMessageUser = messagesList[index - 1].fromMe;\n    if (messageUser !== previousMessageUser) {\n      return (\n\n        <span style={{ marginTop: 16 }} key={`divider-${message.id}`}></span>\n      );\n    }\n  }\n};\n\nconst path = require('path');\n\nconst renderQuotedMessage = (message) => {\n\n  return (\n    <div\n      className={clsx(classes.quotedContainerLeft, {\n        [classes.quotedContainerRight]: message.fromMe,\n      })}\n    >\n      <span\n        className={clsx(classes.quotedSideColorLeft, {\n          [classes.quotedSideColorRight]: message.quotedMsg?.fromMe,\n        })}\n      ></span>\n      <div className={classes.quotedMsg}>\n        {!message.quotedMsg?.fromMe && (\n          <span className={classes.messageContactName}>\n            {message.quotedMsg?.contact?.name}\n          </span>\n        )}\n\n        {message.quotedMsg.mediaType === \"audio\"\n          && (\n            <div className={classes.downloadMedia}>\n              <AudioModal url={message.quotedMsg.mediaUrl} />\n\n              {/* <audio controls>\n                  <source src={message.quotedMsg.mediaUrl} type=\"audio/mp3\"></source>\n                  {/* <source src={message.quotedMsg.mediaUrl} type=\"audio/ogg\"></source> \n                </audio> */}\n            </div>\n          )\n        }\n        {message.quotedMsg.mediaType === \"video\"\n          && (\n            <video\n              className={classes.messageMedia}\n              src={message.quotedMsg.mediaUrl}\n              controls\n            />\n          )\n        }\n        {message.quotedMsg.mediaType === \"contactMessage\"\n          && (\n            \"Contato\"\n          )\n        }\n        {message.quotedMsg.mediaType === \"application\"\n          && (\n            <div className={classes.downloadMedia}>\n              <Button\n                startIcon={<GetApp />}\n                // color=\"primary\"\n                variant=\"outlined\"\n                target=\"_blank\"\n                href={message.quotedMsg.mediaUrl}\n              >\n                Download\n              </Button>\n            </div>\n          )\n        }\n\n        {message.quotedMsg.mediaType === \"image\"\n          && (\n            <ModalImageCors imageUrl={message.quotedMsg.mediaUrl} />)\n          || message.quotedMsg?.body}\n\n        {!message.quotedMsg.mediaType === \"image\" && message.quotedMsg?.body}\n\n\n      </div>\n    </div>\n  );\n};\n\nconst handleDrag = event => {\n  event.preventDefault();\n  event.stopPropagation();\n  if (event.type === \"dragenter\" || event.type === \"dragover\") {\n    setDragActive(true);\n  } else if (event.type === \"dragleave\") {\n    setDragActive(false);\n  }\n}\n\nconst isYouTubeLink = (url) => {\n  const youtubeRegex = /(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/;\n  return youtubeRegex.test(url);\n};\n\nconst handleDrop = event => {\n  event.preventDefault();\n  event.stopPropagation();\n  setDragActive(false);\n  if (event.dataTransfer.files && event.dataTransfer.files[0]) {\n    if (onDrop) {\n      onDrop(event.dataTransfer.files);\n    }\n  }\n}\nconst xmlRegex = /<([^>]+)>/g;\nconst boldRegex = /\\*(.*?)\\*/g;\n\nconst formatXml = (xmlString) => {\n  // Verifica se o XML contÃ©m a assinatura com nome do atendente\n  if (boldRegex.test(xmlString)) {\n    // Formata o texto dentro da assinatura em negrito\n    xmlString = xmlString.replace(boldRegex, \"**$1**\");\n  }\n  return xmlString;\n};\n\nconst renderMessages = () => {\n\n  if (messagesList.length > 0) {\n    const viewMessagesList = messagesList.map((message, index) => {\n      if (message.mediaType === \"call_log\") {\n        return (\n          <React.Fragment key={message.id}>\n            {renderDailyTimestamps(message, index)}\n            {renderTicketsSeparator(message, index)}\n            {renderMessageDivider(message, index)}\n            <div className={classes.messageCenter}>\n              <IconButton\n                variant=\"contained\"\n                size=\"small\"\n                id=\"messageActionsButton\"\n                disabled={message.isDeleted}\n                className={classes.messageActionsButton}\n                onClick={(e) => handleOpenMessageOptionsMenu(e, message)}\n              >\n                <ExpandMore />\n              </IconButton>\n              {isGroup && (\n                <span className={classes.messageContactName}>\n                  {message.contact?.name}\n                </span>\n              )}\n\n              {/* {isGroup && (\n                  <span className={classes.messageContactName}>\n                    {JSON.parse(message.dataJson).pushName} #{message.contact?.name}\n                  </span>\n                )} */}\n              <div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 17\" width=\"20\" height=\"17\">\n                  <path fill=\"#df3333\" d=\"M18.2 12.1c-1.5-1.8-5-2.7-8.2-2.7s-6.7 1-8.2 2.7c-.7.8-.3 2.3.2 2.8.2.2.3.3.5.3 1.4 0 3.6-.7 3.6-.7.5-.2.8-.5.8-1v-1.3c.7-1.2 5.4-1.2 6.4-.1l.1.1v1.3c0 .2.1.4.2.6.1.2.3.3.5.4 0 0 2.2.7 3.6.7.2 0 1.4-2 .5-3.1zM5.4 3.2l4.7 4.6 5.8-5.7-.9-.8L10.1 6 6.4 2.3h2.5V1H4.1v4.8h1.3V3.2z\"></path>\n                </svg> <span>{i18n.t(\"ticketsList.missedCall\")} {format(parseISO(message.createdAt), \"HH:mm\")}</span>\n              </div>\n            </div>\n          </React.Fragment>\n        );\n      }\n\n      if (!message.fromMe) {\n        return (\n          <React.Fragment key={message.id}>\n            {renderDailyTimestamps(message, index)}\n            {renderTicketsSeparator(message, index)}\n            {renderMessageDivider(message, index)}\n            <div\n              className={classes.messageLeft}\n              title={message.queueId && message.queue?.name}\n              onDoubleClick={(e) => hanldeReplyMessage(e, message)}\n            >\n              {showSelectMessageCheckbox && (\n                <SelectMessageCheckbox\n                  // showSelectMessageCheckbox={showSelectMessageCheckbox}\n                  message={message}\n                // selectedMessagesList={selectedMessagesList}\n                // setSelectedMessagesList={setSelectedMessagesList}\n                />\n              )}\n              <IconButton\n                variant=\"contained\"\n                size=\"small\"\n                id=\"messageActionsButton\"\n                disabled={message.isDeleted}\n                className={classes.messageActionsButton}\n                onClick={(e) => handleOpenMessageOptionsMenu(e, message)}\n              >\n                <ExpandMore />\n              </IconButton>\n\n              {message.isForwarded && (\n                <div>\n                  <span className={classes.forwardMessage}\n                  ><Reply style={{ color: \"grey\", transform: 'scaleX(-1)' }} /> Encaminhada\n                  </span>\n                  <br />\n                </div>\n              )}\n              {isGroup && (\n                <span className={classes.messageContactName}>\n                  {message.contact?.name}\n                </span>\n              )}\n              {isYouTubeLink(message.body) && (\n                <>\n                  <YouTubePreview videoUrl={message.body} />\n                </>\n              )}\n              {/* {isGroup && (\n                  <span className={classes.messageContactName}>\n                    {JSON.parse(message.dataJson).pushName} #{message.contact?.name}\n                  </span>\n                )} */}\n\n              {/* aviso de mensagem apagado pelo contato */}\n\n              {!lgpdDeleteMessage && message.isDeleted && (\n                <div>\n                  <span className={classes.deletedMessage}\n                  >ð« Essa mensagem foi apagada pelo contato &nbsp;\n                  </span>\n                </div>\n              )}\n\n              {(message.mediaUrl || message.mediaType === \"locationMessage\" || message.mediaType === \"contactMessage\" || message.mediaType === \"pollCreationMessageV3\" || message.mediaType === \"eventMessage\" || message.mediaType === \"listMessage\" || message.mediaType === \"viewOnceMessage\" || message.mediaType === \"interactiveMessage\" || message.mediaType === \"adMetaPreview\" // Adicionado para aceitar o componente de preview de anÃºncio\n                //|| message.mediaType === \"multi_vcard\" \n              ) && checkMessageMedia(message)}\n\n              <div className={clsx(classes.textContentItem, {\n                [classes.textContentItemDeleted]: message.isDeleted,\n              })}>\n                {message.quotedMsg && renderQuotedMessage(message)}\n                {\n                  (\n                    (message.mediaUrl !== null && (message.mediaType === \"image\" || message.mediaType === \"video\") && path.basename(message.mediaUrl).trim() !== message.body.trim()) ||\n                    message.mediaType !== \"audio\" &&\n                    message.mediaType !== \"image\" &&\n                    message.mediaType !== \"video\" &&\n                    message.mediaType != \"reactionMessage\" &&\n                    message.mediaType != \"locationMessage\" && message.mediaType !== \"contactMessage\" && message.mediaType != \"pollCreationMessageV3\" && message.mediaType != \"eventMessage\" &&\n                    message.mediaType != \"listMessage\" &&\n                    message.mediaType != \"viewOnceMessage\" &&\n                    message.mediaType != \"interactiveMessage\" && message.mediaType !== \"adMetaPreview\") && (\n                    <>\n                      {xmlRegex.test(message.body) && (\n                        <span>{message.body}</span>\n\n                      )}\n                      {!xmlRegex.test(message.body) && (\n                        <MarkdownWrapper>{(lgpdDeleteMessage && message.isDeleted) ? \"ð« _Mensagem apagada_ \" :\n                          message.body\n                        }</MarkdownWrapper>)}\n\n                    </>\n\n                  )}\n\n                {message.quotedMsg && message.mediaType === \"reactionMessage\" && (\n                  <>\n                    <span style={{ marginLeft: \"0px\" }}>\n                      <MarkdownWrapper>\n                        {\"\" + message?.contact?.name + \" reagiu... \" + message.body}\n                      </MarkdownWrapper>\n                    </span>\n                  </>\n                )}\n\n                <span className={classes.timestamp}>\n                  {message.isEdited ? \"Editada \" + format(parseISO(message.createdAt), \"HH:mm\") : format(parseISO(message.createdAt), \"HH:mm\")}\n                </span>\n              </div>\n            </div>\n          </React.Fragment>\n        );\n      } else {\n        return (\n          <React.Fragment key={message.id}>\n            {renderDailyTimestamps(message, index)}\n            {renderTicketsSeparator(message, index)}\n            {renderMessageDivider(message, index)}\n            <div\n              className={message.isPrivate ? classes.messageRightPrivate : classes.messageRight}\n              title={message.queueId && message.queue?.name}\n              onDoubleClick={(e) => hanldeReplyMessage(e, message)}\n            >\n              {showSelectMessageCheckbox && (\n                <SelectMessageCheckbox\n                  // showSelectMessageCheckbox={showSelectMessageCheckbox}\n                  message={message}\n                // selectedMessagesList={selectedMessagesList}\n                // setSelectedMessagesList={setSelectedMessagesList}\n                />\n              )}\n\n              <IconButton\n                variant=\"contained\"\n                size=\"small\"\n                id=\"messageActionsButton\"\n                disabled={message.isDeleted}\n                className={classes.messageActionsButton}\n                onClick={(e) => handleOpenMessageOptionsMenu(e, message)}\n              >\n                <ExpandMore />\n              </IconButton>\n              {message.isForwarded && (\n                <div>\n                  <span className={classes.forwardMessage}\n                  ><Reply style={{ color: \"grey\", transform: 'scaleX(-1)' }} /> Encaminhada\n                  </span>\n                  <br />\n                </div>\n              )}\n              {isYouTubeLink(message.body) && (\n                <>\n                  <YouTubePreview videoUrl={message.body} />\n                </>\n              )}\n              {!lgpdDeleteMessage && message.isDeleted && (\n                <div>\n                  <span className={classes.deletedMessage}\n                  >ð« Essa mensagem foi apagada &nbsp;\n                  </span>\n                </div>\n              )}\n              {(message.mediaUrl || message.mediaType === \"locationMessage\" || message.mediaType === \"contactMessage\" || message.mediaType === \"pollCreationMessageV3\" || message.mediaType === \"eventMessage\" || message.mediaType === \"listMessage\" || message.mediaType === \"viewOnceMessage\" || message.mediaType === \"interactiveMessage\" || message.mediaType === \"adMetaPreview\" // Adicionado para aceitar o componente de preview de anÃºncio\n                //|| message.mediaType === \"multi_vcard\" \n              ) && checkMessageMedia(message)}\n              <div\n                className={clsx(classes.textContentItem, {\n                  [classes.textContentItemDeleted]: message.isDeleted,\n                })}\n              >\n\n                {/* {message.isDeleted && (`ð«`)} */}\n\n\n\n                {message.quotedMsg && renderQuotedMessage(message)}\n\n                {\n                  ((message.mediaType === \"image\" || message.mediaType === \"video\") && path.basename(message.mediaUrl) === message.body) ||\n                  (message.mediaType !== \"audio\" && message.mediaType != \"reactionMessage\" && message.mediaType != \"locationMessage\" && message.mediaType !== \"contactMessage\" && message.mediaType != \"pollCreationMessageV3\" && message.mediaType != \"eventMessage\" &&\n                    message.mediaType != \"listMessage\" &&\n                    message.mediaType != \"viewOnceMessage\" &&\n                    message.mediaType != \"interactiveMessage\" && message.mediaType !== \"adMetaPreview\") && (\n                    <>\n                      {xmlRegex.test(message.body) && (\n                        <div>{formatXml(message.body)}</div>\n\n                      )}\n                      {!xmlRegex.test(message.body) && (<MarkdownWrapper>{message.body}</MarkdownWrapper>)}\n\n                    </>\n                  )}\n\n                {message.quotedMsg && message.mediaType === \"reactionMessage\" && (\n                  <>\n                    <span style={{ marginLeft: \"0px\" }}>\n                      <MarkdownWrapper>\n                        {\"VocÃª reagiu... \" + message.body}\n                      </MarkdownWrapper>\n                    </span>\n                  </>\n                )}\n\n                <span className={classes.timestamp}>\n                  {message.isEdited ? \"Editada \" + format(parseISO(message.createdAt), \"HH:mm\") : format(parseISO(message.createdAt), \"HH:mm\")}\n                  {renderMessageAck(message)}\n                </span>\n              </div>\n            </div>\n          </React.Fragment>\n        );\n      }\n    });\n    return viewMessagesList;\n  } else {\n    return <div>Diga olÃ¡ para seu novo contato!</div>;\n  }\n};\n\nreturn (\n  <div className={classes.messagesListWrapper} onDragEnter={handleDrag}>\n    {dragActive && <div className={classes.dragElement} onDragEnter={handleDrag} onDragLeave={handleDrag} onDragOver={handleDrag} onDrop={handleDrop}>Solte o arquivo aqui</div>}\n\n    <MessageOptionsMenu\n      message={selectedMessage}\n      anchorEl={anchorEl}\n      menuOpen={messageOptionsMenuOpen}\n      handleClose={handleCloseMessageOptionsMenu}\n      isGroup={isGroup}\n      whatsappId={whatsappId}\n      queueId={queueId}\n    />\n    <div\n      id=\"messagesList\"\n      className={classes.messagesList}\n      onScroll={handleScroll}\n    >\n      {messagesList.length > 0 ?\n        renderMessages()\n        : []}\n    </div>\n\n    {(channel !== \"whatsapp\" && channel !== undefined) && (\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          padding: \"10px\",\n          alignItems: \"center\",\n          backgroundColor: \"#E1F3FB\",\n        }}\n      >\n        {channel === \"facebook\" ? (\n          <Facebook />\n        ) : (\n          <Instagram />\n        )}\n\n        <span>\n          VocÃª tem 24h para responder apÃ³s receber uma mensagem, de acordo\n          com as polÃ­ticas do Facebook.\n        </span>\n      </div>\n    )}\n    {loading && (\n      <div>\n        <CircularProgress className={classes.circleLoading} />\n      </div>\n    )}\n  </div>\n);\n};\n\nexport default MessagesList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}