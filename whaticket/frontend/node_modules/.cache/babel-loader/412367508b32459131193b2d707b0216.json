{"ast":null,"code":"var _jsxFileName = \"/workspaces/simao/whaticket/frontend/src/components/MessageOptionsMenu/index.js\";\nimport React, { useState, useContext } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ConfirmationModal from \"../ConfirmationModal\";\nimport { Menu } from \"@material-ui/core\";\nimport { ReplyMessageContext } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport InformationModal from \"../InformationModal\";\nimport { ForwardMessageContext } from \"../../context/ForwarMessage/ForwardMessageContext\";\nimport { EditMessageContext } from \"../../context/EditingMessage/EditingMessageContext\";\nimport { TicketsContext } from \"../../context/Tickets/TicketsContext\";\n// import { v4 as uuidv4 } from \"uuid\";\n\nimport toastError from \"../../errors/toastError\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport ForwardModal from \"../ForwardMessageModal\";\nimport ShowTicketOpen from \"../ShowTicketOpenModal\";\nimport AcceptTicketWithoutQueue from \"../AcceptTicketWithoutQueueModal\";\nconst MessageOptionsMenu = ({\n  message,\n  menuOpen,\n  handleClose,\n  anchorEl,\n  isGroup,\n  queueId,\n  whatsappId\n}) => {\n  const {\n    setReplyingMessage\n  } = useContext(ReplyMessageContext);\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\n  const {\n    user\n  } = useContext(AuthContext);\n  const editingContext = useContext(EditMessageContext);\n  const setEditingMessage = editingContext ? editingContext.setEditingMessage : null;\n  const {\n    setTabOpen\n  } = useContext(TicketsContext);\n  const history = useHistory();\n  const [openAlert, setOpenAlert] = useState(false);\n  const [userTicketOpen, setUserTicketOpen] = useState(\"\");\n  const [queueTicketOpen, setQueueTicketOpen] = useState(\"\");\n  const [acceptTicketWithouSelectQueueOpen, setAcceptTicketWithouSelectQueueOpen] = useState(false);\n  const [ticketOpen, setTicketOpen] = useState(null);\n\n  // Transcrição de áudio\n  const [showTranscribedText, setShowTranscribedText] = useState(false);\n  const [audioMessageTranscribeToText, setAudioMessageTranscribeToText] = useState(\"\");\n  const {\n    showSelectMessageCheckbox,\n    setShowSelectMessageCheckbox,\n    selectedMessages,\n    forwardMessageModalOpen,\n    setForwardMessageModalOpen\n  } = useContext(ForwardMessageContext);\n  const handleSaveTicket = async contactId => {\n    if (!contactId) return;\n    try {\n      const {\n        data: ticket\n      } = await api.post(\"/tickets\", {\n        contactId: contactId,\n        userId: user === null || user === void 0 ? void 0 : user.id,\n        status: \"open\",\n        queueId: queueId,\n        whatsappId: whatsappId\n      });\n      setTicketOpen(ticket);\n      if (ticket.queueId === null) {\n        setAcceptTicketWithouSelectQueueOpen(true);\n      } else {\n        setTabOpen(\"open\");\n        history.push(`/tickets/${ticket.uuid}`);\n      }\n    } catch (err) {\n      const ticket = JSON.parse(err.response.data.error);\n      if (ticket.userId !== (user === null || user === void 0 ? void 0 : user.id)) {\n        setOpenAlert(true);\n        setUserTicketOpen(ticket.user.name);\n        setQueueTicketOpen(ticket.queue.name);\n      } else {\n        setOpenAlert(false);\n        setUserTicketOpen(\"\");\n        setQueueTicketOpen(\"\");\n\n        // handleSelectTicket(ticket);\n        setTabOpen(ticket.status);\n        history.push(`/tickets/${ticket.uuid}`);\n      }\n    }\n    //setLoading(false);\n    handleClose();\n  };\n  const handleCloseAlert = () => {\n    setOpenAlert(false);\n    setOpenAlert(false);\n    setUserTicketOpen(\"\");\n    setQueueTicketOpen(\"\");\n  };\n  const handleSetShowSelectCheckbox = () => {\n    setShowSelectMessageCheckbox(!showSelectMessageCheckbox);\n    handleClose();\n  };\n  const handleDeleteMessage = async () => {\n    try {\n      await api.delete(`/messages/${message.id}`);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  const handleEditMessage = async () => {\n    setEditingMessage(message);\n    handleClose();\n  };\n  // const handleForwardMessage = (msg) => {\n  //   setForwardModalOpen(true);\n  //   setForwardMessage(msg);\n  //   handleClose();\n  // };\n  // const handleCloseForwardModal = () => {\n\n  //   //setSelectedSchedule(null);\n  //   setForwardModalOpen(false);\n  //   handleClose();\n  // };\n\n  const handleTranscriptionAudioToText = async () => {\n    try {\n      const audioUrl = String(message.mediaUrl);\n      const match = audioUrl.match(/\\/([^\\/]+\\.ogg)$/);\n      const extractedPart = match ? match[1] : null;\n      if (!extractedPart) {\n        throw new Error('Formato de URL de áudio inesperado');\n      }\n      const response = await api.get(`/messages/transcribeAudio/${extractedPart}`);\n      const {\n        data\n      } = response;\n      if (data && typeof data.transcribedText === 'string') {\n        setAudioMessageTranscribeToText(data.transcribedText);\n        setShowTranscribedText(true);\n        handleClose();\n      } else if (data && data.error) {\n        throw new Error(data.error);\n      } else {\n        throw new Error('Dados de transcrição inválidos');\n      }\n    } catch (err) {\n      toastError(err.message || 'Erro desconhecido');\n    }\n  };\n  const hanldeReplyMessage = () => {\n    setReplyingMessage(message);\n    handleClose();\n  };\n  const isWithinFifteenMinutes = () => {\n    const fifteenMinutesInMilliseconds = 15 * 60 * 1000; // 15 minutos em milissegundos\n    const currentTime = new Date();\n    const messageTime = new Date(message.createdAt);\n\n    // Verifica se a diferença entre o tempo atual e o tempo da mensagem é menor que 15 minutos\n    return currentTime - messageTime <= fifteenMinutesInMilliseconds;\n  };\n  const handleOpenConfirmationModal = e => {\n    setConfirmationOpen(true);\n    handleClose();\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AcceptTicketWithoutQueue, {\n    modalOpen: acceptTicketWithouSelectQueueOpen,\n    onClose: e => setAcceptTicketWithouSelectQueueOpen(false),\n    ticket: ticketOpen,\n    ticketId: ticketOpen === null || ticketOpen === void 0 ? void 0 : ticketOpen.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ShowTicketOpen, {\n    isOpen: openAlert,\n    handleClose: handleCloseAlert,\n    user: userTicketOpen,\n    queue: queueTicketOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ConfirmationModal, {\n    title: i18n.t(\"messageOptionsMenu.confirmationModal.title\"),\n    open: confirmationOpen,\n    onClose: setConfirmationOpen,\n    onConfirm: handleDeleteMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, i18n.t(\"messageOptionsMenu.confirmationModal.message\")), /*#__PURE__*/React.createElement(InformationModal, {\n    title: i18n.t(\"Transcrição de áudio\"),\n    open: showTranscribedText,\n    onClose: setShowTranscribedText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, audioMessageTranscribeToText), /*#__PURE__*/React.createElement(ForwardModal, {\n    modalOpen: forwardMessageModalOpen,\n    messages: selectedMessages,\n    onClose: e => {\n      setForwardMessageModalOpen(false);\n      setShowSelectMessageCheckbox(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Menu, {\n    anchorEl: anchorEl,\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"right\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    open: menuOpen,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, message.fromMe && /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"delete\",\n    onClick: handleOpenConfirmationModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, i18n.t(\"messageOptionsMenu.delete\")), message.fromMe && isWithinFifteenMinutes() && /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"edit\",\n    onClick: handleEditMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, i18n.t(\"messageOptionsMenu.edit\")), message.mediaType === \"audio\" && !message.fromMe && /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: handleTranscriptionAudioToText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 6\n    }\n  }, i18n.t(\"Transcrever áudio\")), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: hanldeReplyMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }, i18n.t(\"messageOptionsMenu.reply\")), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: handleSetShowSelectCheckbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, i18n.t(\"messageOptionsMenu.forward\")), !message.fromMe && isGroup && /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      var _message$contact;\n      return handleSaveTicket(message === null || message === void 0 ? void 0 : (_message$contact = message.contact) === null || _message$contact === void 0 ? void 0 : _message$contact.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, i18n.t(\"messageOptionsMenu.talkTo\"))));\n};\nexport default MessageOptionsMenu;","map":{"version":3,"names":["React","useState","useContext","MenuItem","i18n","api","ConfirmationModal","Menu","ReplyMessageContext","InformationModal","ForwardMessageContext","EditMessageContext","TicketsContext","toastError","useHistory","AuthContext","ForwardModal","ShowTicketOpen","AcceptTicketWithoutQueue","MessageOptionsMenu","message","menuOpen","handleClose","anchorEl","isGroup","queueId","whatsappId","setReplyingMessage","confirmationOpen","setConfirmationOpen","user","editingContext","setEditingMessage","setTabOpen","history","openAlert","setOpenAlert","userTicketOpen","setUserTicketOpen","queueTicketOpen","setQueueTicketOpen","acceptTicketWithouSelectQueueOpen","setAcceptTicketWithouSelectQueueOpen","ticketOpen","setTicketOpen","showTranscribedText","setShowTranscribedText","audioMessageTranscribeToText","setAudioMessageTranscribeToText","showSelectMessageCheckbox","setShowSelectMessageCheckbox","selectedMessages","forwardMessageModalOpen","setForwardMessageModalOpen","handleSaveTicket","contactId","data","ticket","post","userId","id","status","push","uuid","err","JSON","parse","response","error","name","queue","handleCloseAlert","handleSetShowSelectCheckbox","handleDeleteMessage","delete","handleEditMessage","handleTranscriptionAudioToText","audioUrl","String","mediaUrl","match","extractedPart","Error","get","transcribedText","hanldeReplyMessage","isWithinFifteenMinutes","fifteenMinutesInMilliseconds","currentTime","Date","messageTime","createdAt","handleOpenConfirmationModal","e","createElement","Fragment","modalOpen","onClose","ticketId","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","title","t","open","onConfirm","messages","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","fromMe","key","onClick","mediaType","_message$contact","contact"],"sources":["/workspaces/simao/whaticket/frontend/src/components/MessageOptionsMenu/index.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ConfirmationModal from \"../ConfirmationModal\";\nimport { Menu } from \"@material-ui/core\";\nimport { ReplyMessageContext } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport InformationModal from \"../InformationModal\";\nimport { ForwardMessageContext } from \"../../context/ForwarMessage/ForwardMessageContext\";\nimport { EditMessageContext } from \"../../context/EditingMessage/EditingMessageContext\";\n\nimport { TicketsContext } from \"../../context/Tickets/TicketsContext\";\n// import { v4 as uuidv4 } from \"uuid\";\n\nimport toastError from \"../../errors/toastError\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport ForwardModal from \"../ForwardMessageModal\";\nimport ShowTicketOpen from \"../ShowTicketOpenModal\";\nimport AcceptTicketWithoutQueue from \"../AcceptTicketWithoutQueueModal\";\n\nconst MessageOptionsMenu = ({\n  message,\n  menuOpen,\n  handleClose,\n  anchorEl,\n  isGroup,\n  queueId,\n  whatsappId\n}) => {\n  const { setReplyingMessage } = useContext(ReplyMessageContext);\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\n  const { user } = useContext(AuthContext);\n  const editingContext = useContext(EditMessageContext);\n  const setEditingMessage = editingContext ? editingContext.setEditingMessage : null;\n  const { setTabOpen } = useContext(TicketsContext);\n  const history = useHistory();\n\n  const [openAlert, setOpenAlert] = useState(false);\n  const [userTicketOpen, setUserTicketOpen] = useState(\"\");\n  const [queueTicketOpen, setQueueTicketOpen] = useState(\"\");\n  const [acceptTicketWithouSelectQueueOpen, setAcceptTicketWithouSelectQueueOpen] = useState(false);\n\n  const [ticketOpen, setTicketOpen] = useState(null);\n\n  // Transcrição de áudio\n  const [showTranscribedText, setShowTranscribedText] = useState(false);\n\tconst [audioMessageTranscribeToText, setAudioMessageTranscribeToText] = useState(\"\");\n\n  const { showSelectMessageCheckbox,\n    setShowSelectMessageCheckbox,\n    selectedMessages,\n    forwardMessageModalOpen,\n    setForwardMessageModalOpen } = useContext(ForwardMessageContext);\n\n  const handleSaveTicket = async (contactId) => {\n    if (!contactId) return;\n\n    try {\n      const { data: ticket } = await api.post(\"/tickets\", {\n        contactId: contactId,\n        userId: user?.id,\n        status: \"open\",\n        queueId: queueId,\n        whatsappId: whatsappId\n      });\n\n      setTicketOpen(ticket);\n      if (ticket.queueId === null) {\n        setAcceptTicketWithouSelectQueueOpen(true);\n      } else {\n        setTabOpen(\"open\");\n        history.push(`/tickets/${ticket.uuid}`);\n      }\n    } catch (err) {\n      const ticket = JSON.parse(err.response.data.error);\n\n      if (ticket.userId !== user?.id) {\n        setOpenAlert(true);\n        setUserTicketOpen(ticket.user.name);\n        setQueueTicketOpen(ticket.queue.name);\n      } else {\n        setOpenAlert(false);\n        setUserTicketOpen(\"\");\n        setQueueTicketOpen(\"\");\n\n        // handleSelectTicket(ticket);\n        setTabOpen(ticket.status);\n        history.push(`/tickets/${ticket.uuid}`);\n      }\n    }\n    //setLoading(false);\n    handleClose();\n  };\n\n  const handleCloseAlert = () => {\n    setOpenAlert(false);\n    setOpenAlert(false);\n    setUserTicketOpen(\"\");\n    setQueueTicketOpen(\"\");\n  };\n\n  const handleSetShowSelectCheckbox = () => {\n    setShowSelectMessageCheckbox(!showSelectMessageCheckbox);\n    handleClose();\n  };\n\n  const handleDeleteMessage = async () => {\n    try {\n      await api.delete(`/messages/${message.id}`);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleEditMessage = async () => {\n    setEditingMessage(message);\n    handleClose();\n  }\n  // const handleForwardMessage = (msg) => {\n  //   setForwardModalOpen(true);\n  //   setForwardMessage(msg);\n  //   handleClose();\n  // };\n  // const handleCloseForwardModal = () => {\n\n  //   //setSelectedSchedule(null);\n  //   setForwardModalOpen(false);\n  //   handleClose();\n  // };\n\n  const handleTranscriptionAudioToText = async () => {\n\t\ttry {\n\t\t\tconst audioUrl = String(message.mediaUrl);\n\t\t\tconst match = audioUrl.match(/\\/([^\\/]+\\.ogg)$/);\n\t\t\tconst extractedPart = match ? match[1] : null;\n\t\t\tif (!extractedPart) {\n\t\t\t\tthrow new Error('Formato de URL de áudio inesperado');\n\t\t\t}\n\t\t\tconst response = await api.get(`/messages/transcribeAudio/${extractedPart}`);\n\t\t\tconst { data } = response;\n\t\t\tif (data && typeof data.transcribedText === 'string') {\n\t\t\t\tsetAudioMessageTranscribeToText(data.transcribedText);\n\t\t\t\tsetShowTranscribedText(true);\n\t\t\t\thandleClose();\n\t\t\t} else if (data && data.error) {\n\t\t\t\tthrow new Error(data.error);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Dados de transcrição inválidos');\n\t\t\t}\n\t\t} catch (err) {\n\t\t\ttoastError(err.message || 'Erro desconhecido');\n\t\t}\n\t};\n\n  const hanldeReplyMessage = () => {\n    setReplyingMessage(message);\n    handleClose();\n  };\n\n  const isWithinFifteenMinutes = () => {\n    const fifteenMinutesInMilliseconds = 15 * 60 * 1000; // 15 minutos em milissegundos\n    const currentTime = new Date();\n    const messageTime = new Date(message.createdAt);\n\n    // Verifica se a diferença entre o tempo atual e o tempo da mensagem é menor que 15 minutos\n    return currentTime - messageTime <= fifteenMinutesInMilliseconds;\n  };\n\n  const handleOpenConfirmationModal = (e) => {\n    setConfirmationOpen(true);\n    handleClose();\n  };\n\n  return (\n    <>\n      <AcceptTicketWithoutQueue\n        modalOpen={acceptTicketWithouSelectQueueOpen}\n        onClose={(e) => setAcceptTicketWithouSelectQueueOpen(false)}\n        ticket={ticketOpen}\n        ticketId={ticketOpen?.id}\n      />\n      <ShowTicketOpen\n        isOpen={openAlert}\n        handleClose={handleCloseAlert}\n        user={userTicketOpen}\n        queue={queueTicketOpen}\n      />\n      <ConfirmationModal\n        title={i18n.t(\"messageOptionsMenu.confirmationModal.title\")}\n        open={confirmationOpen}\n        onClose={setConfirmationOpen}\n        onConfirm={handleDeleteMessage}\n      >\n        {i18n.t(\"messageOptionsMenu.confirmationModal.message\")}\n      </ConfirmationModal>\n\n      <InformationModal\n\t\t\t\ttitle={i18n.t(\"Transcrição de áudio\")}\n\t\t\t\topen={showTranscribedText}\n\t\t\t\tonClose={setShowTranscribedText}\n\t\t\t>\n\t\t\t\t{audioMessageTranscribeToText}\n\t\t\t</InformationModal>\n\n      <ForwardModal\n        modalOpen={forwardMessageModalOpen}\n        messages={selectedMessages}\n        onClose={(e) => {\n          setForwardMessageModalOpen(false);\n          setShowSelectMessageCheckbox(false);\n        }}\n      />\n      <Menu\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        open={menuOpen}\n        onClose={handleClose}\n      >\n        {message.fromMe && (\n          <MenuItem key=\"delete\" onClick={handleOpenConfirmationModal}>\n            {i18n.t(\"messageOptionsMenu.delete\")}\n          </MenuItem>\n        )}\n        {message.fromMe && isWithinFifteenMinutes() && (\n          <MenuItem key=\"edit\" onClick={handleEditMessage}>\n            {i18n.t(\"messageOptionsMenu.edit\")}\n          </MenuItem>\n        )}\n        {(message.mediaType === \"audio\" && !message.fromMe) && (\n\t\t\t\t\t<MenuItem onClick={handleTranscriptionAudioToText}>\n\t\t\t\t\t\t{i18n.t(\"Transcrever áudio\")}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t)}\n        <MenuItem onClick={hanldeReplyMessage}>\n          {i18n.t(\"messageOptionsMenu.reply\")}\n        </MenuItem>\n        <MenuItem onClick={handleSetShowSelectCheckbox}>\n          {i18n.t(\"messageOptionsMenu.forward\")}\n        </MenuItem>\n        {!message.fromMe && isGroup && (\n          <MenuItem onClick={() => handleSaveTicket(message?.contact?.id)}>\n            {i18n.t(\"messageOptionsMenu.talkTo\")}\n          </MenuItem>\n        )}\n      </Menu>\n    </>\n  );\n};\n\nexport default MessageOptionsMenu;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}