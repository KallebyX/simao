{"ast":null,"code":"var _jsxFileName = \"/workspaces/simao/whaticket/frontend/src/components/NewTicketModal/index.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport ContactModal from \"../ContactModal\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Grid, ListItemText, MenuItem, Select } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\nimport { Facebook, Instagram, WhatsApp } from \"@material-ui/icons\";\nimport ShowTicketOpen from \"../ShowTicketOpenModal\";\nconst useStyles = makeStyles(theme => ({\n  online: {\n    fontSize: 11,\n    color: \"#25d366\"\n  },\n  offline: {\n    fontSize: 11,\n    color: \"#e1306c\"\n  }\n}));\nconst filter = createFilterOptions({\n  trim: true\n});\nconst NewTicketModal = ({\n  modalOpen,\n  onClose,\n  initialContact\n}) => {\n  var _user$queues;\n  const classes = useStyles();\n  const [options, setOptions] = useState([]);\n  const [channelFilter, setChannelFilter] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [selectedQueue, setSelectedQueue] = useState(\"\");\n  const [selectedWhatsapp, setSelectedWhatsapp] = useState(\"\");\n  const [newContact, setNewContact] = useState({});\n  const [whatsapps, setWhatsapps] = useState([]);\n  const [contactModalOpen, setContactModalOpen] = useState(false);\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    companyId,\n    whatsappId\n  } = user;\n  const [openAlert, setOpenAlert] = useState(false);\n  const [userTicketOpen, setUserTicketOpen] = useState(\"\");\n  const [queueTicketOpen, setQueueTicketOpen] = useState(\"\");\n  useEffect(() => {\n    if ((initialContact === null || initialContact === void 0 ? void 0 : initialContact.id) !== undefined) {\n      setOptions([initialContact]);\n      setSelectedContact(initialContact);\n    }\n  }, [initialContact]);\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        api\n        // .get(`/whatsapp/filter`, { params: { companyId, session: 0, channel: channelFilter } })\n        .get(`/whatsapp`, {\n          params: {\n            companyId,\n            session: 0\n          }\n        }).then(({\n          data\n        }) => setWhatsapps(data));\n\n        // .then(({ data }) => {\n        //   const mappedWhatsapps = data.map((whatsapp) => ({\n        //     ...whatsapp,\n        //     selected: false,\n        //   }));\n        //   setWhatsapps(mappedWhatsapps);\n        //   if (channelFilter && mappedWhatsapps.length && mappedWhatsapps?.length === 1 && (user.whatsappId === null || user?.whatsapp?.channel !== channelFilter)) {\n        //     setSelectedWhatsapp(mappedWhatsapps[0].id)\n        //   }\n        // });\n      };\n      if (whatsappId !== null && whatsappId !== undefined) {\n        setSelectedWhatsapp(whatsappId);\n      }\n      if (user.queues.length === 1) {\n        setSelectedQueue(user.queues[0].id);\n      }\n      fetchContacts();\n      setLoading(false);\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [selectedContact, channelFilter]);\n  useEffect(() => {\n    if (!modalOpen || searchParam.length < 3) {\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        try {\n          const {\n            data\n          } = await api.get(\"contacts\", {\n            params: {\n              searchParam\n            }\n          });\n          setOptions(data.contacts);\n          setLoading(false);\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n      fetchContacts();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, modalOpen]);\n  const IconChannel = channel => {\n    switch (channel) {\n      case \"facebook\":\n        return /*#__PURE__*/React.createElement(Facebook, {\n          style: {\n            color: \"#3b5998\",\n            verticalAlign: \"middle\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 16\n          }\n        });\n      case \"instagram\":\n        return /*#__PURE__*/React.createElement(Instagram, {\n          style: {\n            color: \"#e1306c\",\n            verticalAlign: \"middle\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 16\n          }\n        });\n      case \"whatsapp\":\n        return /*#__PURE__*/React.createElement(WhatsApp, {\n          style: {\n            color: \"#25d366\",\n            verticalAlign: \"middle\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 16\n          }\n        });\n      default:\n        return \"error\";\n    }\n  };\n  const handleClose = () => {\n    onClose();\n    setSearchParam(\"\");\n    setOpenAlert(false);\n    setUserTicketOpen(\"\");\n    setQueueTicketOpen(\"\");\n    setSelectedContact(null);\n  };\n  const handleCloseAlert = () => {\n    setOpenAlert(false);\n    setLoading(false);\n    setOpenAlert(false);\n    setUserTicketOpen(\"\");\n    setQueueTicketOpen(\"\");\n  };\n  const handleSaveTicket = async contactId => {\n    if (!contactId) return;\n    // if (selectedQueue === \"\" && user.profile !== 'admin') {\n    if (selectedQueue === \"\") {\n      toast.error(\"Selecione uma fila\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const queueId = selectedQueue !== \"\" ? selectedQueue : null;\n      const whatsappId = selectedWhatsapp !== \"\" ? selectedWhatsapp : null;\n      const {\n        data: ticket\n      } = await api.post(\"/tickets\", {\n        contactId: contactId,\n        queueId,\n        whatsappId,\n        userId: user.id,\n        status: \"open\"\n      });\n      onClose(ticket);\n    } catch (err) {\n      const ticket = JSON.parse(err.response.data.error);\n      if (ticket.userId !== (user === null || user === void 0 ? void 0 : user.id)) {\n        var _ticket$user, _ticket$queue;\n        setOpenAlert(true);\n        setUserTicketOpen(ticket === null || ticket === void 0 ? void 0 : (_ticket$user = ticket.user) === null || _ticket$user === void 0 ? void 0 : _ticket$user.name);\n        setQueueTicketOpen(ticket === null || ticket === void 0 ? void 0 : (_ticket$queue = ticket.queue) === null || _ticket$queue === void 0 ? void 0 : _ticket$queue.name);\n      } else {\n        setOpenAlert(false);\n        setUserTicketOpen(\"\");\n        setQueueTicketOpen(\"\");\n        setLoading(false);\n        onClose(ticket);\n      }\n    }\n    setLoading(false);\n  };\n  const handleSelectOption = (e, newValue) => {\n    if (newValue === null || newValue === void 0 ? void 0 : newValue.number) {\n      setSelectedContact(newValue);\n    } else if (newValue === null || newValue === void 0 ? void 0 : newValue.name) {\n      setNewContact({\n        name: newValue.name\n      });\n      setContactModalOpen(true);\n    }\n  };\n  const handleCloseContactModal = () => {\n    setContactModalOpen(false);\n  };\n  const handleAddNewContactTicket = contact => {\n    setSelectedContact(contact);\n  };\n  const createAddContactOption = (filterOptions, params) => {\n    const filtered = filter(filterOptions, params);\n    if (params.inputValue !== \"\" && !loading && searchParam.length >= 3) {\n      filtered.push({\n        name: `${params.inputValue}`\n      });\n    }\n    return filtered;\n  };\n  const renderOption = option => {\n    if (option.number) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, IconChannel(option.channel), /*#__PURE__*/React.createElement(Typography, {\n        component: \"span\",\n        style: {\n          fontSize: 14,\n          marginLeft: \"10px\",\n          display: \"inline-flex\",\n          alignItems: \"center\",\n          lineHeight: \"2\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }, option.name, \" - \", option.number));\n    } else {\n      return `${i18n.t(\"newTicketModal.add\")} ${option.name}`;\n    }\n  };\n  const renderOptionLabel = option => {\n    if (option.number) {\n      return `${option.name} - ${option.number}`;\n    } else {\n      return `${option.name}`;\n    }\n  };\n  const renderContactAutocomplete = () => {\n    if (initialContact === undefined || initialContact.id === undefined) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        xs: 12,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        fullWidth: true,\n        options: options,\n        loading: loading,\n        clearOnBlur: true,\n        autoHighlight: true,\n        freeSolo: true,\n        clearOnEscape: true,\n        getOptionLabel: renderOptionLabel,\n        renderOption: renderOption,\n        filterOptions: createAddContactOption,\n        onChange: (e, newValue) => {\n          setChannelFilter(newValue ? newValue.channel : \"whatsapp\");\n          handleSelectOption(e, newValue);\n        },\n        renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n          label: i18n.t(\"newTicketModal.fieldLabel\"),\n          variant: \"outlined\",\n          autoFocus: true,\n          onChange: e => setSearchParam(e.target.value),\n          onKeyPress: e => {\n            if (loading || !selectedContact) return;else if (e.key === \"Enter\") {\n              handleSaveTicket(selectedContact.id);\n            }\n          },\n          InputProps: {\n            ...params.InputProps,\n            endAdornment: /*#__PURE__*/React.createElement(React.Fragment, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }\n            }, loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n              color: \"inherit\",\n              size: 20,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 25\n              }\n            }) : null, params.InputProps.endAdornment)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }\n      }));\n    }\n    return null;\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, {\n    open: modalOpen,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, i18n.t(\"newTicketModal.title\")), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      width: 300\n    },\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }\n  }, renderContactAutocomplete(), /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    required: true,\n    fullWidth: true,\n    displayEmpty: true,\n    variant: \"outlined\",\n    value: selectedQueue,\n    onChange: e => {\n      setSelectedQueue(e.target.value);\n    },\n    MenuProps: {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      getContentAnchorEl: null\n    },\n    renderValue: () => {\n      if (selectedQueue === \"\") {\n        return \"Selecione uma fila\";\n      }\n      const queue = user.queues.find(q => q.id === selectedQueue);\n      return queue.name;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }, ((_user$queues = user.queues) === null || _user$queues === void 0 ? void 0 : _user$queues.length) > 0 && user.queues.map((queue, key) => /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    key: key,\n    value: queue.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: queue.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 23\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    required: true,\n    fullWidth: true,\n    displayEmpty: true,\n    variant: \"outlined\",\n    value: selectedWhatsapp,\n    onChange: e => {\n      setSelectedWhatsapp(e.target.value);\n    },\n    MenuProps: {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      getContentAnchorEl: null\n    },\n    renderValue: () => {\n      if (selectedWhatsapp === \"\") {\n        return \"Selecione uma Conexão\";\n      }\n      const whatsapp = whatsapps.find(w => w.id === selectedWhatsapp);\n      return whatsapp === null || whatsapp === void 0 ? void 0 : whatsapp.name;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, (whatsapps === null || whatsapps === void 0 ? void 0 : whatsapps.length) > 0 && whatsapps.map((whatsapp, key) => /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    key: key,\n    value: whatsapp.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(React.Fragment, null, IconChannel(whatsapp.channel), /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      style: {\n        fontSize: 14,\n        marginLeft: \"10px\",\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        lineHeight: \"2\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 29\n      }\n    }, whatsapp.name, \" \\xA0 \", /*#__PURE__*/React.createElement(\"p\", {\n      className: whatsapp.status === 'CONNECTED' ? classes.online : classes.offline,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 54\n      }\n    }, \"(\", whatsapp.status, \")\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 23\n    }\n  }))))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"secondary\",\n    disabled: loading,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 11\n    }\n  }, i18n.t(\"newTicketModal.buttons.cancel\")), /*#__PURE__*/React.createElement(ButtonWithSpinner, {\n    variant: \"contained\",\n    type: \"button\",\n    disabled: !selectedContact,\n    onClick: () => handleSaveTicket(selectedContact.id),\n    color: \"primary\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 11\n    }\n  }, i18n.t(\"newTicketModal.buttons.ok\"))), contactModalOpen && /*#__PURE__*/React.createElement(ContactModal, {\n    open: contactModalOpen,\n    initialValues: newContact,\n    onClose: handleCloseContactModal,\n    onSave: handleAddNewContactTicket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 11\n    }\n  }), openAlert && /*#__PURE__*/React.createElement(ShowTicketOpen, {\n    isOpen: openAlert,\n    handleClose: handleCloseAlert,\n    user: userTicketOpen,\n    queue: queueTicketOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 11\n    }\n  })));\n};\nexport default NewTicketModal;","map":{"version":3,"names":["React","useState","useEffect","useContext","useHistory","makeStyles","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","Typography","Autocomplete","createFilterOptions","CircularProgress","i18n","api","ButtonWithSpinner","ContactModal","toastError","AuthContext","Grid","ListItemText","MenuItem","Select","toast","Facebook","Instagram","WhatsApp","ShowTicketOpen","useStyles","theme","online","fontSize","color","offline","filter","trim","NewTicketModal","modalOpen","onClose","initialContact","_user$queues","classes","options","setOptions","channelFilter","setChannelFilter","loading","setLoading","searchParam","setSearchParam","selectedContact","setSelectedContact","selectedQueue","setSelectedQueue","selectedWhatsapp","setSelectedWhatsapp","newContact","setNewContact","whatsapps","setWhatsapps","contactModalOpen","setContactModalOpen","user","companyId","whatsappId","openAlert","setOpenAlert","userTicketOpen","setUserTicketOpen","queueTicketOpen","setQueueTicketOpen","id","undefined","delayDebounceFn","setTimeout","fetchContacts","get","params","session","then","data","queues","length","clearTimeout","contacts","err","IconChannel","channel","createElement","style","verticalAlign","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","handleClose","handleCloseAlert","handleSaveTicket","contactId","error","queueId","ticket","post","userId","status","JSON","parse","response","_ticket$user","_ticket$queue","name","queue","handleSelectOption","e","newValue","number","handleCloseContactModal","handleAddNewContactTicket","contact","createAddContactOption","filterOptions","filtered","inputValue","push","renderOption","option","Fragment","component","marginLeft","display","alignItems","lineHeight","t","renderOptionLabel","renderContactAutocomplete","xs","item","fullWidth","clearOnBlur","autoHighlight","freeSolo","clearOnEscape","getOptionLabel","onChange","renderInput","Object","assign","label","variant","autoFocus","target","value","onKeyPress","key","InputProps","endAdornment","size","open","dividers","width","container","spacing","required","displayEmpty","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","renderValue","find","q","map","dense","primary","whatsapp","w","className","onClick","disabled","type","initialValues","onSave","isOpen"],"sources":["/workspaces/simao/whaticket/frontend/src/components/NewTicketModal/index.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport ContactModal from \"../ContactModal\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Grid, ListItemText, MenuItem, Select } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\nimport { Facebook, Instagram, WhatsApp } from \"@material-ui/icons\";\nimport ShowTicketOpen from \"../ShowTicketOpenModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  online: {\n    fontSize: 11,\n    color: \"#25d366\"\n  },\n  offline: {\n    fontSize: 11,\n    color: \"#e1306c\"\n  }\n}));\n\nconst filter = createFilterOptions({\n  trim: true,\n});\n\nconst NewTicketModal = ({ modalOpen, onClose, initialContact }) => {\n  const classes = useStyles();\n  const [options, setOptions] = useState([]);\n  const [channelFilter, setChannelFilter] = useState(null);\n\n  const [loading, setLoading] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [selectedQueue, setSelectedQueue] = useState(\"\");\n  const [selectedWhatsapp, setSelectedWhatsapp] = useState(\"\");\n  const [newContact, setNewContact] = useState({});\n  const [whatsapps, setWhatsapps] = useState([]);\n  const [contactModalOpen, setContactModalOpen] = useState(false);\n  const { user } = useContext(AuthContext);\n  const { companyId, whatsappId } = user;\n\n  const [openAlert, setOpenAlert] = useState(false);\n  const [userTicketOpen, setUserTicketOpen] = useState(\"\");\n  const [queueTicketOpen, setQueueTicketOpen] = useState(\"\");\n\n  useEffect(() => {\n    if (initialContact?.id !== undefined) {\n      setOptions([initialContact]);\n      setSelectedContact(initialContact);\n    }\n  }, [initialContact]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        api\n          // .get(`/whatsapp/filter`, { params: { companyId, session: 0, channel: channelFilter } })\n          .get(`/whatsapp`, { params: { companyId, session: 0 } })\n          .then(({ data }) => setWhatsapps(data));\n\n          // .then(({ data }) => {\n          //   const mappedWhatsapps = data.map((whatsapp) => ({\n          //     ...whatsapp,\n          //     selected: false,\n          //   }));\n          //   setWhatsapps(mappedWhatsapps);\n          //   if (channelFilter && mappedWhatsapps.length && mappedWhatsapps?.length === 1 && (user.whatsappId === null || user?.whatsapp?.channel !== channelFilter)) {\n          //     setSelectedWhatsapp(mappedWhatsapps[0].id)\n          //   }\n          // });\n      };\n\n      if (whatsappId !== null && whatsappId !== undefined) {\n        setSelectedWhatsapp(whatsappId)\n      }\n\n      if (user.queues.length === 1) {\n        setSelectedQueue(user.queues[0].id)\n      }\n      fetchContacts();\n      setLoading(false);\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [selectedContact, channelFilter])\n\n  useEffect(() => {\n    if (!modalOpen || searchParam.length < 3) {\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        try {\n          const { data } = await api.get(\"contacts\", {\n            params: { searchParam },\n          });\n          setOptions(data.contacts);\n          setLoading(false);\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n      fetchContacts();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, modalOpen]);\n\n  const IconChannel = (channel) => {\n    switch (channel) {\n      case \"facebook\":\n        return <Facebook style={{ color: \"#3b5998\", verticalAlign: \"middle\" }} />;\n      case \"instagram\":\n        return <Instagram style={{ color: \"#e1306c\", verticalAlign: \"middle\" }} />;\n      case \"whatsapp\":\n        return <WhatsApp style={{ color: \"#25d366\", verticalAlign: \"middle\" }} />\n      default:\n        return \"error\";\n    }\n  };\n\n  const handleClose = () => {\n    onClose();\n    setSearchParam(\"\");\n    setOpenAlert(false);\n    setUserTicketOpen(\"\");\n    setQueueTicketOpen(\"\");\n    setSelectedContact(null);\n  };\n\n  const handleCloseAlert = () => {\n    setOpenAlert(false);\n    setLoading(false);\n    setOpenAlert(false);\n    setUserTicketOpen(\"\");\n    setQueueTicketOpen(\"\");\n  };\n\n  const handleSaveTicket = async contactId => {\n    if (!contactId) return;\n    // if (selectedQueue === \"\" && user.profile !== 'admin') {\n    if (selectedQueue === \"\") {\n      toast.error(\"Selecione uma fila\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const queueId = selectedQueue !== \"\" ? selectedQueue : null;\n      const whatsappId = selectedWhatsapp !== \"\" ? selectedWhatsapp : null;\n      const { data: ticket } = await api.post(\"/tickets\", {\n        contactId: contactId,\n        queueId,\n        whatsappId,\n        userId: user.id,\n        status: \"open\",\n      });\n\n      onClose(ticket);\n    } catch (err) {\n\n      const ticket = JSON.parse(err.response.data.error);\n\n      if (ticket.userId !== user?.id) {\n        setOpenAlert(true);\n        setUserTicketOpen(ticket?.user?.name);\n        setQueueTicketOpen(ticket?.queue?.name);\n      } else {\n        setOpenAlert(false);\n        setUserTicketOpen(\"\");\n        setQueueTicketOpen(\"\");\n        setLoading(false);\n        onClose(ticket);\n      }\n    }\n    setLoading(false);\n  };\n\n  const handleSelectOption = (e, newValue) => {\n    if (newValue?.number) {\n      setSelectedContact(newValue);\n    } else if (newValue?.name) {\n      setNewContact({ name: newValue.name });\n      setContactModalOpen(true);\n    }\n  };\n\n  const handleCloseContactModal = () => {\n    setContactModalOpen(false);\n  };\n\n  const handleAddNewContactTicket = contact => {\n    setSelectedContact(contact);\n  };\n\n  const createAddContactOption = (filterOptions, params) => {\n    const filtered = filter(filterOptions, params);\n    if (params.inputValue !== \"\" && !loading && searchParam.length >= 3) {\n      filtered.push({\n        name: `${params.inputValue}`,\n      });\n    }\n    return filtered;\n  };\n\n  const renderOption = option => {\n    if (option.number) {\n      return <>\n        {IconChannel(option.channel)}\n        <Typography component=\"span\" style={{ fontSize: 14, marginLeft: \"10px\", display: \"inline-flex\", alignItems: \"center\", lineHeight: \"2\" }}>\n          {option.name} - {option.number}\n        </Typography>\n      </>\n    } else {\n      return `${i18n.t(\"newTicketModal.add\")} ${option.name}`;\n    }\n  };\n\n  const renderOptionLabel = option => {\n    if (option.number) {\n      return `${option.name} - ${option.number}`;\n    } else {\n      return `${option.name}`;\n    }\n  };\n\n  const renderContactAutocomplete = () => {\n    if (initialContact === undefined || initialContact.id === undefined) {\n      return (\n        <Grid xs={12} item>\n          <Autocomplete\n            fullWidth\n            options={options}\n            loading={loading}\n            clearOnBlur\n            autoHighlight\n            freeSolo\n            clearOnEscape\n            getOptionLabel={renderOptionLabel}\n            renderOption={renderOption}\n            filterOptions={createAddContactOption}\n            onChange={(e, newValue) => {                     \n              setChannelFilter(newValue ? newValue.channel : \"whatsapp\");\n              handleSelectOption(e, newValue)\n            }}\n            renderInput={params => (\n              <TextField\n                {...params}\n                label={i18n.t(\"newTicketModal.fieldLabel\")}\n                variant=\"outlined\"\n                autoFocus\n                onChange={e => setSearchParam(e.target.value)}\n                onKeyPress={e => {\n                  if (loading || !selectedContact) return;\n                  else if (e.key === \"Enter\") {\n                    handleSaveTicket(selectedContact.id);\n                  }\n                }}\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <React.Fragment>\n                      {loading ? (\n                        <CircularProgress color=\"inherit\" size={20} />\n                      ) : null}\n                      {params.InputProps.endAdornment}\n                    </React.Fragment>\n                  ),\n                }}\n              />\n            )}\n          />\n        </Grid>\n      )\n    }\n    return null;\n  }\n\n  return (\n    <>\n\n      <Dialog open={modalOpen} onClose={handleClose}>\n        <DialogTitle id=\"form-dialog-title\">\n          {i18n.t(\"newTicketModal.title\")}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Grid style={{ width: 300 }} container spacing={2}>\n            {/* CONTATO */}\n            {renderContactAutocomplete()}\n            {/* FILA */}\n            <Grid xs={12} item>\n              <Select\n                required\n                fullWidth\n                displayEmpty\n                variant=\"outlined\"\n                value={selectedQueue}\n                onChange={(e) => {\n                  setSelectedQueue(e.target.value)\n                }}\n                MenuProps={{\n                  anchorOrigin: {\n                    vertical: \"bottom\",\n                    horizontal: \"left\",\n                  },\n                  transformOrigin: {\n                    vertical: \"top\",\n                    horizontal: \"left\",\n                  },\n                  getContentAnchorEl: null,\n                }}\n                renderValue={() => {\n                  if (selectedQueue === \"\") {\n                    return \"Selecione uma fila\"\n                  }\n                  const queue = user.queues.find(q => q.id === selectedQueue)\n                  return queue.name\n                }}\n              >\n                {user.queues?.length > 0 &&\n                  user.queues.map((queue, key) => (\n                    <MenuItem dense key={key} value={queue.id}>\n                      <ListItemText primary={queue.name} />\n                    </MenuItem>\n                  ))\n                }\n              </Select>\n            </Grid>\n            {/* CONEXAO */}\n            <Grid xs={12} item>\n              <Select\n                required\n                fullWidth\n                displayEmpty\n                variant=\"outlined\"\n                value={selectedWhatsapp}\n                onChange={(e) => {\n                  setSelectedWhatsapp(e.target.value)\n                }}\n                MenuProps={{\n                  anchorOrigin: {\n                    vertical: \"bottom\",\n                    horizontal: \"left\",\n                  },\n                  transformOrigin: {\n                    vertical: \"top\",\n                    horizontal: \"left\",\n                  },\n                  getContentAnchorEl: null,\n                }}\n                renderValue={() => {\n                  if (selectedWhatsapp === \"\") {\n                    return \"Selecione uma Conexão\"\n                  }\n                  const whatsapp = whatsapps.find(w => w.id === selectedWhatsapp)\n                  return whatsapp?.name\n                }}\n              >\n                {whatsapps?.length > 0 &&\n                  whatsapps.map((whatsapp, key) => (\n                    <MenuItem dense key={key} value={whatsapp.id}>\n                      <ListItemText\n                        primary={\n                          <>\n                            {IconChannel(whatsapp.channel)}\n                            <Typography component=\"span\" style={{ fontSize: 14, marginLeft: \"10px\", display: \"inline-flex\", alignItems: \"center\", lineHeight: \"2\" }}>\n                              {whatsapp.name} &nbsp; <p className={(whatsapp.status) === 'CONNECTED' ? classes.online : classes.offline} >({whatsapp.status})</p>\n                            </Typography>\n                          </>\n                        }\n                      />\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleClose}\n            color=\"secondary\"\n            disabled={loading}\n            variant=\"outlined\"\n          >\n            {i18n.t(\"newTicketModal.buttons.cancel\")}\n          </Button>\n          <ButtonWithSpinner\n            variant=\"contained\"\n            type=\"button\"\n            disabled={!selectedContact}\n            onClick={() => handleSaveTicket(selectedContact.id)}\n            color=\"primary\"\n            loading={loading}\n          >\n            {i18n.t(\"newTicketModal.buttons.ok\")}\n          </ButtonWithSpinner>\n        </DialogActions>\n        {contactModalOpen && (\n          <ContactModal\n            open={contactModalOpen}\n            initialValues={newContact}\n            onClose={handleCloseContactModal}\n            onSave={handleAddNewContactTicket}\n          ></ContactModal>\n        )}\n        {openAlert && (\n          <ShowTicketOpen\n            isOpen={openAlert}\n            handleClose={handleCloseAlert}\n            user={userTicketOpen}\n            queue={queueTicketOpen}\n          />\n        )}\n      </Dialog >\n    </>\n  );\n};\nexport default NewTicketModal;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,YAAY,IAAIC,mBAAmB,QAAQ,+BAA+B;AACjF,OAAOC,gBAAgB,MAAM,oCAAoC;AACjE,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,iBAAiB,MAAM,sBAAsB;AACpD,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,IAAI,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,mBAAmB;AACxE,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,oBAAoB;AAClE,OAAOC,cAAc,MAAM,wBAAwB;AAEnD,MAAMC,SAAS,GAAG1B,UAAU,CAAE2B,KAAK,KAAM;EACvCC,MAAM,EAAE;IACNC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,OAAO,EAAE;IACPF,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT;AACF,CAAC,CAAC,CAAC;AAEH,MAAME,MAAM,GAAGvB,mBAAmB,CAAC;EACjCwB,IAAI,EAAE;AACR,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAGA,CAAC;EAAEC,SAAS;EAAEC,OAAO;EAAEC;AAAe,CAAC,KAAK;EAAA,IAAAC,YAAA;EACjE,MAAMC,OAAO,GAAGb,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC8C,aAAa,EAAEC,gBAAgB,CAAC,GAAG/C,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAM,CAACgD,OAAO,EAAEC,UAAU,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkD,WAAW,EAAEC,cAAc,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoD,eAAe,EAAEC,kBAAkB,CAAC,GAAGrD,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACsD,aAAa,EAAEC,gBAAgB,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACwD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC0D,UAAU,EAAEC,aAAa,CAAC,GAAG3D,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAAC4D,SAAS,EAAEC,YAAY,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC8D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM;IAAEgE;EAAK,CAAC,GAAG9D,UAAU,CAACkB,WAAW,CAAC;EACxC,MAAM;IAAE6C,SAAS;IAAEC;EAAW,CAAC,GAAGF,IAAI;EAEtC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGpE,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqE,cAAc,EAAEC,iBAAiB,CAAC,GAAGtE,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACuE,eAAe,EAAEC,kBAAkB,CAAC,GAAGxE,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd,IAAI,CAAAwC,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEgC,EAAE,MAAKC,SAAS,EAAE;MACpC7B,UAAU,CAAC,CAACJ,cAAc,CAAC,CAAC;MAC5BY,kBAAkB,CAACZ,cAAc,CAAC;IACpC;EACF,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpBxC,SAAS,CAAC,MAAM;IACdgD,UAAU,CAAC,IAAI,CAAC;IAChB,MAAM0B,eAAe,GAAGC,UAAU,CAAC,MAAM;MACvC,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;QAChC7D;QACE;QAAA,CACC8D,GAAG,CAAC,WAAW,EAAE;UAAEC,MAAM,EAAE;YAAEd,SAAS;YAAEe,OAAO,EAAE;UAAE;QAAE,CAAC,CAAC,CACvDC,IAAI,CAAC,CAAC;UAAEC;QAAK,CAAC,KAAKrB,YAAY,CAACqB,IAAI,CAAC,CAAC;;QAEvC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACJ,CAAC;MAED,IAAIhB,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAKQ,SAAS,EAAE;QACnDjB,mBAAmB,CAACS,UAAU,CAAC;MACjC;MAEA,IAAIF,IAAI,CAACmB,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;QAC5B7B,gBAAgB,CAACS,IAAI,CAACmB,MAAM,CAAC,CAAC,CAAC,CAACV,EAAE,CAAC;MACrC;MACAI,aAAa,CAAC,CAAC;MACf5B,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMoC,YAAY,CAACV,eAAe,CAAC;EAC5C,CAAC,EAAE,CAACvB,eAAe,EAAEN,aAAa,CAAC,CAAC;EAEpC7C,SAAS,CAAC,MAAM;IACd,IAAI,CAACsC,SAAS,IAAIW,WAAW,CAACkC,MAAM,GAAG,CAAC,EAAE;MACxCnC,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IACAA,UAAU,CAAC,IAAI,CAAC;IAChB,MAAM0B,eAAe,GAAGC,UAAU,CAAC,MAAM;MACvC,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;QAChC,IAAI;UACF,MAAM;YAAEK;UAAK,CAAC,GAAG,MAAMlE,GAAG,CAAC8D,GAAG,CAAC,UAAU,EAAE;YACzCC,MAAM,EAAE;cAAE7B;YAAY;UACxB,CAAC,CAAC;UACFL,UAAU,CAACqC,IAAI,CAACI,QAAQ,CAAC;UACzBrC,UAAU,CAAC,KAAK,CAAC;QACnB,CAAC,CAAC,OAAOsC,GAAG,EAAE;UACZtC,UAAU,CAAC,KAAK,CAAC;UACjB9B,UAAU,CAACoE,GAAG,CAAC;QACjB;MACF,CAAC;MACDV,aAAa,CAAC,CAAC;IACjB,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMQ,YAAY,CAACV,eAAe,CAAC;EAC5C,CAAC,EAAE,CAACzB,WAAW,EAAEX,SAAS,CAAC,CAAC;EAE5B,MAAMiD,WAAW,GAAIC,OAAO,IAAK;IAC/B,QAAQA,OAAO;MACb,KAAK,UAAU;QACb,oBAAO1F,KAAA,CAAA2F,aAAA,CAAChE,QAAQ;UAACiE,KAAK,EAAE;YAAEzD,KAAK,EAAE,SAAS;YAAE0D,aAAa,EAAE;UAAS,CAAE;UAAAC,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CAAE,CAAC;MAC3E,KAAK,WAAW;QACd,oBAAOnG,KAAA,CAAA2F,aAAA,CAAC/D,SAAS;UAACgE,KAAK,EAAE;YAAEzD,KAAK,EAAE,SAAS;YAAE0D,aAAa,EAAE;UAAS,CAAE;UAAAC,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CAAE,CAAC;MAC5E,KAAK,UAAU;QACb,oBAAOnG,KAAA,CAAA2F,aAAA,CAAC9D,QAAQ;UAAC+D,KAAK,EAAE;YAAEzD,KAAK,EAAE,SAAS;YAAE0D,aAAa,EAAE;UAAS,CAAE;UAAAC,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CAAE,CAAC;MAC3E;QACE,OAAO,OAAO;IAClB;EACF,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB3D,OAAO,CAAC,CAAC;IACTW,cAAc,CAAC,EAAE,CAAC;IAClBiB,YAAY,CAAC,KAAK,CAAC;IACnBE,iBAAiB,CAAC,EAAE,CAAC;IACrBE,kBAAkB,CAAC,EAAE,CAAC;IACtBnB,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAM+C,gBAAgB,GAAGA,CAAA,KAAM;IAC7BhC,YAAY,CAAC,KAAK,CAAC;IACnBnB,UAAU,CAAC,KAAK,CAAC;IACjBmB,YAAY,CAAC,KAAK,CAAC;IACnBE,iBAAiB,CAAC,EAAE,CAAC;IACrBE,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,MAAM6B,gBAAgB,GAAG,MAAMC,SAAS,IAAI;IAC1C,IAAI,CAACA,SAAS,EAAE;IAChB;IACA,IAAIhD,aAAa,KAAK,EAAE,EAAE;MACxB7B,KAAK,CAAC8E,KAAK,CAAC,oBAAoB,CAAC;MACjC;IACF;IAEAtD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMuD,OAAO,GAAGlD,aAAa,KAAK,EAAE,GAAGA,aAAa,GAAG,IAAI;MAC3D,MAAMY,UAAU,GAAGV,gBAAgB,KAAK,EAAE,GAAGA,gBAAgB,GAAG,IAAI;MACpE,MAAM;QAAE0B,IAAI,EAAEuB;MAAO,CAAC,GAAG,MAAMzF,GAAG,CAAC0F,IAAI,CAAC,UAAU,EAAE;QAClDJ,SAAS,EAAEA,SAAS;QACpBE,OAAO;QACPtC,UAAU;QACVyC,MAAM,EAAE3C,IAAI,CAACS,EAAE;QACfmC,MAAM,EAAE;MACV,CAAC,CAAC;MAEFpE,OAAO,CAACiE,MAAM,CAAC;IACjB,CAAC,CAAC,OAAOlB,GAAG,EAAE;MAEZ,MAAMkB,MAAM,GAAGI,IAAI,CAACC,KAAK,CAACvB,GAAG,CAACwB,QAAQ,CAAC7B,IAAI,CAACqB,KAAK,CAAC;MAElD,IAAIE,MAAM,CAACE,MAAM,MAAK3C,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES,EAAE,GAAE;QAAA,IAAAuC,YAAA,EAAAC,aAAA;QAC9B7C,YAAY,CAAC,IAAI,CAAC;QAClBE,iBAAiB,CAACmC,MAAM,aAANA,MAAM,wBAAAO,YAAA,GAANP,MAAM,CAAEzC,IAAI,cAAAgD,YAAA,uBAAZA,YAAA,CAAcE,IAAI,CAAC;QACrC1C,kBAAkB,CAACiC,MAAM,aAANA,MAAM,wBAAAQ,aAAA,GAANR,MAAM,CAAEU,KAAK,cAAAF,aAAA,uBAAbA,aAAA,CAAeC,IAAI,CAAC;MACzC,CAAC,MAAM;QACL9C,YAAY,CAAC,KAAK,CAAC;QACnBE,iBAAiB,CAAC,EAAE,CAAC;QACrBE,kBAAkB,CAAC,EAAE,CAAC;QACtBvB,UAAU,CAAC,KAAK,CAAC;QACjBT,OAAO,CAACiE,MAAM,CAAC;MACjB;IACF;IACAxD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMmE,kBAAkB,GAAGA,CAACC,CAAC,EAAEC,QAAQ,KAAK;IAC1C,IAAIA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,EAAE;MACpBlE,kBAAkB,CAACiE,QAAQ,CAAC;IAC9B,CAAC,MAAM,IAAIA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEJ,IAAI,EAAE;MACzBvD,aAAa,CAAC;QAAEuD,IAAI,EAAEI,QAAQ,CAACJ;MAAK,CAAC,CAAC;MACtCnD,mBAAmB,CAAC,IAAI,CAAC;IAC3B;EACF,CAAC;EAED,MAAMyD,uBAAuB,GAAGA,CAAA,KAAM;IACpCzD,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAM0D,yBAAyB,GAAGC,OAAO,IAAI;IAC3CrE,kBAAkB,CAACqE,OAAO,CAAC;EAC7B,CAAC;EAED,MAAMC,sBAAsB,GAAGA,CAACC,aAAa,EAAE7C,MAAM,KAAK;IACxD,MAAM8C,QAAQ,GAAGzF,MAAM,CAACwF,aAAa,EAAE7C,MAAM,CAAC;IAC9C,IAAIA,MAAM,CAAC+C,UAAU,KAAK,EAAE,IAAI,CAAC9E,OAAO,IAAIE,WAAW,CAACkC,MAAM,IAAI,CAAC,EAAE;MACnEyC,QAAQ,CAACE,IAAI,CAAC;QACZb,IAAI,EAAE,GAAGnC,MAAM,CAAC+C,UAAU;MAC5B,CAAC,CAAC;IACJ;IACA,OAAOD,QAAQ;EACjB,CAAC;EAED,MAAMG,YAAY,GAAGC,MAAM,IAAI;IAC7B,IAAIA,MAAM,CAACV,MAAM,EAAE;MACjB,oBAAOxH,KAAA,CAAA2F,aAAA,CAAA3F,KAAA,CAAAmI,QAAA,QACJ1C,WAAW,CAACyC,MAAM,CAACxC,OAAO,CAAC,eAC5B1F,KAAA,CAAA2F,aAAA,CAAC/E,UAAU;QAACwH,SAAS,EAAC,MAAM;QAACxC,KAAK,EAAE;UAAE1D,QAAQ,EAAE,EAAE;UAAEmG,UAAU,EAAE,MAAM;UAAEC,OAAO,EAAE,aAAa;UAAEC,UAAU,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAI,CAAE;QAAA1C,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACrI+B,MAAM,CAACf,IAAI,EAAC,KAAG,EAACe,MAAM,CAACV,MACd,CACZ,CAAC;IACL,CAAC,MAAM;MACL,OAAO,GAAGxG,IAAI,CAACyH,CAAC,CAAC,oBAAoB,CAAC,IAAIP,MAAM,CAACf,IAAI,EAAE;IACzD;EACF,CAAC;EAED,MAAMuB,iBAAiB,GAAGR,MAAM,IAAI;IAClC,IAAIA,MAAM,CAACV,MAAM,EAAE;MACjB,OAAO,GAAGU,MAAM,CAACf,IAAI,MAAMe,MAAM,CAACV,MAAM,EAAE;IAC5C,CAAC,MAAM;MACL,OAAO,GAAGU,MAAM,CAACf,IAAI,EAAE;IACzB;EACF,CAAC;EAED,MAAMwB,yBAAyB,GAAGA,CAAA,KAAM;IACtC,IAAIjG,cAAc,KAAKiC,SAAS,IAAIjC,cAAc,CAACgC,EAAE,KAAKC,SAAS,EAAE;MACnE,oBACE3E,KAAA,CAAA2F,aAAA,CAACrE,IAAI;QAACsH,EAAE,EAAE,EAAG;QAACC,IAAI;QAAA/C,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAChBnG,KAAA,CAAA2F,aAAA,CAAC9E,YAAY;QACXiI,SAAS;QACTjG,OAAO,EAAEA,OAAQ;QACjBI,OAAO,EAAEA,OAAQ;QACjB8F,WAAW;QACXC,aAAa;QACbC,QAAQ;QACRC,aAAa;QACbC,cAAc,EAAET,iBAAkB;QAClCT,YAAY,EAAEA,YAAa;QAC3BJ,aAAa,EAAED,sBAAuB;QACtCwB,QAAQ,EAAEA,CAAC9B,CAAC,EAAEC,QAAQ,KAAK;UACzBvE,gBAAgB,CAACuE,QAAQ,GAAGA,QAAQ,CAAC7B,OAAO,GAAG,UAAU,CAAC;UAC1D2B,kBAAkB,CAACC,CAAC,EAAEC,QAAQ,CAAC;QACjC,CAAE;QACF8B,WAAW,EAAErE,MAAM,iBACjBhF,KAAA,CAAA2F,aAAA,CAACpF,SAAS,EAAA+I,MAAA,CAAAC,MAAA,KACJvE,MAAM;UACVwE,KAAK,EAAExI,IAAI,CAACyH,CAAC,CAAC,2BAA2B,CAAE;UAC3CgB,OAAO,EAAC,UAAU;UAClBC,SAAS;UACTN,QAAQ,EAAE9B,CAAC,IAAIlE,cAAc,CAACkE,CAAC,CAACqC,MAAM,CAACC,KAAK,CAAE;UAC9CC,UAAU,EAAEvC,CAAC,IAAI;YACf,IAAIrE,OAAO,IAAI,CAACI,eAAe,EAAE,OAAO,KACnC,IAAIiE,CAAC,CAACwC,GAAG,KAAK,OAAO,EAAE;cAC1BxD,gBAAgB,CAACjD,eAAe,CAACqB,EAAE,CAAC;YACtC;UACF,CAAE;UACFqF,UAAU,EAAE;YACV,GAAG/E,MAAM,CAAC+E,UAAU;YACpBC,YAAY,eACVhK,KAAA,CAAA2F,aAAA,CAAC3F,KAAK,CAACmI,QAAQ;cAAArC,MAAA;cAAAC,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,GACZlD,OAAO,gBACNjD,KAAA,CAAA2F,aAAA,CAAC5E,gBAAgB;cAACoB,KAAK,EAAC,SAAS;cAAC8H,IAAI,EAAE,EAAG;cAAAnE,MAAA;cAAAC,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,CAAE,CAAC,GAC5C,IAAI,EACPnB,MAAM,CAAC+E,UAAU,CAACC,YACL;UAEpB,CAAE;UAAAlE,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,EACH,CACD;QAAAL,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CACH,CACG,CAAC;IAEX;IACA,OAAO,IAAI;EACb,CAAC;EAED,oBACEnG,KAAA,CAAA2F,aAAA,CAAA3F,KAAA,CAAAmI,QAAA,qBAEEnI,KAAA,CAAA2F,aAAA,CAACnF,MAAM;IAAC0J,IAAI,EAAE1H,SAAU;IAACC,OAAO,EAAE2D,WAAY;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5CnG,KAAA,CAAA2F,aAAA,CAAChF,WAAW;IAAC+D,EAAE,EAAC,mBAAmB;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChCnF,IAAI,CAACyH,CAAC,CAAC,sBAAsB,CACnB,CAAC,eACdzI,KAAA,CAAA2F,aAAA,CAACjF,aAAa;IAACyJ,QAAQ;IAAArE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrBnG,KAAA,CAAA2F,aAAA,CAACrE,IAAI;IAACsE,KAAK,EAAE;MAAEwE,KAAK,EAAE;IAAI,CAAE;IAACC,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAxE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAE/CwC,yBAAyB,CAAC,CAAC,eAE5B3I,KAAA,CAAA2F,aAAA,CAACrE,IAAI;IAACsH,EAAE,EAAE,EAAG;IAACC,IAAI;IAAA/C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChBnG,KAAA,CAAA2F,aAAA,CAAClE,MAAM;IACL8I,QAAQ;IACRzB,SAAS;IACT0B,YAAY;IACZf,OAAO,EAAC,UAAU;IAClBG,KAAK,EAAErG,aAAc;IACrB6F,QAAQ,EAAG9B,CAAC,IAAK;MACf9D,gBAAgB,CAAC8D,CAAC,CAACqC,MAAM,CAACC,KAAK,CAAC;IAClC,CAAE;IACFa,SAAS,EAAE;MACTC,YAAY,EAAE;QACZC,QAAQ,EAAE,QAAQ;QAClBC,UAAU,EAAE;MACd,CAAC;MACDC,eAAe,EAAE;QACfF,QAAQ,EAAE,KAAK;QACfC,UAAU,EAAE;MACd,CAAC;MACDE,kBAAkB,EAAE;IACtB,CAAE;IACFC,WAAW,EAAEA,CAAA,KAAM;MACjB,IAAIxH,aAAa,KAAK,EAAE,EAAE;QACxB,OAAO,oBAAoB;MAC7B;MACA,MAAM6D,KAAK,GAAGnD,IAAI,CAACmB,MAAM,CAAC4F,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACvG,EAAE,KAAKnB,aAAa,CAAC;MAC3D,OAAO6D,KAAK,CAACD,IAAI;IACnB,CAAE;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAED,EAAAxD,YAAA,GAAAsB,IAAI,CAACmB,MAAM,cAAAzC,YAAA,uBAAXA,YAAA,CAAa0C,MAAM,IAAG,CAAC,IACtBpB,IAAI,CAACmB,MAAM,CAAC8F,GAAG,CAAC,CAAC9D,KAAK,EAAE0C,GAAG,kBACzB9J,KAAA,CAAA2F,aAAA,CAACnE,QAAQ;IAAC2J,KAAK;IAACrB,GAAG,EAAEA,GAAI;IAACF,KAAK,EAAExC,KAAK,CAAC1C,EAAG;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxCnG,KAAA,CAAA2F,aAAA,CAACpE,YAAY;IAAC6J,OAAO,EAAEhE,KAAK,CAACD,IAAK;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC5B,CACX,CAEG,CACJ,CAAC,eAEPnG,KAAA,CAAA2F,aAAA,CAACrE,IAAI;IAACsH,EAAE,EAAE,EAAG;IAACC,IAAI;IAAA/C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChBnG,KAAA,CAAA2F,aAAA,CAAClE,MAAM;IACL8I,QAAQ;IACRzB,SAAS;IACT0B,YAAY;IACZf,OAAO,EAAC,UAAU;IAClBG,KAAK,EAAEnG,gBAAiB;IACxB2F,QAAQ,EAAG9B,CAAC,IAAK;MACf5D,mBAAmB,CAAC4D,CAAC,CAACqC,MAAM,CAACC,KAAK,CAAC;IACrC,CAAE;IACFa,SAAS,EAAE;MACTC,YAAY,EAAE;QACZC,QAAQ,EAAE,QAAQ;QAClBC,UAAU,EAAE;MACd,CAAC;MACDC,eAAe,EAAE;QACfF,QAAQ,EAAE,KAAK;QACfC,UAAU,EAAE;MACd,CAAC;MACDE,kBAAkB,EAAE;IACtB,CAAE;IACFC,WAAW,EAAEA,CAAA,KAAM;MACjB,IAAItH,gBAAgB,KAAK,EAAE,EAAE;QAC3B,OAAO,uBAAuB;MAChC;MACA,MAAM4H,QAAQ,GAAGxH,SAAS,CAACmH,IAAI,CAACM,CAAC,IAAIA,CAAC,CAAC5G,EAAE,KAAKjB,gBAAgB,CAAC;MAC/D,OAAO4H,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAElE,IAAI;IACvB,CAAE;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAED,CAAAtC,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEwB,MAAM,IAAG,CAAC,IACpBxB,SAAS,CAACqH,GAAG,CAAC,CAACG,QAAQ,EAAEvB,GAAG,kBAC1B9J,KAAA,CAAA2F,aAAA,CAACnE,QAAQ;IAAC2J,KAAK;IAACrB,GAAG,EAAEA,GAAI;IAACF,KAAK,EAAEyB,QAAQ,CAAC3G,EAAG;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3CnG,KAAA,CAAA2F,aAAA,CAACpE,YAAY;IACX6J,OAAO,eACLpL,KAAA,CAAA2F,aAAA,CAAA3F,KAAA,CAAAmI,QAAA,QACG1C,WAAW,CAAC4F,QAAQ,CAAC3F,OAAO,CAAC,eAC9B1F,KAAA,CAAA2F,aAAA,CAAC/E,UAAU;MAACwH,SAAS,EAAC,MAAM;MAACxC,KAAK,EAAE;QAAE1D,QAAQ,EAAE,EAAE;QAAEmG,UAAU,EAAE,MAAM;QAAEC,OAAO,EAAE,aAAa;QAAEC,UAAU,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAI,CAAE;MAAA1C,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACrIkF,QAAQ,CAAClE,IAAI,EAAC,QAAQ,eAAAnH,KAAA,CAAA2F,aAAA;MAAG4F,SAAS,EAAGF,QAAQ,CAACxE,MAAM,KAAM,WAAW,GAAGjE,OAAO,CAACX,MAAM,GAAGW,OAAO,CAACR,OAAQ;MAAA0D,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAE,GAAC,EAACkF,QAAQ,CAACxE,MAAM,EAAC,GAAI,CACxH,CACZ,CACH;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACF,CACO,CACX,CACG,CACJ,CACF,CACO,CAAC,eAChBnG,KAAA,CAAA2F,aAAA,CAAClF,aAAa;IAAAqF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACZnG,KAAA,CAAA2F,aAAA,CAACrF,MAAM;IACLkL,OAAO,EAAEpF,WAAY;IACrBjE,KAAK,EAAC,WAAW;IACjBsJ,QAAQ,EAAExI,OAAQ;IAClBwG,OAAO,EAAC,UAAU;IAAA3D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEjBnF,IAAI,CAACyH,CAAC,CAAC,+BAA+B,CACjC,CAAC,eACTzI,KAAA,CAAA2F,aAAA,CAACzE,iBAAiB;IAChBuI,OAAO,EAAC,WAAW;IACnBiC,IAAI,EAAC,QAAQ;IACbD,QAAQ,EAAE,CAACpI,eAAgB;IAC3BmI,OAAO,EAAEA,CAAA,KAAMlF,gBAAgB,CAACjD,eAAe,CAACqB,EAAE,CAAE;IACpDvC,KAAK,EAAC,SAAS;IACfc,OAAO,EAAEA,OAAQ;IAAA6C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEhBnF,IAAI,CAACyH,CAAC,CAAC,2BAA2B,CAClB,CACN,CAAC,EACf1E,gBAAgB,iBACf/D,KAAA,CAAA2F,aAAA,CAACxE,YAAY;IACX+I,IAAI,EAAEnG,gBAAiB;IACvB4H,aAAa,EAAEhI,UAAW;IAC1BlB,OAAO,EAAEgF,uBAAwB;IACjCmE,MAAM,EAAElE,yBAA0B;IAAA5B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACrB,CAChB,EACA/B,SAAS,iBACRpE,KAAA,CAAA2F,aAAA,CAAC7D,cAAc;IACb+J,MAAM,EAAEzH,SAAU;IAClBgC,WAAW,EAAEC,gBAAiB;IAC9BpC,IAAI,EAAEK,cAAe;IACrB8C,KAAK,EAAE5C,eAAgB;IAAAsB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxB,CAEI,CACT,CAAC;AAEP,CAAC;AACD,eAAe5D,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}