{"ast":null,"code":"var _jsxFileName = \"/workspaces/simao/whaticket/frontend/src/context/EditingMessage/EditingMessageContext.js\";\nimport React, { useState, createContext } from \"react\";\nimport PropTypes from \"prop-types\";\nconst EditMessageContext = createContext();\nconst EditMessageProvider = ({\n  children\n}) => {\n  const [editingMessage, setEditingMessage] = useState(null);\n  return /*#__PURE__*/React.createElement(EditMessageContext.Provider, {\n    value: {\n      editingMessage,\n      setEditingMessage\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }\n  }, children);\n};\nexport { EditMessageContext, EditMessageProvider };","map":{"version":3,"names":["React","useState","createContext","PropTypes","EditMessageContext","EditMessageProvider","children","editingMessage","setEditingMessage","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/workspaces/simao/whaticket/frontend/src/context/EditingMessage/EditingMessageContext.js"],"sourcesContent":["import React, { useState, createContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst EditMessageContext = createContext();\n\nconst EditMessageProvider = ({ children }) => {\n\tconst [editingMessage, setEditingMessage] = useState(null);\n\n\treturn (\n\t\t<EditMessageContext.Provider\n\t\t\tvalue={{ editingMessage, setEditingMessage }}\n\t\t>\n\t\t\t{children}\n\t\t</EditMessageContext.Provider>\n\t);\n};\n\nexport { EditMessageContext, EditMessageProvider};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AACtD,OAAOC,SAAS,MAAM,YAAY;AAElC,MAAMC,kBAAkB,GAAGF,aAAa,CAAC,CAAC;AAE1C,MAAMG,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC7C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE1D,oBACCD,KAAA,CAAAS,aAAA,CAACL,kBAAkB,CAACM,QAAQ;IAC3BC,KAAK,EAAE;MAAEJ,cAAc;MAAEC;IAAkB,CAAE;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAE5CX,QAC2B,CAAC;AAEhC,CAAC;AAED,SAASF,kBAAkB,EAAEC,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module"}