{"ast":null,"code":"var _jsxFileName = \"/workspaces/simao/whaticket/frontend/src/components/Settings/Whitelabel.js\";\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport useSettings from \"../../hooks/useSettings\";\nimport { toast } from 'react-toastify';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { grey, blue } from \"@material-ui/core/colors\";\nimport OnlyForSuperUser from \"../OnlyForSuperUser\";\nimport useAuth from \"../../hooks/useAuth.js/index.js\";\nimport { IconButton, InputAdornment } from \"@material-ui/core\";\nimport { Colorize, AttachFile, Delete } from \"@material-ui/icons\";\nimport ColorPicker from \"../ColorPicker\";\nimport ColorModeContext from \"../../layout/themeContext\";\nimport api from \"../../services/api\";\nimport { getBackendUrl } from \"../../config\";\nimport defaultLogoLight from \"../../assets/logo.png\";\nimport defaultLogoDark from \"../../assets/logo-black.png\";\nimport defaultLogoFavicon from \"../../assets/favicon.ico\";\nimport ColorBoxModal from \"../ColorBoxModal/index.js\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  fixedHeightPaper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: 240\n  },\n  tab: {\n    borderRadius: 4,\n    width: \"100%\",\n    \"& .MuiTab-wrapper\": {\n      color: \"#128c7e\"\n    },\n    \"& .MuiTabs-flexContainer\": {\n      justifyContent: \"center\"\n    }\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: 12,\n    width: \"100%\"\n  },\n  cardAvatar: {\n    fontSize: \"55px\",\n    color: grey[500],\n    backgroundColor: \"#ffffff\",\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  },\n  cardTitle: {\n    fontSize: \"18px\",\n    color: blue[700]\n  },\n  cardSubtitle: {\n    color: grey[600],\n    fontSize: \"14px\"\n  },\n  alignRight: {\n    textAlign: \"right\"\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  selectContainer: {\n    width: \"100%\",\n    textAlign: \"left\"\n  },\n  colorAdorment: {\n    width: 20,\n    height: 20\n  },\n  uploadInput: {\n    display: \"none\"\n  },\n  appLogoLightPreviewDiv: {\n    backgroundColor: \"white\",\n    padding: \"10px\",\n    borderStyle: \"solid\",\n    borderWidth: \"1px\",\n    borderColor: \"#424242\",\n    textAlign: \"center\"\n  },\n  appLogoDarkPreviewDiv: {\n    backgroundColor: \"#424242\",\n    padding: \"10px\",\n    borderStyle: \"solid\",\n    borderWidth: \"1px\",\n    borderColor: \"white\",\n    textAlign: \"center\"\n  },\n  appLogoFaviconPreviewDiv: {\n    padding: \"10px\",\n    borderStyle: \"solid\",\n    borderWidth: \"1px\",\n    borderColor: \"black\",\n    textAlign: \"center\"\n  },\n  appLogoLightPreviewImg: {\n    width: \"100%\",\n    maxHeight: 72,\n    content: \"url(\" + theme.calculatedLogoLight() + \")\"\n  },\n  appLogoDarkPreviewImg: {\n    width: \"100%\",\n    maxHeight: 72,\n    content: \"url(\" + theme.calculatedLogoDark() + \")\"\n  },\n  appLogoFaviconPreviewImg: {\n    width: \"100%\",\n    maxHeight: 72,\n    content: \"url(\" + (theme.appLogoFavicon ? theme.appLogoFavicon : \"\") + \")\"\n  }\n}));\nexport default function Whitelabel(props) {\n  const {\n    settings\n  } = props;\n  const classes = useStyles();\n  const [settingsLoaded, setSettingsLoaded] = useState({});\n  const {\n    getCurrentUserInfo\n  } = useAuth();\n  const [currentUser, setCurrentUser] = useState({});\n  const {\n    colorMode\n  } = useContext(ColorModeContext);\n  const [primaryColorLightModalOpen, setPrimaryColorLightModalOpen] = useState(false);\n  const [primaryColorDarkModalOpen, setPrimaryColorDarkModalOpen] = useState(false);\n  const logoLightInput = useRef(null);\n  const logoDarkInput = useRef(null);\n  const logoFaviconInput = useRef(null);\n  const appNameInput = useRef(null);\n  const [appName, setAppName] = useState(settingsLoaded.appName || \"\");\n  const {\n    update\n  } = useSettings();\n  function updateSettingsLoaded(key, value) {\n    console.log(\"|=========== updateSettingsLoaded ==========|\");\n    console.log(key, value);\n    console.log(\"|===========================================|\");\n    if (key === 'primaryColorLight' || key === 'primaryColorDark' || key === 'appName') {\n      localStorage.setItem(key, value);\n    }\n    ;\n    const newSettings = {\n      ...settingsLoaded\n    };\n    newSettings[key] = value;\n    setSettingsLoaded(newSettings);\n  }\n  useEffect(() => {\n    getCurrentUserInfo().then(u => {\n      setCurrentUser(u);\n    });\n    if (Array.isArray(settings) && settings.length) {\n      var _settings$find, _settings$find2, _settings$find3, _settings$find4, _settings$find5, _settings$find6;\n      const primaryColorLight = (_settings$find = settings.find(s => s.key === \"primaryColorLight\")) === null || _settings$find === void 0 ? void 0 : _settings$find.value;\n      const primaryColorDark = (_settings$find2 = settings.find(s => s.key === \"primaryColorDark\")) === null || _settings$find2 === void 0 ? void 0 : _settings$find2.value;\n      const appLogoLight = (_settings$find3 = settings.find(s => s.key === \"appLogoLight\")) === null || _settings$find3 === void 0 ? void 0 : _settings$find3.value;\n      const appLogoDark = (_settings$find4 = settings.find(s => s.key === \"appLogoDark\")) === null || _settings$find4 === void 0 ? void 0 : _settings$find4.value;\n      const appLogoFavicon = (_settings$find5 = settings.find(s => s.key === \"appLogoFavicon\")) === null || _settings$find5 === void 0 ? void 0 : _settings$find5.value;\n      const appName = (_settings$find6 = settings.find(s => s.key === \"appName\")) === null || _settings$find6 === void 0 ? void 0 : _settings$find6.value;\n      setAppName(appName || \"\");\n      setSettingsLoaded({\n        ...settingsLoaded,\n        primaryColorLight,\n        primaryColorDark,\n        appLogoLight,\n        appLogoDark,\n        appLogoFavicon,\n        appName\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings]);\n  async function handleSaveSetting(key, value) {\n    await update({\n      key,\n      value\n    });\n    updateSettingsLoaded(key, value);\n    toast.success(\"Operação atualizada com sucesso.\");\n  }\n  const uploadLogo = async (e, mode) => {\n    if (!e.target.files) {\n      return;\n    }\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"typeArch\", \"logo\");\n    formData.append(\"mode\", mode);\n    formData.append(\"file\", file);\n    await api.post(\"/settings-whitelabel/logo\", formData, {\n      onUploadProgress: event => {\n        let progress = Math.round(event.loaded * 100 / event.total);\n        console.log(`A imagem  está ${progress}% carregada... `);\n      }\n    }).then(response => {\n      updateSettingsLoaded(`appLogo${mode}`, response.data);\n      colorMode[`setAppLogo${mode}`](getBackendUrl() + \"/public/\" + response.data);\n    }).catch(err => {\n      console.error(`Houve um problema ao realizar o upload da imagem.`);\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    spacing: 3,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(OnlyForSuperUser, {\n    user: currentUser,\n    yes: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.selectContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"primary-color-light-field\",\n      label: \"Cor Prim\\xE1ria Modo Claro\",\n      variant: \"standard\",\n      value: settingsLoaded.primaryColorLight || \"\",\n      onClick: () => setPrimaryColorLightModalOpen(true),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: settingsLoaded.primaryColorLight\n          },\n          className: classes.colorAdorment,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 27\n          }\n        })),\n        endAdornment: /*#__PURE__*/React.createElement(IconButton, {\n          size: \"small\",\n          color: \"default\",\n          onClick: () => setPrimaryColorLightModalOpen(true),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Colorize, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 27\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(ColorBoxModal, {\n      open: primaryColorLightModalOpen,\n      handleClose: () => setPrimaryColorLightModalOpen(false),\n      onChange: color => {\n        handleSaveSetting(\"primaryColorLight\", `#${color.hex}`);\n        colorMode.setPrimaryColorLight(`#${color.hex}`);\n      },\n      currentColor: settingsLoaded.primaryColorLight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.selectContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"primary-color-dark-field\",\n      label: \"Cor Prim\\xE1ria Modo Escuro\",\n      variant: \"standard\",\n      value: settingsLoaded.primaryColorDark || \"\",\n      onClick: () => setPrimaryColorDarkModalOpen(true),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: settingsLoaded.primaryColorDark\n          },\n          className: classes.colorAdorment,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 27\n          }\n        })),\n        endAdornment: /*#__PURE__*/React.createElement(IconButton, {\n          size: \"small\",\n          color: \"default\",\n          onClick: () => setPrimaryColorDarkModalOpen(true),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Colorize, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 27\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(ColorBoxModal, {\n      open: primaryColorDarkModalOpen,\n      handleClose: () => setPrimaryColorDarkModalOpen(false),\n      onChange: color => {\n        handleSaveSetting(\"primaryColorDark\", `#${color.hex}`);\n        colorMode.setPrimaryColorDark(`#${color.hex}`);\n      },\n      currentColor: settingsLoaded.primaryColorDark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.selectContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"appname-field\",\n      label: \"Nome do sistema\",\n      variant: \"standard\",\n      name: \"appName\",\n      value: appName,\n      inputRef: appNameInput,\n      onChange: e => {\n        setAppName(e.target.value);\n      },\n      onBlur: async _ => {\n        await handleSaveSetting(\"appName\", appName);\n        colorMode.setAppName(appName || \"Multi100\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.selectContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"logo-light-upload-field\",\n      label: \"Logotipo claro\",\n      variant: \"standard\",\n      value: settingsLoaded.appLogoLight || \"\",\n      InputProps: {\n        endAdornment: /*#__PURE__*/React.createElement(React.Fragment, null, settingsLoaded.appLogoLight && /*#__PURE__*/React.createElement(IconButton, {\n          size: \"small\",\n          color: \"default\",\n          onClick: () => {\n            handleSaveSetting(\"appLogoLight\", \"\");\n            colorMode.setAppLogoLight(defaultLogoLight);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Delete, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 31\n          }\n        })), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"file\",\n          id: \"upload-logo-light-button\",\n          ref: logoLightInput,\n          className: classes.uploadInput,\n          onChange: e => uploadLogo(e, \"Light\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"upload-logo-light-button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          size: \"small\",\n          color: \"default\",\n          onClick: () => {\n            logoLightInput.current.click();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(AttachFile, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 31\n          }\n        }))))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.selectContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"logo-dark-upload-field\",\n      label: \"Logotipo escuro\",\n      variant: \"standard\",\n      value: settingsLoaded.appLogoDark || \"\",\n      InputProps: {\n        endAdornment: /*#__PURE__*/React.createElement(React.Fragment, null, settingsLoaded.appLogoDark && /*#__PURE__*/React.createElement(IconButton, {\n          size: \"small\",\n          color: \"default\",\n          onClick: () => {\n            handleSaveSetting(\"appLogoDark\", \"\");\n            colorMode.setAppLogoDark(defaultLogoDark);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Delete, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 31\n          }\n        })), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"file\",\n          id: \"upload-logo-dark-button\",\n          ref: logoDarkInput,\n          className: classes.uploadInput,\n          onChange: e => uploadLogo(e, \"Dark\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"upload-logo-dark-button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          size: \"small\",\n          color: \"default\",\n          onClick: () => {\n            logoDarkInput.current.click();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(AttachFile, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 31\n          }\n        }))))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.selectContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"logo-favicon-upload-field\",\n      label: \"Favicon\",\n      variant: \"standard\",\n      value: settingsLoaded.appLogoFavicon || \"\",\n      InputProps: {\n        endAdornment: /*#__PURE__*/React.createElement(React.Fragment, null, settingsLoaded.appLogoFavicon && /*#__PURE__*/React.createElement(IconButton, {\n          size: \"small\",\n          color: \"default\",\n          onClick: () => {\n            handleSaveSetting(\"appLogoFavicon\", \"\");\n            colorMode.setAppLogoFavicon(defaultLogoFavicon);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Delete, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 31\n          }\n        })), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"file\",\n          id: \"upload-logo-favicon-button\",\n          ref: logoFaviconInput,\n          className: classes.uploadInput,\n          onChange: e => uploadLogo(e, \"Favicon\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"upload-logo-favicon-button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          size: \"small\",\n          color: \"default\",\n          onClick: () => {\n            logoFaviconInput.current.click();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(AttachFile, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 31\n          }\n        }))))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.appLogoLightPreviewDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.appLogoLightPreviewImg,\n      alt: \"light-logo-preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.appLogoDarkPreviewDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.appLogoDarkPreviewImg,\n      alt: \"dark-logo-preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.appLogoFaviconPreviewDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.appLogoFaviconPreviewImg,\n      alt: \"favicon-preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 19\n      }\n    })))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","Grid","FormControl","TextField","useSettings","toast","makeStyles","grey","blue","OnlyForSuperUser","useAuth","IconButton","InputAdornment","Colorize","AttachFile","Delete","ColorPicker","ColorModeContext","api","getBackendUrl","defaultLogoLight","defaultLogoDark","defaultLogoFavicon","ColorBoxModal","useStyles","theme","container","paddingTop","spacing","paddingBottom","fixedHeightPaper","padding","display","overflow","flexDirection","height","tab","borderRadius","width","color","justifyContent","paper","alignItems","marginBottom","cardAvatar","fontSize","backgroundColor","cardTitle","cardSubtitle","alignRight","textAlign","fullWidth","selectContainer","colorAdorment","uploadInput","appLogoLightPreviewDiv","borderStyle","borderWidth","borderColor","appLogoDarkPreviewDiv","appLogoFaviconPreviewDiv","appLogoLightPreviewImg","maxHeight","content","calculatedLogoLight","appLogoDarkPreviewImg","calculatedLogoDark","appLogoFaviconPreviewImg","appLogoFavicon","Whitelabel","props","settings","classes","settingsLoaded","setSettingsLoaded","getCurrentUserInfo","currentUser","setCurrentUser","colorMode","primaryColorLightModalOpen","setPrimaryColorLightModalOpen","primaryColorDarkModalOpen","setPrimaryColorDarkModalOpen","logoLightInput","logoDarkInput","logoFaviconInput","appNameInput","appName","setAppName","update","updateSettingsLoaded","key","value","console","log","localStorage","setItem","newSettings","then","u","Array","isArray","length","_settings$find","_settings$find2","_settings$find3","_settings$find4","_settings$find5","_settings$find6","primaryColorLight","find","s","primaryColorDark","appLogoLight","appLogoDark","handleSaveSetting","success","uploadLogo","e","mode","target","files","file","formData","FormData","append","post","onUploadProgress","event","progress","Math","round","loaded","total","response","data","catch","err","error","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","user","yes","xs","sm","md","item","className","id","label","variant","onClick","InputProps","startAdornment","position","style","endAdornment","size","open","handleClose","onChange","hex","setPrimaryColorLight","currentColor","setPrimaryColorDark","name","inputRef","onBlur","_","setAppLogoLight","type","ref","htmlFor","current","click","setAppLogoDark","setAppLogoFavicon","alt"],"sources":["/workspaces/simao/whaticket/frontend/src/components/Settings/Whitelabel.js"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport useSettings from \"../../hooks/useSettings\";\nimport { toast } from 'react-toastify';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { grey, blue } from \"@material-ui/core/colors\";\nimport OnlyForSuperUser from \"../OnlyForSuperUser\";\nimport useAuth from \"../../hooks/useAuth.js/index.js\";\n\nimport {\n  IconButton,\n  InputAdornment,\n} from \"@material-ui/core\";\n\nimport { Colorize, AttachFile, Delete } from \"@material-ui/icons\";\nimport ColorPicker from \"../ColorPicker\";\nimport ColorModeContext from \"../../layout/themeContext\";\nimport api from \"../../services/api\";\nimport { getBackendUrl } from \"../../config\";\n\nimport defaultLogoLight from \"../../assets/logo.png\";\nimport defaultLogoDark from \"../../assets/logo-black.png\";\nimport defaultLogoFavicon from \"../../assets/favicon.ico\";\nimport ColorBoxModal from \"../ColorBoxModal/index.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  fixedHeightPaper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: 240,\n  },\n  tab: {\n    borderRadius: 4,\n    width: \"100%\",\n    \"& .MuiTab-wrapper\": {\n      color: \"#128c7e\"\n    },\n    \"& .MuiTabs-flexContainer\": {\n      justifyContent: \"center\"\n    }\n\n\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: 12,\n    width: \"100%\",\n  },\n  cardAvatar: {\n    fontSize: \"55px\",\n    color: grey[500],\n    backgroundColor: \"#ffffff\",\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  cardTitle: {\n    fontSize: \"18px\",\n    color: blue[700],\n  },\n  cardSubtitle: {\n    color: grey[600],\n    fontSize: \"14px\",\n  },\n  alignRight: {\n    textAlign: \"right\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  selectContainer: {\n    width: \"100%\",\n    textAlign: \"left\",\n  },\n  colorAdorment: {\n    width: 20,\n    height: 20,\n  },\n\n  uploadInput: {\n    display: \"none\",\n  },\n\n  appLogoLightPreviewDiv: {\n    backgroundColor: \"white\",\n    padding: \"10px\",\n    borderStyle: \"solid\",\n    borderWidth: \"1px\",\n    borderColor: \"#424242\",\n    textAlign: \"center\",\n  },\n\n  appLogoDarkPreviewDiv: {\n    backgroundColor: \"#424242\",\n    padding: \"10px\",\n    borderStyle: \"solid\",\n    borderWidth: \"1px\",\n    borderColor: \"white\",\n    textAlign: \"center\",\n  },\n\n  appLogoFaviconPreviewDiv: {\n    padding: \"10px\",\n    borderStyle: \"solid\",\n    borderWidth: \"1px\",\n    borderColor: \"black\",\n    textAlign: \"center\",\n  },\n\n  appLogoLightPreviewImg: {\n    width: \"100%\",\n    maxHeight: 72,\n    content: \"url(\" + theme.calculatedLogoLight() + \")\"\n  },\n\n  appLogoDarkPreviewImg: {\n    width: \"100%\",\n    maxHeight: 72,\n    content: \"url(\" + theme.calculatedLogoDark() + \")\"\n  },\n\n  appLogoFaviconPreviewImg: {\n    width: \"100%\",\n    maxHeight: 72,\n    content: \"url(\" + ((theme.appLogoFavicon) ? theme.appLogoFavicon : \"\") + \")\"\n  }\n}));\n\nexport default function Whitelabel(props) {\n  const { settings } = props;\n  const classes = useStyles();\n  const [settingsLoaded, setSettingsLoaded] = useState({});\n\n  const { getCurrentUserInfo } = useAuth();\n  const [currentUser, setCurrentUser] = useState({});\n\n  const { colorMode } = useContext(ColorModeContext);\n  const [primaryColorLightModalOpen, setPrimaryColorLightModalOpen] = useState(false);\n  const [primaryColorDarkModalOpen, setPrimaryColorDarkModalOpen] = useState(false);\n\n  const logoLightInput = useRef(null);\n  const logoDarkInput = useRef(null);\n  const logoFaviconInput = useRef(null);\n  const appNameInput = useRef(null);\n  const [appName, setAppName] = useState(settingsLoaded.appName || \"\");\n\n  const { update } = useSettings();\n\n  function updateSettingsLoaded(key, value) {\n    console.log(\"|=========== updateSettingsLoaded ==========|\")\n    console.log(key, value)\n    console.log(\"|===========================================|\")\n    if (key === 'primaryColorLight' || key === 'primaryColorDark' || key === 'appName') {\n      localStorage.setItem(key, value);\n    };\n    const newSettings = { ...settingsLoaded };\n    newSettings[key] = value;\n    setSettingsLoaded(newSettings);\n  }\n\n  useEffect(() => {\n    getCurrentUserInfo().then(\n      (u) => {\n        setCurrentUser(u);\n      }\n    );\n\n    if (Array.isArray(settings) && settings.length) {\n      const primaryColorLight = settings.find((s) => s.key === \"primaryColorLight\")?.value;\n      const primaryColorDark = settings.find((s) => s.key === \"primaryColorDark\")?.value;\n      const appLogoLight = settings.find((s) => s.key === \"appLogoLight\")?.value;\n      const appLogoDark = settings.find((s) => s.key === \"appLogoDark\")?.value;\n      const appLogoFavicon = settings.find((s) => s.key === \"appLogoFavicon\")?.value;\n      const appName = settings.find((s) => s.key === \"appName\")?.value;\n\n      setAppName(appName || \"\");\n      setSettingsLoaded({ ...settingsLoaded, primaryColorLight, primaryColorDark, appLogoLight, appLogoDark, appLogoFavicon, appName });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings]);\n\n  async function handleSaveSetting(key, value) {\n\n    await update({\n      key,\n      value,\n    });\n    updateSettingsLoaded(key, value);\n    toast.success(\"Operação atualizada com sucesso.\");\n  }\n\n  const uploadLogo = async (e, mode) => {\n    if (!e.target.files) {\n      return;\n    }\n\n    const file = e.target.files[0];\n    const formData = new FormData();\n\n    formData.append(\"typeArch\", \"logo\");\n    formData.append(\"mode\", mode);\n    formData.append(\"file\", file);\n\n    await api.post(\"/settings-whitelabel/logo\", formData, {\n      onUploadProgress: (event) => {\n        let progress = Math.round(\n          (event.loaded * 100) / event.total\n        );\n        console.log(\n          `A imagem  está ${progress}% carregada... `\n        );\n      },\n    }).then((response) => {\n      updateSettingsLoaded(`appLogo${mode}`, response.data);\n      colorMode[`setAppLogo${mode}`](getBackendUrl() + \"/public/\" + response.data);\n    }).catch((err) => {\n      console.error(\n        `Houve um problema ao realizar o upload da imagem.`\n      );\n      console.log(err);\n    });\n  };\n\n  return (\n    <>\n      <Grid spacing={3} container>\n        {/* <Grid xs={12} item>\n                    <Title>Configurações Gerais</Title>\n                </Grid> */}\n        <OnlyForSuperUser\n          user={currentUser}\n          yes={() => (\n            <>\n              <Grid xs={12} sm={6} md={4} item>\n                <FormControl className={classes.selectContainer}>\n                  <TextField\n                    id=\"primary-color-light-field\"\n                    label=\"Cor Primária Modo Claro\"\n                    variant=\"standard\"\n                    value={settingsLoaded.primaryColorLight || \"\"}\n                    onClick={() => setPrimaryColorLightModalOpen(true)}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <div\n                            style={{ backgroundColor: settingsLoaded.primaryColorLight }}\n                            className={classes.colorAdorment}\n                          ></div>\n                        </InputAdornment>\n                      ),\n                      endAdornment: (\n                        <IconButton\n                          size=\"small\"\n                          color=\"default\"\n                          onClick={() => setPrimaryColorLightModalOpen(true)}\n                        >\n                          <Colorize />\n                        </IconButton>\n                      ),\n                    }}\n                  />\n                </FormControl>\n                <ColorBoxModal\n                  open={primaryColorLightModalOpen}\n                  handleClose={() => setPrimaryColorLightModalOpen(false)}\n                  onChange={(color) => {\n                    handleSaveSetting(\"primaryColorLight\", `#${color.hex}`);\n                    colorMode.setPrimaryColorLight(`#${color.hex}`);\n                  }}\n\n\n                  currentColor={settingsLoaded.primaryColorLight}\n                />\n\n              </Grid>\n              <Grid xs={12} sm={6} md={4} item>\n\n                <FormControl className={classes.selectContainer}>\n                  <TextField\n                    id=\"primary-color-dark-field\"\n                    label=\"Cor Primária Modo Escuro\"\n                    variant=\"standard\"\n                    value={settingsLoaded.primaryColorDark || \"\"}\n                    onClick={() => setPrimaryColorDarkModalOpen(true)}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <div\n                            style={{ backgroundColor: settingsLoaded.primaryColorDark }}\n                            className={classes.colorAdorment}\n                          ></div>\n                        </InputAdornment>\n                      ),\n                      endAdornment: (\n                        <IconButton\n                          size=\"small\"\n                          color=\"default\"\n                          onClick={() => setPrimaryColorDarkModalOpen(true)}\n                        >\n                          <Colorize />\n                        </IconButton>\n                      ),\n                    }}\n                  />\n                </FormControl>\n                <ColorBoxModal\n                  open={primaryColorDarkModalOpen}\n                  handleClose={() => setPrimaryColorDarkModalOpen(false)}\n                  onChange={(color) => {\n                    handleSaveSetting(\"primaryColorDark\", `#${color.hex}`);\n                    colorMode.setPrimaryColorDark(`#${color.hex}`);\n                  }}\n                  currentColor={settingsLoaded.primaryColorDark}\n                />\n              </Grid>\n\n              <Grid xs={12} sm={6} md={4} item>\n                <FormControl className={classes.selectContainer}>\n                  <TextField\n                    id=\"appname-field\"\n                    label=\"Nome do sistema\"\n                    variant=\"standard\"\n                    name=\"appName\"\n                    value={appName}\n                    inputRef={appNameInput}\n                    onChange={(e) => {\n                      setAppName(e.target.value);\n                    }}\n                    onBlur={async (_) => {\n                      await handleSaveSetting(\"appName\", appName);\n                      colorMode.setAppName(appName || \"Multi100\");\n                    }}\n                  />\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={4} item>\n                <FormControl className={classes.selectContainer}>\n                  <TextField\n                    id=\"logo-light-upload-field\"\n                    label=\"Logotipo claro\"\n                    variant=\"standard\"\n                    value={settingsLoaded.appLogoLight || \"\"}\n                    InputProps={{\n                      endAdornment: (\n                        <>\n                          {settingsLoaded.appLogoLight &&\n                            <IconButton\n                              size=\"small\"\n                              color=\"default\"\n                              onClick={() => {\n                                handleSaveSetting(\"appLogoLight\", \"\");\n                                colorMode.setAppLogoLight(defaultLogoLight);\n                              }\n                              }\n                            >\n                              <Delete />\n                            </IconButton>\n                          }\n                          <input\n                            type=\"file\"\n                            id=\"upload-logo-light-button\"\n                            ref={logoLightInput}\n                            className={classes.uploadInput}\n                            onChange={(e) => uploadLogo(e, \"Light\")}\n                          />\n                          <label htmlFor=\"upload-logo-light-button\">\n                            <IconButton\n                              size=\"small\"\n                              color=\"default\"\n                              onClick={\n                                () => {\n                                  logoLightInput.current.click();\n                                }\n                              }\n                            >\n                              <AttachFile />\n                            </IconButton>\n                          </label>\n                        </>\n                      ),\n                    }}\n                  />\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={4} item>\n                <FormControl className={classes.selectContainer}>\n                  <TextField\n                    id=\"logo-dark-upload-field\"\n                    label=\"Logotipo escuro\"\n                    variant=\"standard\"\n                    value={settingsLoaded.appLogoDark || \"\"}\n                    InputProps={{\n                      endAdornment: (\n                        <>\n                          {settingsLoaded.appLogoDark &&\n                            <IconButton\n                              size=\"small\"\n                              color=\"default\"\n                              onClick={() => {\n                                handleSaveSetting(\"appLogoDark\", \"\");\n                                colorMode.setAppLogoDark(defaultLogoDark);\n                              }\n                              }\n                            >\n                              <Delete />\n                            </IconButton>\n                          }\n                          <input\n                            type=\"file\"\n                            id=\"upload-logo-dark-button\"\n                            ref={logoDarkInput}\n                            className={classes.uploadInput}\n                            onChange={(e) => uploadLogo(e, \"Dark\")}\n                          />\n                          <label htmlFor=\"upload-logo-dark-button\">\n                            <IconButton\n                              size=\"small\"\n                              color=\"default\"\n                              onClick={\n                                () => {\n                                  logoDarkInput.current.click();\n                                }\n                              }\n                            >\n                              <AttachFile />\n                            </IconButton>\n                          </label>\n                        </>\n                      ),\n                    }}\n                  />\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={4} item>\n                <FormControl className={classes.selectContainer}>\n                  <TextField\n                    id=\"logo-favicon-upload-field\"\n                    label=\"Favicon\"\n                    variant=\"standard\"\n                    value={settingsLoaded.appLogoFavicon || \"\"}\n                    InputProps={{\n                      endAdornment: (\n                        <>\n                          {settingsLoaded.appLogoFavicon &&\n                            <IconButton\n                              size=\"small\"\n                              color=\"default\"\n                              onClick={() => {\n                                handleSaveSetting(\"appLogoFavicon\", \"\");\n                                colorMode.setAppLogoFavicon(defaultLogoFavicon);\n                              }\n                              }\n                            >\n                              <Delete />\n                            </IconButton>\n                          }\n                          <input\n                            type=\"file\"\n                            id=\"upload-logo-favicon-button\"\n                            ref={logoFaviconInput}\n                            className={classes.uploadInput}\n                            onChange={(e) => uploadLogo(e, \"Favicon\")}\n                          />\n                          <label htmlFor=\"upload-logo-favicon-button\">\n                            <IconButton\n                              size=\"small\"\n                              color=\"default\"\n                              onClick={\n                                () => {\n                                  logoFaviconInput.current.click();\n                                }\n                              }\n                            >\n                              <AttachFile />\n                            </IconButton>\n                          </label>\n                        </>\n                      ),\n                    }}\n                  />\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={4} item>\n                <div className={classes.appLogoLightPreviewDiv}>\n                  <img className={classes.appLogoLightPreviewImg} alt=\"light-logo-preview\" />\n                </div>\n              </Grid>\n              <Grid xs={12} sm={6} md={4} item>\n                <div className={classes.appLogoDarkPreviewDiv}>\n                  <img className={classes.appLogoDarkPreviewImg} alt=\"dark-logo-preview\" />\n                </div>\n              </Grid>\n              <Grid xs={12} sm={6} md={4} item>\n                <div className={classes.appLogoFaviconPreviewDiv}>\n                  <img className={classes.appLogoFaviconPreviewImg} alt=\"favicon-preview\" />\n                </div>\n              </Grid>\n            </>\n          )}\n        />\n      </Grid>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}