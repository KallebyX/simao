{"ast":null,"code":"var _jsxFileName = \"/workspaces/simao/whaticket/frontend/src/components/TicketMessagesDialog/index.js\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { Box, Button, Dialog, DialogActions, makeStyles } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport MessagesList from \"../MessagesList\";\nimport { ReplyMessageProvider } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport { ForwardMessageProvider } from \"../../context/ForwarMessage/ForwardMessageContext\";\nimport TicketHeader from \"../TicketHeader\";\nimport TicketInfo from \"../TicketInfo\";\nimport html2pdf from \"html2pdf.js\";\nconst drawerWidth = 320;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    height: \"100%\",\n    position: \"relative\",\n    overflow: \"hidden\"\n  },\n  mainWrapper: {\n    flex: 1,\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    borderLeft: \"0\",\n    marginRight: -drawerWidth,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  mainWrapperShift: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: 0\n  }\n}));\nexport default function TicketMessagesDialog({\n  open,\n  handleClose,\n  ticketId\n}) {\n  const history = useHistory();\n  const classes = useStyles();\n  const {\n    user,\n    socket\n  } = useContext(AuthContext);\n  const [, setDrawerOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [contact, setContact] = useState({});\n  const [ticket, setTicket] = useState({});\n  const [exportedToPDF, setExportedToPDF] = useState(false);\n  const handleExportToPDF = () => {\n    const messagesListElement = document.getElementById(\"messagesList\"); // Id do elemento que você deseja exportar para PDF\n    const headerElement = document.getElementById(\"TicketHeader\"); // Id do elemento de cabeçalho que você deseja exportar\n\n    const pdfOPtions = {\n      margin: 1,\n      filename: `relatório_atendimento_${ticketId}.pdf`,\n      image: {\n        type: 'jpeg',\n        quality: 0.98\n      },\n      html2canvas: {\n        scale: 2\n      },\n      jsPDF: {\n        unit: 'mm',\n        format: 'a4',\n        orientation: 'portrait'\n      }\n    };\n    if (messagesListElement) {\n      const headerClone = headerElement.cloneNode(true);\n      const messagesListClone = messagesListElement.cloneNode(true);\n      const containerElement = document.createElement(\"div\");\n      containerElement.appendChild(headerClone); // Adicione o elemento do cabeçalho\n      containerElement.appendChild(messagesListClone);\n      html2pdf().from(containerElement).set(pdfOPtions).save();\n    } else {\n      toastError(\"Elemento não encontrado para exportar.\");\n    }\n  };\n  const handleExportAndClose = () => {\n    if (!exportedToPDF) {\n      handleExportToPDF();\n      setExportedToPDF(true);\n      handleClose(); // Fecha o Dialog\n    }\n  };\n  useEffect(() => {\n    if (open) {\n      // Execute a exportação para PDF e feche o Dialog\n      handleExportAndClose();\n    }\n  }, [open, ticketId, handleExportAndClose]);\n  return /*#__PURE__*/React.createElement(Dialog, {\n    maxWidth: \"md\",\n    onClose: handleClose,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleExportToPDF,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Exportar para PDF\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Fechar\")));\n}","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useState","toast","api","toastError","Box","Button","Dialog","DialogActions","makeStyles","useHistory","AuthContext","MessagesList","ReplyMessageProvider","ForwardMessageProvider","TicketHeader","TicketInfo","html2pdf","drawerWidth","useStyles","theme","root","display","height","position","overflow","mainWrapper","flex","flexDirection","borderTopLeftRadius","borderBottomLeftRadius","borderLeft","marginRight","transition","transitions","create","easing","sharp","duration","leavingScreen","mainWrapperShift","borderTopRightRadius","borderBottomRightRadius","easeOut","enteringScreen","TicketMessagesDialog","open","handleClose","ticketId","history","classes","user","socket","setDrawerOpen","loading","setLoading","contact","setContact","ticket","setTicket","exportedToPDF","setExportedToPDF","handleExportToPDF","messagesListElement","document","getElementById","headerElement","pdfOPtions","margin","filename","image","type","quality","html2canvas","scale","jsPDF","unit","format","orientation","headerClone","cloneNode","messagesListClone","containerElement","createElement","appendChild","from","set","save","handleExportAndClose","maxWidth","onClose","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color"],"sources":["/workspaces/simao/whaticket/frontend/src/components/TicketMessagesDialog/index.js"],"sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { toast } from \"react-toastify\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport MessagesList from \"../MessagesList\";\nimport { ReplyMessageProvider } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport { ForwardMessageProvider } from \"../../context/ForwarMessage/ForwardMessageContext\";\n\nimport TicketHeader from \"../TicketHeader\";\nimport TicketInfo from \"../TicketInfo\";\n\nimport html2pdf from \"html2pdf.js\";\n\nconst drawerWidth = 320;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100%\",\n    position: \"relative\",\n    overflow: \"hidden\",\n  },\n\n  mainWrapper: {\n    flex: 1,\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    borderLeft: \"0\",\n    marginRight: -drawerWidth,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n\n  mainWrapperShift: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nexport default function TicketMessagesDialog({ open, handleClose, ticketId }) {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const { user, socket } = useContext(AuthContext);\n\n  const [, setDrawerOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [contact, setContact] = useState({});\n  const [ticket, setTicket] = useState({});\n\n  const [exportedToPDF, setExportedToPDF] = useState(false);\n\n  \n  const handleExportToPDF = () => {\n    const messagesListElement = document.getElementById(\"messagesList\"); // Id do elemento que você deseja exportar para PDF\n    const headerElement = document.getElementById(\"TicketHeader\"); // Id do elemento de cabeçalho que você deseja exportar\n\n\n    const pdfOPtions = {\n      margin: 1,\n      filename: `relatório_atendimento_${ticketId}.pdf`,\n      image: { type: 'jpeg', quality: 0.98 },\n      html2canvas: { scale: 2 },\n      jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\n    };\n\n    if (messagesListElement) {\n      const headerClone = headerElement.cloneNode(true);\n      const messagesListClone = messagesListElement.cloneNode(true);\n\n      const containerElement = document.createElement(\"div\");\n      containerElement.appendChild(headerClone); // Adicione o elemento do cabeçalho\n      containerElement.appendChild(messagesListClone);\n      html2pdf()\n        .from(containerElement)\n        .set(pdfOPtions)\n        .save();\n    } else {\n      toastError(\"Elemento não encontrado para exportar.\");\n    }\n  };\n\n  const handleExportAndClose = () => {\n    if (!exportedToPDF) {\n      handleExportToPDF();\n      setExportedToPDF(true);\n      handleClose(); // Fecha o Dialog\n    }\n  };\n\n  useEffect(() => {\n    if (open) {\n      // Execute a exportação para PDF e feche o Dialog\n      handleExportAndClose();\n    }\n  }, [open, ticketId, handleExportAndClose]);\n\n\n  return (\n    <Dialog maxWidth=\"md\" onClose={handleClose} open={open}>\n      <DialogActions>\n        <Button onClick={handleExportToPDF} color=\"primary\">\n          Exportar para PDF\n        </Button>\n        <Button onClick={handleClose} color=\"primary\">\n          Fechar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}