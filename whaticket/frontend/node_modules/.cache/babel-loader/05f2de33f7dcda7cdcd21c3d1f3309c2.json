{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport toastError from \"../../errors/toastError\";\nimport { format, sub } from 'date-fns';\nimport api from \"../../services/api\";\nconst useTickets = ({\n  searchParam,\n  tags,\n  users,\n  pageNumber,\n  status,\n  date,\n  updatedAt,\n  showAll,\n  queueIds,\n  withUnreadMessages,\n  whatsappIds,\n  statusFilter,\n  forceSearch,\n  userFilter,\n  sortTickets,\n  searchOnMessages\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [hasMore, setHasMore] = useState(false);\n  const [tickets, setTickets] = useState([]);\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchTickets = async () => {\n        if (userFilter === undefined || userFilter === null) {\n          try {\n            const {\n              data\n            } = await api.get(\"/tickets\", {\n              params: {\n                searchParam,\n                pageNumber,\n                tags,\n                users,\n                status,\n                date,\n                updatedAt,\n                showAll,\n                queueIds,\n                withUnreadMessages,\n                whatsapps: whatsappIds,\n                statusFilter,\n                sortTickets,\n                searchOnMessages\n              }\n            });\n            let tickets = [];\n            tickets = data.tickets;\n            setTickets(tickets);\n            setHasMore(data.hasMore);\n            setCount(data.count);\n            setLoading(false);\n          } catch (err) {\n            setLoading(false);\n            toastError(err);\n          }\n        } else {\n          try {\n            // console.log(\"ENTROU AQUI DASH\")\n            // console.log(status,\n            //   showAll,\n            //   queueIds,\n            //   format(sub(new Date(), { days: 30 }), 'yyyy-MM-dd'),\n            //   format(new Date(), 'yyyy-MM-dd'),\n            //   userFilter)\n\n            const {\n              data\n            } = await api.get(\"/dashboard/moments\", {\n              params: {\n                status,\n                showAll,\n                queueIds,\n                dateStart: format(sub(new Date(), {\n                  days: 30\n                }), 'yyyy-MM-dd'),\n                dateEnd: format(new Date(), 'yyyy-MM-dd'),\n                userId: userFilter\n              }\n            });\n\n            // console.log(data)\n            let tickets = [];\n            tickets = data.filter(item => item.userId == userFilter);\n            setTickets(tickets);\n            setHasMore(null);\n            setLoading(false);\n          } catch (err) {\n            setLoading(false);\n            toastError(err);\n          }\n        }\n      };\n      fetchTickets();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, tags, users, pageNumber, status, date, updatedAt, showAll, queueIds, withUnreadMessages, whatsappIds, statusFilter, forceSearch, sortTickets, searchOnMessages]);\n  return {\n    tickets,\n    loading,\n    hasMore,\n    count\n  };\n};\nexport default useTickets;","map":{"version":3,"names":["useState","useEffect","toastError","format","sub","api","useTickets","searchParam","tags","users","pageNumber","status","date","updatedAt","showAll","queueIds","withUnreadMessages","whatsappIds","statusFilter","forceSearch","userFilter","sortTickets","searchOnMessages","loading","setLoading","hasMore","setHasMore","tickets","setTickets","count","setCount","delayDebounceFn","setTimeout","fetchTickets","undefined","data","get","params","whatsapps","err","dateStart","Date","days","dateEnd","userId","filter","item","clearTimeout"],"sources":["/workspaces/simao/whaticket/frontend/src/hooks/useTickets/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport toastError from \"../../errors/toastError\";\nimport { format, sub } from 'date-fns'\nimport api from \"../../services/api\";\n\nconst useTickets = ({\n  searchParam,\n  tags,\n  users,\n  pageNumber,\n  status,\n  date,\n  updatedAt,\n  showAll,\n  queueIds,\n  withUnreadMessages,\n  whatsappIds,\n  statusFilter,\n  forceSearch,\n  userFilter,\n  sortTickets,\n  searchOnMessages\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [hasMore, setHasMore] = useState(false);\n  const [tickets, setTickets] = useState([]);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchTickets = async () => {\n        if (userFilter === undefined || userFilter === null) {\n          try {            \n            const { data } = await api.get(\"/tickets\", {\n              params: {\n                searchParam,\n                pageNumber,\n                tags,\n                users,\n                status,\n                date,\n                updatedAt,\n                showAll,\n                queueIds,\n                withUnreadMessages,\n                whatsapps: whatsappIds,\n                statusFilter,\n                sortTickets,\n                searchOnMessages\n              },\n            });\n            \n            let tickets = [];\n            \n            tickets = data.tickets;\n          \n            setTickets(tickets);\n            setHasMore(data.hasMore);\n            setCount(data.count)\n            setLoading(false);\n          } catch (err) {\n            setLoading(false);\n            toastError(err);\n          }\n        } else {\n          try {\n            // console.log(\"ENTROU AQUI DASH\")\n            // console.log(status,\n            //   showAll,\n            //   queueIds,\n            //   format(sub(new Date(), { days: 30 }), 'yyyy-MM-dd'),\n            //   format(new Date(), 'yyyy-MM-dd'),\n            //   userFilter)\n\n            const {data} = await api.get(\"/dashboard/moments\", {\n              params: {\n                status,\n                showAll,\n                queueIds,\n                dateStart: format(sub(new Date(), { days: 30 }), 'yyyy-MM-dd'),\n                dateEnd: format(new Date(), 'yyyy-MM-dd'),\n                userId: userFilter\n              }\n            })\n\n            // console.log(data)\n            let tickets = [];\n            tickets = data.filter(item => item.userId == userFilter);            \n\n            setTickets(tickets);\n            setHasMore(null);\n            setLoading(false);\n          } catch (err) {\n            setLoading(false);\n            toastError(err);\n          }\n        }\n      };\n    fetchTickets();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [\n    searchParam,\n    tags,\n    users,\n    pageNumber,\n    status,\n    date,\n    updatedAt,\n    showAll,\n    queueIds,\n    withUnreadMessages,\n    whatsappIds,\n    statusFilter,\n    forceSearch,\n    sortTickets,\n    searchOnMessages\n  ]);\n\n  return { tickets, loading, hasMore, count };\n};\n\nexport default useTickets;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}