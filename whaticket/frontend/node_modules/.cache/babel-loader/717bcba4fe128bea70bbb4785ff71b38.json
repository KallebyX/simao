{"ast":null,"code":"var _jsxFileName = \"/workspaces/simao/whaticket/frontend/src/pages/Contacts/index.js\";\nimport React, { useState, useEffect, useReducer, useContext, useRef } from \"react\";\n// import { SocketContext } from \"../../context/Socket/SocketContext\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Facebook, Instagram, WhatsApp } from \"@material-ui/icons\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport BlockIcon from \"@material-ui/icons/Block\";\nimport api from \"../../services/api\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport ContactModal from \"../../components/ContactModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport { i18n } from \"../../translate/i18n\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport MainContainer from \"../../components/MainContainer\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../../components/Can\";\nimport NewTicketModal from \"../../components/NewTicketModal\";\nimport { TagsFilter } from \"../../components/TagsFilter\";\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\nimport formatSerializedId from '../../utils/formatSerializedId';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ArrowDropDown, Backup, ContactPhone } from \"@material-ui/icons\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport ContactImportWpModal from \"../../components/ContactImportWpModal\";\nimport useCompanySettings from \"../../hooks/useSettings/companySettings\";\nimport { TicketsContext } from \"../../context/Tickets/TicketsContext\";\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_CONTACTS\") {\n    const contacts = action.payload;\n    const newContacts = [];\n    contacts.forEach(contact => {\n      const contactIndex = state.findIndex(c => c.id === contact.id);\n      if (contactIndex !== -1) {\n        state[contactIndex] = contact;\n      } else {\n        newContacts.push(contact);\n      }\n    });\n    return [...state, ...newContacts];\n  }\n  if (action.type === \"UPDATE_CONTACTS\") {\n    const contact = action.payload;\n    const contactIndex = state.findIndex(c => c.id === contact.id);\n    if (contactIndex !== -1) {\n      state[contactIndex] = contact;\n      return [...state];\n    } else {\n      return [contact, ...state];\n    }\n  }\n  if (action.type === \"DELETE_CONTACT\") {\n    const contactId = action.payload;\n    const contactIndex = state.findIndex(c => c.id === contactId);\n    if (contactIndex !== -1) {\n      state.splice(contactIndex, 1);\n    }\n    return [...state];\n  }\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles\n  }\n}));\nconst Contacts = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  //   const socketManager = useContext(SocketContext);\n  const {\n    user,\n    socket\n  } = useContext(AuthContext);\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [contacts, dispatch] = useReducer(reducer, []);\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  const [contactModalOpen, setContactModalOpen] = useState(false);\n  const [importContactModalOpen, setImportContactModalOpen] = useState(false);\n  const [deletingContact, setDeletingContact] = useState(null);\n  const [ImportContacts, setImportContacts] = useState(null);\n  const [blockingContact, setBlockingContact] = useState(null);\n  const [unBlockingContact, setUnBlockingContact] = useState(null);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [exportContact, setExportContact] = useState(false);\n  const [confirmChatsOpen, setConfirmChatsOpen] = useState(false);\n  const [hasMore, setHasMore] = useState(false);\n  const [newTicketModalOpen, setNewTicketModalOpen] = useState(false);\n  const [contactTicket, setContactTicket] = useState({});\n  const fileUploadRef = useRef(null);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const {\n    setCurrentTicket\n  } = useContext(TicketsContext);\n  const [importWhatsappId, setImportWhatsappId] = useState();\n  const {\n    getAll: getAllSettings\n  } = useCompanySettings();\n  const [hideNum, setHideNum] = useState(false);\n  const [enableLGPD, setEnableLGPD] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      const settingList = await getAllSettings(user.companyId);\n      for (const [key, value] of Object.entries(settingList)) {\n        if (key === \"enableLGPD\") setEnableLGPD(value === \"enabled\");\n        if (key === \"lgpdHideNumber\") setHideNum(value === \"enabled\");\n      }\n\n      // if (settingHideNumber.lgpdHideNumber === \"enabled\") {\n      //     setHideNum(true);\n      // }\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleImportExcel = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", fileUploadRef.current.files[0]);\n      await api.request({\n        url: `/contacts/upload`,\n        method: \"POST\",\n        data: formData\n      });\n      history.go(0);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  useEffect(() => {\n    dispatch({\n      type: \"RESET\"\n    });\n    setPageNumber(1);\n  }, [searchParam, selectedTags]);\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        try {\n          const {\n            data\n          } = await api.get(\"/contacts/\", {\n            params: {\n              searchParam,\n              pageNumber,\n              contactTag: JSON.stringify(selectedTags)\n            }\n          });\n          dispatch({\n            type: \"LOAD_CONTACTS\",\n            payload: data.contacts\n          });\n          setHasMore(data.hasMore);\n          setLoading(false);\n        } catch (err) {\n          toastError(err);\n        }\n      };\n      fetchContacts();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, pageNumber, selectedTags]);\n  useEffect(() => {\n    const companyId = user.companyId;\n    //    const socket = socketManager.GetSocket();\n\n    const onContactEvent = data => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({\n          type: \"UPDATE_CONTACTS\",\n          payload: data.contact\n        });\n      }\n      if (data.action === \"delete\") {\n        dispatch({\n          type: \"DELETE_CONTACT\",\n          payload: +data.contactId\n        });\n      }\n    };\n    socket.on(`company-${companyId}-contact`, onContactEvent);\n    return () => {\n      socket.off(`company-${companyId}-contact`, onContactEvent);\n    };\n  }, [socket]);\n  const handleSelectTicket = ticket => {\n    const code = uuidv4();\n    const {\n      id,\n      uuid\n    } = ticket;\n    setCurrentTicket({\n      id,\n      uuid,\n      code\n    });\n  };\n  const handleCloseOrOpenTicket = ticket => {\n    setNewTicketModalOpen(false);\n    if (ticket !== undefined && ticket.uuid !== undefined) {\n      handleSelectTicket(ticket);\n      history.push(`/tickets/${ticket.uuid}`);\n    }\n  };\n  const handleSelectedTags = selecteds => {\n    const tags = selecteds.map(t => t.id);\n    setSelectedTags(tags);\n  };\n  const handleSearch = event => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n  const handleOpenContactModal = () => {\n    setSelectedContactId(null);\n    setContactModalOpen(true);\n  };\n  const handleCloseContactModal = () => {\n    setSelectedContactId(null);\n    setContactModalOpen(false);\n  };\n  const hadleEditContact = contactId => {\n    setSelectedContactId(contactId);\n    setContactModalOpen(true);\n  };\n  const handleDeleteContact = async contactId => {\n    try {\n      await api.delete(`/contacts/${contactId}`);\n      toast.success(i18n.t(\"contacts.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingContact(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n  };\n  const handleBlockContact = async contactId => {\n    try {\n      await api.put(`/contacts/block/${contactId}`, {\n        active: false\n      });\n      toast.success(\"Contato bloqueado\");\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingContact(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n    setBlockingContact(null);\n  };\n  const handleUnBlockContact = async contactId => {\n    try {\n      await api.put(`/contacts/block/${contactId}`, {\n        active: true\n      });\n      toast.success(\"Contato desbloqueado\");\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingContact(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n    setUnBlockingContact(null);\n  };\n  const onSave = whatsappId => {\n    setImportWhatsappId(whatsappId);\n  };\n  const handleimportContact = async () => {\n    setImportContactModalOpen(false);\n    try {\n      await api.post(\"/contacts/import\", {\n        whatsappId: importWhatsappId\n      });\n      history.go(0);\n      setImportContactModalOpen(false);\n    } catch (err) {\n      toastError(err);\n      setImportContactModalOpen(false);\n    }\n  };\n  const handleimportChats = async () => {\n    console.log(\"handleimportChats\");\n    try {\n      await api.post(\"/contacts/import/chats\");\n      history.go(0);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  const loadMore = () => {\n    setPageNumber(prevState => prevState + 1);\n  };\n  const handleScroll = e => {\n    if (!hasMore || loading) return;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  // function getDateLastMessage(contact) {\n  //     if (!contact) return null;\n  //     if (!contact.tickets) return null;\n\n  //     if (contact.tickets.length > 0) {\n  //         const date = new Date(contact.tickets[contact.tickets.length - 1].updatedAt);\n\n  //         const day = date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`;\n  //         const month = date.getMonth() + 1 > 9 ? date.getMonth() + 1 : `0${date.getMonth() + 1}`;\n  //         const year = date.getFullYear();\n  //         const hours = date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`;\n  //         const minutes = date.getMinutes() > 9 ? date.getMinutes() : `0${date.getMinutes()}`;\n\n  //         return `${day}/${month}/${year} ${hours}:${minutes}`;\n  //     }\n\n  //     return null;\n  // }\n\n  return /*#__PURE__*/React.createElement(MainContainer, {\n    className: classes.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewTicketModal, {\n    modalOpen: newTicketModalOpen,\n    initialContact: contactTicket,\n    onClose: ticket => {\n      handleCloseOrOpenTicket(ticket);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ContactModal, {\n    open: contactModalOpen,\n    onClose: handleCloseContactModal,\n    \"aria-labelledby\": \"form-dialog-title\",\n    contactId: selectedContactId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ConfirmationModal, {\n    title: deletingContact ? `${i18n.t(\"contacts.confirmationModal.deleteTitle\")} ${deletingContact.name}?` : blockingContact ? `Bloquear Contato ${blockingContact.name}?` : unBlockingContact ? `Desbloquear Contato ${unBlockingContact.name}?` : ImportContacts ? `${i18n.t(\"contacts.confirmationModal.importTitlte\")}` : `${i18n.t(\"contactListItems.confirmationModal.importTitlte\")}`,\n    onSave: onSave,\n    isCellPhone: ImportContacts,\n    open: confirmOpen,\n    onClose: setConfirmOpen,\n    onConfirm: e => deletingContact ? handleDeleteContact(deletingContact.id) : blockingContact ? handleBlockContact(blockingContact.id) : unBlockingContact ? handleUnBlockContact(unBlockingContact.id) : ImportContacts ? handleimportContact() : handleImportExcel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }\n  }, exportContact ? `${i18n.t(\"contacts.confirmationModal.exportContact\")}` : deletingContact ? `${i18n.t(\"contacts.confirmationModal.deleteMessage\")}` : blockingContact ? `${i18n.t(\"contacts.confirmationModal.blockContact\")}` : unBlockingContact ? `${i18n.t(\"contacts.confirmationModal.unblockContact\")}` : ImportContacts ? `Escolha de qual conexão deseja importar` : `${i18n.t(\"contactListItems.confirmationModal.importMessage\")}`), /*#__PURE__*/React.createElement(ConfirmationModal, {\n    title: i18n.t(\"contacts.confirmationModal.importChat\"),\n    open: confirmChatsOpen,\n    onClose: setConfirmChatsOpen,\n    onConfirm: e => handleimportChats(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 13\n    }\n  }, i18n.t(\"contacts.confirmationModal.wantImport\")), /*#__PURE__*/React.createElement(MainHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 17\n    }\n  }, i18n.t(\"contacts.title\"), \" (\", contacts.length, \")\"), /*#__PURE__*/React.createElement(MainHeaderButtonsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TagsFilter, {\n    onFiltered: handleSelectedTags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    placeholder: i18n.t(\"contacts.searchPlaceholder\"),\n    type: \"search\",\n    value: searchParam,\n    onChange: handleSearch,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 37\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(PopupState, {\n    variant: \"popover\",\n    popupId: \"demo-popup-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 21\n    }\n  }, popupState => /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, Object.assign({\n    variant: \"contained\",\n    color: \"primary\"\n  }, bindTrigger(popupState), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 33\n    }\n  }), \"Importar / Exportar\", /*#__PURE__*/React.createElement(ArrowDropDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Menu, Object.assign({}, bindMenu(popupState), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setConfirmOpen(true);\n      setImportContacts(true);\n      popupState.close();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ContactPhone, {\n    fontSize: \"small\",\n    color: \"primary\",\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 41\n    }\n  }), i18n.t(\"contacts.menu.importYourPhone\")), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setImportContactModalOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Backup, {\n    fontSize: \"small\",\n    color: \"primary\",\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 41\n    }\n  }), i18n.t(\"contacts.menu.importToExcel\"))))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOpenContactModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 21\n    }\n  }, i18n.t(\"contacts.buttons.add\")))), importContactModalOpen && /*#__PURE__*/React.createElement(ContactImportWpModal, {\n    isOpen: importContactModalOpen,\n    handleClose: () => setImportContactModalOpen(false),\n    selectedTags: selectedTags,\n    hideNum: hideNum,\n    userProfile: user.profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.mainPaper,\n    variant: \"outlined\",\n    onScroll: handleScroll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      display: \"none\"\n    },\n    id: \"upload\",\n    name: \"file\",\n    type: \"file\",\n    accept: \".xls,.xlsx\",\n    onChange: () => {\n      setConfirmOpen(true);\n    },\n    ref: fileUploadRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 29\n    }\n  }, i18n.t(\"contacts.table.name\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 29\n    }\n  }, i18n.t(\"contacts.table.whatsapp\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 29\n    }\n  }, i18n.t(\"contacts.table.email\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 29\n    }\n  }, i18n.t(\"contacts.table.whatsapp\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 29\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 29\n    }\n  }, i18n.t(\"contacts.table.actions\")))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, contacts.map(contact => {\n    var _formatSerializedId, _contact$number, _contact$whatsapp;\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: contact.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        paddingRight: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      src: `${contact === null || contact === void 0 ? void 0 : contact.urlPicture}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 42\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 37\n      }\n    }, contact.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 37\n      }\n    }, enableLGPD && hideNum && user.profile === \"user\" ? contact.isGroup ? contact.number : formatSerializedId(contact === null || contact === void 0 ? void 0 : contact.number) === null ? contact.number.slice(0, -6) + \"**-**\" + (contact === null || contact === void 0 ? void 0 : contact.number.slice(-2)) : ((_formatSerializedId = formatSerializedId(contact === null || contact === void 0 ? void 0 : contact.number)) === null || _formatSerializedId === void 0 ? void 0 : _formatSerializedId.slice(0, -6)) + \"**-**\" + (contact === null || contact === void 0 ? void 0 : (_contact$number = contact.number) === null || _contact$number === void 0 ? void 0 : _contact$number.slice(-2)) : contact.isGroup ? contact.number : formatSerializedId(contact === null || contact === void 0 ? void 0 : contact.number)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 37\n      }\n    }, contact.email), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 37\n      }\n    }, contact === null || contact === void 0 ? void 0 : (_contact$whatsapp = contact.whatsapp) === null || _contact$whatsapp === void 0 ? void 0 : _contact$whatsapp.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 37\n      }\n    }, contact.active ? /*#__PURE__*/React.createElement(CheckCircleIcon, {\n      style: {\n        color: \"green\"\n      },\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 45\n      }\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      style: {\n        color: \"red\"\n      },\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      disabled: !contact.active,\n      onClick: () => {\n        setContactTicket(contact);\n        setNewTicketModalOpen(true);\n        // handleSaveTicket(contact.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 41\n      }\n    }, contact.channel === \"whatsapp\" && /*#__PURE__*/React.createElement(WhatsApp, {\n      style: {\n        color: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 81\n      }\n    }), contact.channel === \"instagram\" && /*#__PURE__*/React.createElement(Instagram, {\n      style: {\n        color: \"purple\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 82\n      }\n    }), contact.channel === \"facebook\" && /*#__PURE__*/React.createElement(Facebook, {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 81\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      onClick: () => hadleEditContact(contact.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      onClick: contact.active ? () => {\n        setConfirmOpen(true);\n        setBlockingContact(contact);\n      } : () => {\n        setConfirmOpen(true);\n        setUnBlockingContact(contact);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 41\n      }\n    }, contact.active ? /*#__PURE__*/React.createElement(BlockIcon, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 49\n      }\n    }) : /*#__PURE__*/React.createElement(CheckCircleIcon, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(Can, {\n      role: user.profile,\n      perform: \"contacts-page:deleteContact\",\n      yes: () => /*#__PURE__*/React.createElement(IconButton, {\n        size: \"small\",\n        onClick: e => {\n          setConfirmOpen(true);\n          setDeletingContact(contact);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 53\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 41\n      }\n    })));\n  }), loading && /*#__PURE__*/React.createElement(TableRowSkeleton, {\n    avatar: true,\n    columns: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 41\n    }\n  }))))));\n};\nexport default Contacts;","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","toast","useHistory","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","Avatar","Facebook","Instagram","WhatsApp","SearchIcon","TextField","InputAdornment","IconButton","DeleteOutlineIcon","EditIcon","CheckCircleIcon","CancelIcon","BlockIcon","api","TableRowSkeleton","ContactModal","ConfirmationModal","i18n","MainHeader","Title","MainHeaderButtonsWrapper","MainContainer","toastError","AuthContext","Can","NewTicketModal","TagsFilter","PopupState","bindTrigger","bindMenu","formatSerializedId","v4","uuidv4","ArrowDropDown","Backup","ContactPhone","Menu","MenuItem","ContactImportWpModal","useCompanySettings","TicketsContext","reducer","state","action","type","contacts","payload","newContacts","forEach","contact","contactIndex","findIndex","c","id","push","contactId","splice","useStyles","theme","mainPaper","flex","padding","spacing","overflowY","scrollbarStyles","Contacts","classes","history","user","socket","loading","setLoading","pageNumber","setPageNumber","searchParam","setSearchParam","dispatch","selectedContactId","setSelectedContactId","contactModalOpen","setContactModalOpen","importContactModalOpen","setImportContactModalOpen","deletingContact","setDeletingContact","ImportContacts","setImportContacts","blockingContact","setBlockingContact","unBlockingContact","setUnBlockingContact","confirmOpen","setConfirmOpen","exportContact","setExportContact","confirmChatsOpen","setConfirmChatsOpen","hasMore","setHasMore","newTicketModalOpen","setNewTicketModalOpen","contactTicket","setContactTicket","fileUploadRef","selectedTags","setSelectedTags","setCurrentTicket","importWhatsappId","setImportWhatsappId","getAll","getAllSettings","hideNum","setHideNum","enableLGPD","setEnableLGPD","fetchData","settingList","companyId","key","value","Object","entries","handleImportExcel","formData","FormData","append","current","files","request","url","method","data","go","err","delayDebounceFn","setTimeout","fetchContacts","get","params","contactTag","JSON","stringify","clearTimeout","onContactEvent","on","off","handleSelectTicket","ticket","code","uuid","handleCloseOrOpenTicket","undefined","handleSelectedTags","selecteds","tags","map","t","handleSearch","event","target","toLowerCase","handleOpenContactModal","handleCloseContactModal","hadleEditContact","handleDeleteContact","delete","success","handleBlockContact","put","active","handleUnBlockContact","onSave","whatsappId","handleimportContact","post","handleimportChats","console","log","loadMore","prevState","handleScroll","e","scrollTop","scrollHeight","clientHeight","currentTarget","createElement","className","mainContainer","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","modalOpen","initialContact","onClose","open","title","name","isCellPhone","onConfirm","length","onFiltered","placeholder","onChange","InputProps","startAdornment","position","color","variant","popupId","popupState","Fragment","assign","onClick","close","fontSize","style","marginRight","isOpen","handleClose","userProfile","profile","onScroll","display","accept","ref","size","align","_formatSerializedId","_contact$number","_contact$whatsapp","paddingRight","src","urlPicture","isGroup","number","slice","email","whatsapp","disabled","channel","role","perform","yes","avatar","columns"],"sources":["/workspaces/simao/whaticket/frontend/src/pages/Contacts/index.js"],"sourcesContent":["import React, {\n    useState,\n    useEffect,\n    useReducer,\n    useContext,\n    useRef,\n} from \"react\";\n// import { SocketContext } from \"../../context/Socket/SocketContext\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Facebook, Instagram, WhatsApp } from \"@material-ui/icons\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport BlockIcon from \"@material-ui/icons/Block\";\n\nimport api from \"../../services/api\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport ContactModal from \"../../components/ContactModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport MainContainer from \"../../components/MainContainer\";\nimport toastError from \"../../errors/toastError\";\n\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../../components/Can\";\nimport NewTicketModal from \"../../components/NewTicketModal\";\nimport { TagsFilter } from \"../../components/TagsFilter\";\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\nimport formatSerializedId from '../../utils/formatSerializedId';\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport {\n    ArrowDropDown,\n    Backup,\n    ContactPhone,\n} from \"@material-ui/icons\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\n\nimport ContactImportWpModal from \"../../components/ContactImportWpModal\";\nimport useCompanySettings from \"../../hooks/useSettings/companySettings\";\nimport { TicketsContext } from \"../../context/Tickets/TicketsContext\";\n\nconst reducer = (state, action) => {\n    if (action.type === \"LOAD_CONTACTS\") {\n        const contacts = action.payload;\n        const newContacts = [];\n\n        contacts.forEach((contact) => {\n            const contactIndex = state.findIndex((c) => c.id === contact.id);\n            if (contactIndex !== -1) {\n                state[contactIndex] = contact;\n            } else {\n                newContacts.push(contact);\n            }\n        });\n\n        return [...state, ...newContacts];\n    }\n\n    if (action.type === \"UPDATE_CONTACTS\") {\n        const contact = action.payload;\n        const contactIndex = state.findIndex((c) => c.id === contact.id);\n\n        if (contactIndex !== -1) {\n            state[contactIndex] = contact;\n            return [...state];\n        } else {\n            return [contact, ...state];\n        }\n    }\n\n    if (action.type === \"DELETE_CONTACT\") {\n        const contactId = action.payload;\n\n        const contactIndex = state.findIndex((c) => c.id === contactId);\n        if (contactIndex !== -1) {\n            state.splice(contactIndex, 1);\n        }\n        return [...state];\n    }\n\n    if (action.type === \"RESET\") {\n        return [];\n    }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    mainPaper: {\n        flex: 1,\n        padding: theme.spacing(1),\n        overflowY: \"scroll\",\n        ...theme.scrollbarStyles,\n    },\n}));\n\nconst Contacts = () => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    //   const socketManager = useContext(SocketContext);\n    const { user, socket } = useContext(AuthContext);\n\n\n    const [loading, setLoading] = useState(false);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [searchParam, setSearchParam] = useState(\"\");\n    const [contacts, dispatch] = useReducer(reducer, []);\n    const [selectedContactId, setSelectedContactId] = useState(null);\n    const [contactModalOpen, setContactModalOpen] = useState(false);\n\n    const [importContactModalOpen, setImportContactModalOpen] = useState(false);\n    const [deletingContact, setDeletingContact] = useState(null);\n    const [ImportContacts, setImportContacts] = useState(null);\n    \n    const [blockingContact, setBlockingContact] = useState(null);\n    const [unBlockingContact, setUnBlockingContact] = useState(null);\n    const [confirmOpen, setConfirmOpen] = useState(false);\n    const [exportContact, setExportContact] = useState(false);\n    const [confirmChatsOpen, setConfirmChatsOpen] = useState(false);\n    const [hasMore, setHasMore] = useState(false);\n    const [newTicketModalOpen, setNewTicketModalOpen] = useState(false);\n    const [contactTicket, setContactTicket] = useState({});\n    const fileUploadRef = useRef(null);\n    const [selectedTags, setSelectedTags] = useState([]);\n    const { setCurrentTicket } = useContext(TicketsContext);\n\n    const [importWhatsappId, setImportWhatsappId] = useState()\n\n\n    const { getAll: getAllSettings } = useCompanySettings();\n    const [hideNum, setHideNum] = useState(false);\n    const [enableLGPD, setEnableLGPD] = useState(false);\n    useEffect(() => {\n\n        async function fetchData() {\n\n            const settingList = await getAllSettings(user.companyId);\n\n            for (const [key, value] of Object.entries(settingList)) {\n                \n                if (key === \"enableLGPD\") setEnableLGPD(value === \"enabled\");\n                if (key === \"lgpdHideNumber\") setHideNum(value === \"enabled\");\n                \n              }\n\n            // if (settingHideNumber.lgpdHideNumber === \"enabled\") {\n            //     setHideNum(true);\n            // }\n        }\n        fetchData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const handleImportExcel = async () => {\n        try {\n            const formData = new FormData();\n            formData.append(\"file\", fileUploadRef.current.files[0]);\n            await api.request({\n                url: `/contacts/upload`,\n                method: \"POST\",\n                data: formData,\n            });\n            history.go(0);\n        } catch (err) {\n            toastError(err);\n        }\n    };\n\n    useEffect(() => {\n        dispatch({ type: \"RESET\" });\n        setPageNumber(1);\n    }, [searchParam, selectedTags]);\n\n    useEffect(() => {\n        setLoading(true);\n        const delayDebounceFn = setTimeout(() => {\n            const fetchContacts = async () => {\n                try {\n                    const { data } = await api.get(\"/contacts/\", {\n                        params: { searchParam, pageNumber, contactTag: JSON.stringify(selectedTags) },\n                    });\n                    dispatch({ type: \"LOAD_CONTACTS\", payload: data.contacts });\n                    setHasMore(data.hasMore);\n                    setLoading(false);\n                } catch (err) {\n                    toastError(err);\n                }\n            };\n            fetchContacts();\n        }, 500);\n        return () => clearTimeout(delayDebounceFn);\n    }, [searchParam, pageNumber, selectedTags]);\n\n    useEffect(() => {\n        const companyId = user.companyId;\n        //    const socket = socketManager.GetSocket();\n\n        const onContactEvent = (data) => {\n            if (data.action === \"update\" || data.action === \"create\") {\n                dispatch({ type: \"UPDATE_CONTACTS\", payload: data.contact });\n            }\n\n            if (data.action === \"delete\") {\n                dispatch({ type: \"DELETE_CONTACT\", payload: +data.contactId });\n            }\n        };\n        socket.on(`company-${companyId}-contact`, onContactEvent);\n\n        return () => {\n            socket.off(`company-${companyId}-contact`, onContactEvent);\n        };\n    }, [socket]);\n\n    const handleSelectTicket = (ticket) => {\n        const code = uuidv4();\n        const { id, uuid } = ticket;\n        setCurrentTicket({ id, uuid, code });\n    }\n\n    const handleCloseOrOpenTicket = (ticket) => {\n        setNewTicketModalOpen(false);\n        if (ticket !== undefined && ticket.uuid !== undefined) {\n            handleSelectTicket(ticket);\n            history.push(`/tickets/${ticket.uuid}`);\n        }\n    };\n\n    const handleSelectedTags = (selecteds) => {\n        const tags = selecteds.map((t) => t.id);\n        setSelectedTags(tags);\n    };\n\n    const handleSearch = (event) => {\n        setSearchParam(event.target.value.toLowerCase());\n    };\n\n    const handleOpenContactModal = () => {\n        setSelectedContactId(null);\n        setContactModalOpen(true);\n    };\n\n    const handleCloseContactModal = () => {\n        setSelectedContactId(null);\n        setContactModalOpen(false);\n    };\n\n    const hadleEditContact = (contactId) => {\n        setSelectedContactId(contactId);\n        setContactModalOpen(true);\n    };\n\n    const handleDeleteContact = async (contactId) => {\n        try {\n            await api.delete(`/contacts/${contactId}`);\n            toast.success(i18n.t(\"contacts.toasts.deleted\"));\n        } catch (err) {\n            toastError(err);\n        }\n        setDeletingContact(null);\n        setSearchParam(\"\");\n        setPageNumber(1);\n    };\n\n    const handleBlockContact = async (contactId) => {\n        try {\n            await api.put(`/contacts/block/${contactId}`, { active: false });\n            toast.success(\"Contato bloqueado\");\n        } catch (err) {\n            toastError(err);\n        }\n        setDeletingContact(null);\n        setSearchParam(\"\");\n        setPageNumber(1);\n        setBlockingContact(null);\n    };\n\n    const handleUnBlockContact = async (contactId) => {\n        try {\n            await api.put(`/contacts/block/${contactId}`, { active: true });\n            toast.success(\"Contato desbloqueado\");\n        } catch (err) {\n            toastError(err);\n        }\n        setDeletingContact(null);\n        setSearchParam(\"\");\n        setPageNumber(1);\n        setUnBlockingContact(null);\n    };\n\n    const onSave = (whatsappId) => {\n        setImportWhatsappId(whatsappId)\n    }\n\n\n    const handleimportContact = async () => {\n        setImportContactModalOpen(false)\n\n        try {\n            await api.post(\"/contacts/import\", { whatsappId: importWhatsappId });\n            history.go(0);\n            setImportContactModalOpen(false);\n        } catch (err) {\n            toastError(err);\n            setImportContactModalOpen(false);\n        }\n    };\n\n    const handleimportChats = async () => {\n        console.log(\"handleimportChats\")\n        try {\n            await api.post(\"/contacts/import/chats\");\n            history.go(0);\n        } catch (err) {\n            toastError(err);\n        }\n    };\n\n    const loadMore = () => {\n        setPageNumber((prevState) => prevState + 1);\n    };\n\n    const handleScroll = (e) => {\n        if (!hasMore || loading) return;\n        const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n        if (scrollHeight - (scrollTop + 100) < clientHeight) {\n            loadMore();\n        }\n    };\n\n    // function getDateLastMessage(contact) {\n    //     if (!contact) return null;\n    //     if (!contact.tickets) return null;\n\n    //     if (contact.tickets.length > 0) {\n    //         const date = new Date(contact.tickets[contact.tickets.length - 1].updatedAt);\n\n    //         const day = date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`;\n    //         const month = date.getMonth() + 1 > 9 ? date.getMonth() + 1 : `0${date.getMonth() + 1}`;\n    //         const year = date.getFullYear();\n    //         const hours = date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`;\n    //         const minutes = date.getMinutes() > 9 ? date.getMinutes() : `0${date.getMinutes()}`;\n\n    //         return `${day}/${month}/${year} ${hours}:${minutes}`;\n    //     }\n\n    //     return null;\n    // }\n\n\n    return (\n\n        <MainContainer className={classes.mainContainer}>\n            <NewTicketModal\n                modalOpen={newTicketModalOpen}\n                initialContact={contactTicket}\n                onClose={(ticket) => {\n                    handleCloseOrOpenTicket(ticket);\n                }}\n            />\n            <ContactModal\n                open={contactModalOpen}\n                onClose={handleCloseContactModal}\n                aria-labelledby=\"form-dialog-title\"\n                contactId={selectedContactId}\n            ></ContactModal>\n            {/* <ContactImportModal \n                open={ImportContacts}\n                onClose={setConfirmOpen}\n                onSave={handleimportContact}\n            /> */}\n            <ConfirmationModal\n                title={\n                    deletingContact\n                        ? `${i18n.t(\n                            \"contacts.confirmationModal.deleteTitle\"\n                        )} ${deletingContact.name}?`\n                        : blockingContact\n                            ? `Bloquear Contato ${blockingContact.name}?`\n                            : unBlockingContact\n                                ? `Desbloquear Contato ${unBlockingContact.name}?`\n                                : ImportContacts\n                                    ? `${i18n.t(\"contacts.confirmationModal.importTitlte\")}`\n                                    : `${i18n.t(\"contactListItems.confirmationModal.importTitlte\")}`\n                }\n                onSave={onSave}\n                isCellPhone={ImportContacts}\n                open={confirmOpen}\n                onClose={setConfirmOpen}\n                onConfirm={(e) =>\n                    deletingContact\n                        ? handleDeleteContact(deletingContact.id)\n                        : blockingContact\n                            ? handleBlockContact(blockingContact.id)\n                            : unBlockingContact\n                                ? handleUnBlockContact(unBlockingContact.id)\n                                : ImportContacts\n                                    ? handleimportContact()\n                                    : handleImportExcel()\n                }\n            >\n                {exportContact\n                    ?\n                    `${i18n.t(\"contacts.confirmationModal.exportContact\")}`\n                    : deletingContact\n                        ? `${i18n.t(\"contacts.confirmationModal.deleteMessage\")}`\n                        : blockingContact\n                            ? `${i18n.t(\"contacts.confirmationModal.blockContact\")}`\n                            : unBlockingContact\n                                ? `${i18n.t(\"contacts.confirmationModal.unblockContact\")}`\n                                : ImportContacts\n                                    ? `Escolha de qual conexão deseja importar`\n                                    : `${i18n.t(\n                                        \"contactListItems.confirmationModal.importMessage\"\n                                    )}`}\n            </ConfirmationModal>\n            <ConfirmationModal\n                title={i18n.t(\"contacts.confirmationModal.importChat\")}\n                open={confirmChatsOpen}\n                onClose={setConfirmChatsOpen}\n                onConfirm={(e) => handleimportChats()}\n            >\n                {i18n.t(\"contacts.confirmationModal.wantImport\")}\n            </ConfirmationModal>\n            <MainHeader>\n                <Title>{i18n.t(\"contacts.title\")} ({contacts.length})</Title>\n                <MainHeaderButtonsWrapper>\n                    <TagsFilter\n                        onFiltered={handleSelectedTags}\n                    />\n                    <TextField\n                        placeholder={i18n.t(\"contacts.searchPlaceholder\")}\n                        type=\"search\"\n                        value={searchParam}\n                        onChange={handleSearch}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon color=\"secondary\" />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n                        {(popupState) => (\n                            <React.Fragment>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    {...bindTrigger(popupState)}\n                                >\n                                    Importar / Exportar\n                                    <ArrowDropDown />\n                                </Button>\n                                <Menu {...bindMenu(popupState)}>\n                                    <MenuItem\n                                        onClick={() => {\n                                            setConfirmOpen(true);\n                                            setImportContacts(true);\n                                            popupState.close();\n                                        }}\n                                    >\n                                        <ContactPhone\n                                            fontSize=\"small\"\n                                            color=\"primary\"\n                                            style={{\n                                                marginRight: 10,\n                                            }}\n                                        />\n                                        {i18n.t(\"contacts.menu.importYourPhone\")}\n                                    </MenuItem>\n                                    <MenuItem\n                                        onClick={() => { setImportContactModalOpen(true) }}\n\n                                    >\n                                        <Backup\n                                            fontSize=\"small\"\n                                            color=\"primary\"\n                                            style={{\n                                                marginRight: 10,\n                                            }}\n                                        />\n                                        {i18n.t(\"contacts.menu.importToExcel\")}\n\n                                    </MenuItem>\n                                    {/* {<MenuItem>\n                        \n                                       <CSVLink\n                                            className={classes.csvbtn}\n                                            separator=\";\"\n                                            filename={'contacts.csv'}\n                                            data={\n                                                contacts.map((contact) => ({\n                                                    number: hideNum && user.profile === \"user\" ? contact.isGroup ? contact.number : formatSerializedId(contact.number).slice(0,-6)+\"**-**\"+ contact.number.slice(-2): contact.isGroup ? contact.number : formatSerializedId(contact.number),\n                                                    firstName: contact.name.split(' ')[0],\n                                                    lastname: String(contact.name).replace(contact.name.split(' ')[0],''),\n                                                    tags: contact?.tags?.name\n                                                }))\n\n                                            }\n                                            \n                                            >\n                                        \n                                        <CloudDownload fontSize=\"small\"\n                                            color=\"primary\"\n                                            style={{\n                                                marginRight: 10,\n                                            \n                                                }}                                                \n                                        />        \n                                        Exportar Excel                                \n                                   </CSVLink>\n                                        \n                                    </MenuItem> } */}\n                                </Menu>\n                            </React.Fragment>\n                        )}\n                    </PopupState>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleOpenContactModal}\n                    >\n                        {i18n.t(\"contacts.buttons.add\")}\n                    </Button>\n                </MainHeaderButtonsWrapper>\n            </MainHeader>\n\n            {importContactModalOpen && (\n                <ContactImportWpModal\n                    isOpen={importContactModalOpen}\n                    handleClose={() => setImportContactModalOpen(false)}\n                    selectedTags={selectedTags}\n                    hideNum={hideNum}\n                    userProfile={user.profile}\n                />\n            )}\n            <Paper\n                className={classes.mainPaper}\n                variant=\"outlined\"\n                onScroll={handleScroll}\n            >\n                <>\n                    <input\n                        style={{ display: \"none\" }}\n                        id=\"upload\"\n                        name=\"file\"\n                        type=\"file\"\n                        accept=\".xls,.xlsx\"\n                        onChange={() => {\n                            setConfirmOpen(true);\n                        }}\n                        ref={fileUploadRef}\n                    />\n                </>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell padding=\"checkbox\" />\n                            <TableCell>\n                                {i18n.t(\"contacts.table.name\")}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.whatsapp\")}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.email\")}\n                            </TableCell>\n                            {/* <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.lastMessage\")}\n                            </TableCell> */}\n                            <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.whatsapp\")}\n                            </TableCell>\n                            <TableCell align=\"center\">{\"Status\"}</TableCell>\n                            <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.actions\")}\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <>\n                            {contacts.map((contact) => (\n                                <TableRow key={contact.id}>\n                                    <TableCell style={{ paddingRight: 0 }}>\n                                        {<Avatar src={`${contact?.urlPicture}`} />}\n                                    </TableCell>\n                                    <TableCell>{contact.name}</TableCell>\n                                    <TableCell align=\"center\">\n                                        {((enableLGPD && hideNum && user.profile === \"user\")\n                                            ? contact.isGroup\n                                                ? contact.number :\n                                                formatSerializedId(contact?.number) === null ? contact.number.slice(0, -6) + \"**-**\" + contact?.number.slice(-2) :\n                                                    formatSerializedId(contact?.number)?.slice(0, -6) + \"**-**\" + contact?.number?.slice(-2) :\n                                                    contact.isGroup ? contact.number : formatSerializedId(contact?.number)\n                                        )}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {contact.email}\n                                    </TableCell>\n                                    {/* <TableCell align=\"center\">\n                                        {getDateLastMessage(contact)}\n                                    </TableCell> */}\n                                    <TableCell>{contact?.whatsapp?.name}</TableCell>\n                                    <TableCell align=\"center\">\n                                        {contact.active ? (\n                                            <CheckCircleIcon\n                                                style={{ color: \"green\" }}\n                                                fontSize=\"small\"\n                                            />\n                                        ) : (\n                                            <CancelIcon\n                                                style={{ color: \"red\" }}\n                                                fontSize=\"small\"\n                                            />\n                                        )}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <IconButton\n                                            size=\"small\"\n                                            disabled={!contact.active}\n                                            onClick={() => {\n                                                setContactTicket(contact);\n                                                setNewTicketModalOpen(true);\n                                                // handleSaveTicket(contact.id);\n                                            }}\n                                        >\n                                            {contact.channel === \"whatsapp\" && (<WhatsApp style={{ color: \"green\" }} />)}\n                                            {contact.channel === \"instagram\" && (<Instagram style={{ color: \"purple\" }} />)}\n                                            {contact.channel === \"facebook\" && (<Facebook style={{ color: \"blue\" }} />)}\n                                        </IconButton>\n\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() =>\n                                                hadleEditContact(contact.id)\n                                            }\n                                        >\n                                            <EditIcon color=\"secondary\" />\n                                        </IconButton>\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={\n                                                contact.active\n                                                    ? () => {\n                                                        setConfirmOpen(true);\n                                                        setBlockingContact(\n                                                            contact\n                                                        );\n                                                    }\n                                                    : () => {\n                                                        setConfirmOpen(true);\n                                                        setUnBlockingContact(\n                                                            contact\n                                                        );\n                                                    }\n                                            }\n                                        >\n                                            {contact.active ? (\n                                                <BlockIcon color=\"secondary\" />\n                                            ) : (\n                                                <CheckCircleIcon color=\"secondary\" />\n                                            )}\n                                        </IconButton>\n                                        <Can\n                                            role={user.profile}\n                                            perform=\"contacts-page:deleteContact\"\n                                            yes={() => (\n                                                <IconButton\n                                                    size=\"small\"\n                                                    onClick={(e) => {\n                                                        setConfirmOpen(true);\n                                                        setDeletingContact(\n                                                            contact\n                                                        );\n                                                    }}\n                                                >\n                                                    <DeleteOutlineIcon color=\"secondary\" />\n                                                </IconButton>\n                                            )}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            {loading && <TableRowSkeleton avatar columns={6} />}\n                        </>\n                    </TableBody>\n                </Table>\n            </Paper>\n        </MainContainer >\n    );\n};\n\nexport default Contacts;"],"mappings":";AAAA,OAAOA,KAAK,IACRC,QAAQ,EACRC,SAAS,EACTC,UAAU,EACVC,UAAU,EACVC,MAAM,QACH,OAAO;AACd;AACA,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAASC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,oBAAoB;AAClE,OAAOC,UAAU,MAAM,2BAA2B;AAElD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,cAAc,MAAM,kCAAkC;AAE7D,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,iBAAiB,MAAM,kCAAkC;AAChE,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,OAAOC,eAAe,MAAM,gCAAgC;AAC5D,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,SAAS,MAAM,0BAA0B;AAEhD,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,gBAAgB,MAAM,mCAAmC;AAChE,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,iBAAiB,MAAM,oCAAoC;AAElE,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,wBAAwB,MAAM,2CAA2C;AAChF,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,UAAU,MAAM,yBAAyB;AAEhD,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,GAAG,QAAQ,sBAAsB;AAC1C,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,SAASC,UAAU,QAAQ,6BAA6B;AACxD,OAAOC,UAAU,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,yBAAyB;AAC3E,OAAOC,kBAAkB,MAAM,gCAAgC;AAC/D,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,SACIC,aAAa,EACbC,MAAM,EACNC,YAAY,QACT,oBAAoB;AAC3B,SAASC,IAAI,EAAEC,QAAQ,QAAQ,mBAAmB;AAElD,OAAOC,oBAAoB,MAAM,uCAAuC;AACxE,OAAOC,kBAAkB,MAAM,yCAAyC;AACxE,SAASC,cAAc,QAAQ,sCAAsC;AAErE,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,IAAIA,MAAM,CAACC,IAAI,KAAK,eAAe,EAAE;IACjC,MAAMC,QAAQ,GAAGF,MAAM,CAACG,OAAO;IAC/B,MAAMC,WAAW,GAAG,EAAE;IAEtBF,QAAQ,CAACG,OAAO,CAAEC,OAAO,IAAK;MAC1B,MAAMC,YAAY,GAAGR,KAAK,CAACS,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MAChE,IAAIH,YAAY,KAAK,CAAC,CAAC,EAAE;QACrBR,KAAK,CAACQ,YAAY,CAAC,GAAGD,OAAO;MACjC,CAAC,MAAM;QACHF,WAAW,CAACO,IAAI,CAACL,OAAO,CAAC;MAC7B;IACJ,CAAC,CAAC;IAEF,OAAO,CAAC,GAAGP,KAAK,EAAE,GAAGK,WAAW,CAAC;EACrC;EAEA,IAAIJ,MAAM,CAACC,IAAI,KAAK,iBAAiB,EAAE;IACnC,MAAMK,OAAO,GAAGN,MAAM,CAACG,OAAO;IAC9B,MAAMI,YAAY,GAAGR,KAAK,CAACS,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;IAEhE,IAAIH,YAAY,KAAK,CAAC,CAAC,EAAE;MACrBR,KAAK,CAACQ,YAAY,CAAC,GAAGD,OAAO;MAC7B,OAAO,CAAC,GAAGP,KAAK,CAAC;IACrB,CAAC,MAAM;MACH,OAAO,CAACO,OAAO,EAAE,GAAGP,KAAK,CAAC;IAC9B;EACJ;EAEA,IAAIC,MAAM,CAACC,IAAI,KAAK,gBAAgB,EAAE;IAClC,MAAMW,SAAS,GAAGZ,MAAM,CAACG,OAAO;IAEhC,MAAMI,YAAY,GAAGR,KAAK,CAACS,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKE,SAAS,CAAC;IAC/D,IAAIL,YAAY,KAAK,CAAC,CAAC,EAAE;MACrBR,KAAK,CAACc,MAAM,CAACN,YAAY,EAAE,CAAC,CAAC;IACjC;IACA,OAAO,CAAC,GAAGR,KAAK,CAAC;EACrB;EAEA,IAAIC,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;IACzB,OAAO,EAAE;EACb;AACJ,CAAC;AAED,MAAMa,SAAS,GAAGjE,UAAU,CAAEkE,KAAK,KAAM;EACrCC,SAAS,EAAE;IACPC,IAAI,EAAE,CAAC;IACPC,OAAO,EAAEH,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC;IACzBC,SAAS,EAAE,QAAQ;IACnB,GAAGL,KAAK,CAACM;EACb;AACJ,CAAC,CAAC,CAAC;AAEH,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,OAAO,GAAGT,SAAS,CAAC,CAAC;EAC3B,MAAMU,OAAO,GAAG5E,UAAU,CAAC,CAAC;;EAE5B;EACA,MAAM;IAAE6E,IAAI;IAAEC;EAAO,CAAC,GAAGjF,UAAU,CAACmC,WAAW,CAAC;EAGhD,MAAM,CAAC+C,OAAO,EAAEC,UAAU,CAAC,GAAGtF,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACuF,UAAU,EAAEC,aAAa,CAAC,GAAGxF,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACyF,WAAW,EAAEC,cAAc,CAAC,GAAG1F,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC4D,QAAQ,EAAE+B,QAAQ,CAAC,GAAGzF,UAAU,CAACsD,OAAO,EAAE,EAAE,CAAC;EACpD,MAAM,CAACoC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7F,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAAC8F,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/F,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAM,CAACgG,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGjG,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACkG,eAAe,EAAEC,kBAAkB,CAAC,GAAGnG,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACoG,cAAc,EAAEC,iBAAiB,CAAC,GAAGrG,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAM,CAACsG,eAAe,EAAEC,kBAAkB,CAAC,GAAGvG,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACwG,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGzG,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAAC0G,WAAW,EAAEC,cAAc,CAAC,GAAG3G,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC4G,aAAa,EAAEC,gBAAgB,CAAC,GAAG7G,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC8G,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/G,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACgH,OAAO,EAAEC,UAAU,CAAC,GAAGjH,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkH,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnH,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACoH,aAAa,EAAEC,gBAAgB,CAAC,GAAGrH,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAMsH,aAAa,GAAGlH,MAAM,CAAC,IAAI,CAAC;EAClC,MAAM,CAACmH,YAAY,EAAEC,eAAe,CAAC,GAAGxH,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM;IAAEyH;EAAiB,CAAC,GAAGtH,UAAU,CAACoD,cAAc,CAAC;EAEvD,MAAM,CAACmE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3H,QAAQ,CAAC,CAAC;EAG1D,MAAM;IAAE4H,MAAM,EAAEC;EAAe,CAAC,GAAGvE,kBAAkB,CAAC,CAAC;EACvD,MAAM,CAACwE,OAAO,EAAEC,UAAU,CAAC,GAAG/H,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgI,UAAU,EAAEC,aAAa,CAAC,GAAGjI,QAAQ,CAAC,KAAK,CAAC;EACnDC,SAAS,CAAC,MAAM;IAEZ,eAAeiI,SAASA,CAAA,EAAG;MAEvB,MAAMC,WAAW,GAAG,MAAMN,cAAc,CAAC1C,IAAI,CAACiD,SAAS,CAAC;MAExD,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACL,WAAW,CAAC,EAAE;QAEpD,IAAIE,GAAG,KAAK,YAAY,EAAEJ,aAAa,CAACK,KAAK,KAAK,SAAS,CAAC;QAC5D,IAAID,GAAG,KAAK,gBAAgB,EAAEN,UAAU,CAACO,KAAK,KAAK,SAAS,CAAC;MAE/D;;MAEF;MACA;MACA;IACJ;IACAJ,SAAS,CAAC,CAAC;IACX;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEtB,aAAa,CAACuB,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MACvD,MAAMlH,GAAG,CAACmH,OAAO,CAAC;QACdC,GAAG,EAAE,kBAAkB;QACvBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAER;MACV,CAAC,CAAC;MACFxD,OAAO,CAACiE,EAAE,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACV/G,UAAU,CAAC+G,GAAG,CAAC;IACnB;EACJ,CAAC;EAEDnJ,SAAS,CAAC,MAAM;IACZ0F,QAAQ,CAAC;MAAEhC,IAAI,EAAE;IAAQ,CAAC,CAAC;IAC3B6B,aAAa,CAAC,CAAC,CAAC;EACpB,CAAC,EAAE,CAACC,WAAW,EAAE8B,YAAY,CAAC,CAAC;EAE/BtH,SAAS,CAAC,MAAM;IACZqF,UAAU,CAAC,IAAI,CAAC;IAChB,MAAM+D,eAAe,GAAGC,UAAU,CAAC,MAAM;MACrC,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;QAC9B,IAAI;UACA,MAAM;YAAEL;UAAK,CAAC,GAAG,MAAMtH,GAAG,CAAC4H,GAAG,CAAC,YAAY,EAAE;YACzCC,MAAM,EAAE;cAAEhE,WAAW;cAAEF,UAAU;cAAEmE,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACrC,YAAY;YAAE;UAChF,CAAC,CAAC;UACF5B,QAAQ,CAAC;YAAEhC,IAAI,EAAE,eAAe;YAAEE,OAAO,EAAEqF,IAAI,CAACtF;UAAS,CAAC,CAAC;UAC3DqD,UAAU,CAACiC,IAAI,CAAClC,OAAO,CAAC;UACxB1B,UAAU,CAAC,KAAK,CAAC;QACrB,CAAC,CAAC,OAAO8D,GAAG,EAAE;UACV/G,UAAU,CAAC+G,GAAG,CAAC;QACnB;MACJ,CAAC;MACDG,aAAa,CAAC,CAAC;IACnB,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMM,YAAY,CAACR,eAAe,CAAC;EAC9C,CAAC,EAAE,CAAC5D,WAAW,EAAEF,UAAU,EAAEgC,YAAY,CAAC,CAAC;EAE3CtH,SAAS,CAAC,MAAM;IACZ,MAAMmI,SAAS,GAAGjD,IAAI,CAACiD,SAAS;IAChC;;IAEA,MAAM0B,cAAc,GAAIZ,IAAI,IAAK;MAC7B,IAAIA,IAAI,CAACxF,MAAM,KAAK,QAAQ,IAAIwF,IAAI,CAACxF,MAAM,KAAK,QAAQ,EAAE;QACtDiC,QAAQ,CAAC;UAAEhC,IAAI,EAAE,iBAAiB;UAAEE,OAAO,EAAEqF,IAAI,CAAClF;QAAQ,CAAC,CAAC;MAChE;MAEA,IAAIkF,IAAI,CAACxF,MAAM,KAAK,QAAQ,EAAE;QAC1BiC,QAAQ,CAAC;UAAEhC,IAAI,EAAE,gBAAgB;UAAEE,OAAO,EAAE,CAACqF,IAAI,CAAC5E;QAAU,CAAC,CAAC;MAClE;IACJ,CAAC;IACDc,MAAM,CAAC2E,EAAE,CAAC,WAAW3B,SAAS,UAAU,EAAE0B,cAAc,CAAC;IAEzD,OAAO,MAAM;MACT1E,MAAM,CAAC4E,GAAG,CAAC,WAAW5B,SAAS,UAAU,EAAE0B,cAAc,CAAC;IAC9D,CAAC;EACL,CAAC,EAAE,CAAC1E,MAAM,CAAC,CAAC;EAEZ,MAAM6E,kBAAkB,GAAIC,MAAM,IAAK;IACnC,MAAMC,IAAI,GAAGpH,MAAM,CAAC,CAAC;IACrB,MAAM;MAAEqB,EAAE;MAAEgG;IAAK,CAAC,GAAGF,MAAM;IAC3BzC,gBAAgB,CAAC;MAAErD,EAAE;MAAEgG,IAAI;MAAED;IAAK,CAAC,CAAC;EACxC,CAAC;EAED,MAAME,uBAAuB,GAAIH,MAAM,IAAK;IACxC/C,qBAAqB,CAAC,KAAK,CAAC;IAC5B,IAAI+C,MAAM,KAAKI,SAAS,IAAIJ,MAAM,CAACE,IAAI,KAAKE,SAAS,EAAE;MACnDL,kBAAkB,CAACC,MAAM,CAAC;MAC1BhF,OAAO,CAACb,IAAI,CAAC,YAAY6F,MAAM,CAACE,IAAI,EAAE,CAAC;IAC3C;EACJ,CAAC;EAED,MAAMG,kBAAkB,GAAIC,SAAS,IAAK;IACtC,MAAMC,IAAI,GAAGD,SAAS,CAACE,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACvG,EAAE,CAAC;IACvCoD,eAAe,CAACiD,IAAI,CAAC;EACzB,CAAC;EAED,MAAMG,YAAY,GAAIC,KAAK,IAAK;IAC5BnF,cAAc,CAACmF,KAAK,CAACC,MAAM,CAACxC,KAAK,CAACyC,WAAW,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACjCnF,oBAAoB,CAAC,IAAI,CAAC;IAC1BE,mBAAmB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMkF,uBAAuB,GAAGA,CAAA,KAAM;IAClCpF,oBAAoB,CAAC,IAAI,CAAC;IAC1BE,mBAAmB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMmF,gBAAgB,GAAI5G,SAAS,IAAK;IACpCuB,oBAAoB,CAACvB,SAAS,CAAC;IAC/ByB,mBAAmB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMoF,mBAAmB,GAAG,MAAO7G,SAAS,IAAK;IAC7C,IAAI;MACA,MAAM1C,GAAG,CAACwJ,MAAM,CAAC,aAAa9G,SAAS,EAAE,CAAC;MAC1CjE,KAAK,CAACgL,OAAO,CAACrJ,IAAI,CAAC2I,CAAC,CAAC,yBAAyB,CAAC,CAAC;IACpD,CAAC,CAAC,OAAOvB,GAAG,EAAE;MACV/G,UAAU,CAAC+G,GAAG,CAAC;IACnB;IACAjD,kBAAkB,CAAC,IAAI,CAAC;IACxBT,cAAc,CAAC,EAAE,CAAC;IAClBF,aAAa,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,MAAM8F,kBAAkB,GAAG,MAAOhH,SAAS,IAAK;IAC5C,IAAI;MACA,MAAM1C,GAAG,CAAC2J,GAAG,CAAC,mBAAmBjH,SAAS,EAAE,EAAE;QAAEkH,MAAM,EAAE;MAAM,CAAC,CAAC;MAChEnL,KAAK,CAACgL,OAAO,CAAC,mBAAmB,CAAC;IACtC,CAAC,CAAC,OAAOjC,GAAG,EAAE;MACV/G,UAAU,CAAC+G,GAAG,CAAC;IACnB;IACAjD,kBAAkB,CAAC,IAAI,CAAC;IACxBT,cAAc,CAAC,EAAE,CAAC;IAClBF,aAAa,CAAC,CAAC,CAAC;IAChBe,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMkF,oBAAoB,GAAG,MAAOnH,SAAS,IAAK;IAC9C,IAAI;MACA,MAAM1C,GAAG,CAAC2J,GAAG,CAAC,mBAAmBjH,SAAS,EAAE,EAAE;QAAEkH,MAAM,EAAE;MAAK,CAAC,CAAC;MAC/DnL,KAAK,CAACgL,OAAO,CAAC,sBAAsB,CAAC;IACzC,CAAC,CAAC,OAAOjC,GAAG,EAAE;MACV/G,UAAU,CAAC+G,GAAG,CAAC;IACnB;IACAjD,kBAAkB,CAAC,IAAI,CAAC;IACxBT,cAAc,CAAC,EAAE,CAAC;IAClBF,aAAa,CAAC,CAAC,CAAC;IAChBiB,oBAAoB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMiF,MAAM,GAAIC,UAAU,IAAK;IAC3BhE,mBAAmB,CAACgE,UAAU,CAAC;EACnC,CAAC;EAGD,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpC3F,yBAAyB,CAAC,KAAK,CAAC;IAEhC,IAAI;MACA,MAAMrE,GAAG,CAACiK,IAAI,CAAC,kBAAkB,EAAE;QAAEF,UAAU,EAAEjE;MAAiB,CAAC,CAAC;MACpExC,OAAO,CAACiE,EAAE,CAAC,CAAC,CAAC;MACblD,yBAAyB,CAAC,KAAK,CAAC;IACpC,CAAC,CAAC,OAAOmD,GAAG,EAAE;MACV/G,UAAU,CAAC+G,GAAG,CAAC;MACfnD,yBAAyB,CAAC,KAAK,CAAC;IACpC;EACJ,CAAC;EAED,MAAM6F,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,IAAI;MACA,MAAMpK,GAAG,CAACiK,IAAI,CAAC,wBAAwB,CAAC;MACxC3G,OAAO,CAACiE,EAAE,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACV/G,UAAU,CAAC+G,GAAG,CAAC;IACnB;EACJ,CAAC;EAED,MAAM6C,QAAQ,GAAGA,CAAA,KAAM;IACnBzG,aAAa,CAAE0G,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxB,IAAI,CAACpF,OAAO,IAAI3B,OAAO,EAAE;IACzB,MAAM;MAAEgH,SAAS;MAAEC,YAAY;MAAEC;IAAa,CAAC,GAAGH,CAAC,CAACI,aAAa;IACjE,IAAIF,YAAY,IAAID,SAAS,GAAG,GAAG,CAAC,GAAGE,YAAY,EAAE;MACjDN,QAAQ,CAAC,CAAC;IACd;EACJ,CAAC;;EAED;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAGA,oBAEIlM,KAAA,CAAA0M,aAAA,CAACrK,aAAa;IAACsK,SAAS,EAAEzH,OAAO,CAAC0H,aAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5ClN,KAAA,CAAA0M,aAAA,CAACjK,cAAc;IACX0K,SAAS,EAAEhG,kBAAmB;IAC9BiG,cAAc,EAAE/F,aAAc;IAC9BgG,OAAO,EAAGlD,MAAM,IAAK;MACjBG,uBAAuB,CAACH,MAAM,CAAC;IACnC,CAAE;IAAA0C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACL,CAAC,eACFlN,KAAA,CAAA0M,aAAA,CAAC3K,YAAY;IACTuL,IAAI,EAAEvH,gBAAiB;IACvBsH,OAAO,EAAEnC,uBAAwB;IACjC,mBAAgB,mBAAmB;IACnC3G,SAAS,EAAEsB,iBAAkB;IAAAgH,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAClB,CAAC,eAMhBlN,KAAA,CAAA0M,aAAA,CAAC1K,iBAAiB;IACduL,KAAK,EACDpH,eAAe,GACT,GAAGlE,IAAI,CAAC2I,CAAC,CACP,wCACJ,CAAC,IAAIzE,eAAe,CAACqH,IAAI,GAAG,GAC1BjH,eAAe,GACX,oBAAoBA,eAAe,CAACiH,IAAI,GAAG,GAC3C/G,iBAAiB,GACb,uBAAuBA,iBAAiB,CAAC+G,IAAI,GAAG,GAChDnH,cAAc,GACV,GAAGpE,IAAI,CAAC2I,CAAC,CAAC,yCAAyC,CAAC,EAAE,GACtD,GAAG3I,IAAI,CAAC2I,CAAC,CAAC,iDAAiD,CAAC,EACjF;IACDe,MAAM,EAAEA,MAAO;IACf8B,WAAW,EAAEpH,cAAe;IAC5BiH,IAAI,EAAE3G,WAAY;IAClB0G,OAAO,EAAEzG,cAAe;IACxB8G,SAAS,EAAGrB,CAAC,IACTlG,eAAe,GACTiF,mBAAmB,CAACjF,eAAe,CAAC9B,EAAE,CAAC,GACvCkC,eAAe,GACXgF,kBAAkB,CAAChF,eAAe,CAAClC,EAAE,CAAC,GACtCoC,iBAAiB,GACbiF,oBAAoB,CAACjF,iBAAiB,CAACpC,EAAE,CAAC,GAC1CgC,cAAc,GACVwF,mBAAmB,CAAC,CAAC,GACrBnD,iBAAiB,CAAC,CACvC;IAAAmE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEArG,aAAa,GAEV,GAAG5E,IAAI,CAAC2I,CAAC,CAAC,0CAA0C,CAAC,EAAE,GACrDzE,eAAe,GACX,GAAGlE,IAAI,CAAC2I,CAAC,CAAC,0CAA0C,CAAC,EAAE,GACvDrE,eAAe,GACX,GAAGtE,IAAI,CAAC2I,CAAC,CAAC,yCAAyC,CAAC,EAAE,GACtDnE,iBAAiB,GACb,GAAGxE,IAAI,CAAC2I,CAAC,CAAC,2CAA2C,CAAC,EAAE,GACxDvE,cAAc,GACV,yCAAyC,GACzC,GAAGpE,IAAI,CAAC2I,CAAC,CACP,kDACJ,CAAC,EACN,CAAC,eACpB5K,KAAA,CAAA0M,aAAA,CAAC1K,iBAAiB;IACduL,KAAK,EAAEtL,IAAI,CAAC2I,CAAC,CAAC,uCAAuC,CAAE;IACvD0C,IAAI,EAAEvG,gBAAiB;IACvBsG,OAAO,EAAErG,mBAAoB;IAC7B0G,SAAS,EAAGrB,CAAC,IAAKN,iBAAiB,CAAC,CAAE;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAErCjL,IAAI,CAAC2I,CAAC,CAAC,uCAAuC,CAChC,CAAC,eACpB5K,KAAA,CAAA0M,aAAA,CAACxK,UAAU;IAAA2K,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACPlN,KAAA,CAAA0M,aAAA,CAACvK,KAAK;IAAA0K,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEjL,IAAI,CAAC2I,CAAC,CAAC,gBAAgB,CAAC,EAAC,IAAE,EAAC/G,QAAQ,CAAC8J,MAAM,EAAC,GAAQ,CAAC,eAC7D3N,KAAA,CAAA0M,aAAA,CAACtK,wBAAwB;IAAAyK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrBlN,KAAA,CAAA0M,aAAA,CAAChK,UAAU;IACPkL,UAAU,EAAEpD,kBAAmB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAClC,CAAC,eACFlN,KAAA,CAAA0M,aAAA,CAACrL,SAAS;IACNwM,WAAW,EAAE5L,IAAI,CAAC2I,CAAC,CAAC,4BAA4B,CAAE;IAClDhH,IAAI,EAAC,QAAQ;IACb2E,KAAK,EAAE7C,WAAY;IACnBoI,QAAQ,EAAEjD,YAAa;IACvBkD,UAAU,EAAE;MACRC,cAAc,eACVhO,KAAA,CAAA0M,aAAA,CAACpL,cAAc;QAAC2M,QAAQ,EAAC,OAAO;QAAApB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAC5BlN,KAAA,CAAA0M,aAAA,CAACtL,UAAU;QAAC8M,KAAK,EAAC,WAAW;QAAArB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CACnB;IAExB,CAAE;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACL,CAAC,eACFlN,KAAA,CAAA0M,aAAA,CAAC/J,UAAU;IAACwL,OAAO,EAAC,SAAS;IAACC,OAAO,EAAC,iBAAiB;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjDmB,UAAU,iBACRrO,KAAA,CAAA0M,aAAA,CAAC1M,KAAK,CAACsO,QAAQ;IAAAzB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACXlN,KAAA,CAAA0M,aAAA,CAAC3L,MAAM,EAAAyH,MAAA,CAAA+F,MAAA;IACHJ,OAAO,EAAC,WAAW;IACnBD,KAAK,EAAC;EAAS,GACXtL,WAAW,CAACyL,UAAU,CAAC;IAAAxB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IAC9B,qBAEG,eAAAlN,KAAA,CAAA0M,aAAA,CAACzJ,aAAa;IAAA4J,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACZ,CAAC,eACTlN,KAAA,CAAA0M,aAAA,CAACtJ,IAAI,EAAAoF,MAAA,CAAA+F,MAAA,KAAK1L,QAAQ,CAACwL,UAAU,CAAC;IAAAxB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,iBAC1BlN,KAAA,CAAA0M,aAAA,CAACrJ,QAAQ;IACLmL,OAAO,EAAEA,CAAA,KAAM;MACX5H,cAAc,CAAC,IAAI,CAAC;MACpBN,iBAAiB,CAAC,IAAI,CAAC;MACvB+H,UAAU,CAACI,KAAK,CAAC,CAAC;IACtB,CAAE;IAAA5B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEFlN,KAAA,CAAA0M,aAAA,CAACvJ,YAAY;IACTuL,QAAQ,EAAC,OAAO;IAChBR,KAAK,EAAC,SAAS;IACfS,KAAK,EAAE;MACHC,WAAW,EAAE;IACjB,CAAE;IAAA/B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACL,CAAC,EACDjL,IAAI,CAAC2I,CAAC,CAAC,+BAA+B,CACjC,CAAC,eACX5K,KAAA,CAAA0M,aAAA,CAACrJ,QAAQ;IACLmL,OAAO,EAAEA,CAAA,KAAM;MAAEtI,yBAAyB,CAAC,IAAI,CAAC;IAAC,CAAE;IAAA2G,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAGnDlN,KAAA,CAAA0M,aAAA,CAACxJ,MAAM;IACHwL,QAAQ,EAAC,OAAO;IAChBR,KAAK,EAAC,SAAS;IACfS,KAAK,EAAE;MACHC,WAAW,EAAE;IACjB,CAAE;IAAA/B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACL,CAAC,EACDjL,IAAI,CAAC2I,CAAC,CAAC,6BAA6B,CAE/B,CA8BR,CACM,CAEZ,CAAC,eACb5K,KAAA,CAAA0M,aAAA,CAAC3L,MAAM;IACHoN,OAAO,EAAC,WAAW;IACnBD,KAAK,EAAC,SAAS;IACfM,OAAO,EAAEvD,sBAAuB;IAAA4B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAE/BjL,IAAI,CAAC2I,CAAC,CAAC,sBAAsB,CAC1B,CACc,CAClB,CAAC,EAEZ3E,sBAAsB,iBACnBjG,KAAA,CAAA0M,aAAA,CAACpJ,oBAAoB;IACjBuL,MAAM,EAAE5I,sBAAuB;IAC/B6I,WAAW,EAAEA,CAAA,KAAM5I,yBAAyB,CAAC,KAAK,CAAE;IACpDsB,YAAY,EAAEA,YAAa;IAC3BO,OAAO,EAAEA,OAAQ;IACjBgH,WAAW,EAAE3J,IAAI,CAAC4J,OAAQ;IAAAnC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC7B,CACJ,eACDlN,KAAA,CAAA0M,aAAA,CAAC5L,KAAK;IACF6L,SAAS,EAAEzH,OAAO,CAACP,SAAU;IAC7BwJ,OAAO,EAAC,UAAU;IAClBc,QAAQ,EAAE7C,YAAa;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEvBlN,KAAA,CAAA0M,aAAA,CAAA1M,KAAA,CAAAsO,QAAA,qBACItO,KAAA,CAAA0M,aAAA;IACIiC,KAAK,EAAE;MAAEO,OAAO,EAAE;IAAO,CAAE;IAC3B7K,EAAE,EAAC,QAAQ;IACXmJ,IAAI,EAAC,MAAM;IACX5J,IAAI,EAAC,MAAM;IACXuL,MAAM,EAAC,YAAY;IACnBrB,QAAQ,EAAEA,CAAA,KAAM;MACZlH,cAAc,CAAC,IAAI,CAAC;IACxB,CAAE;IACFwI,GAAG,EAAE7H,aAAc;IAAAsF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtB,CACH,CAAC,eACHlN,KAAA,CAAA0M,aAAA,CAACjM,KAAK;IAAC4O,IAAI,EAAC,OAAO;IAAAxC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACflN,KAAA,CAAA0M,aAAA,CAAC9L,SAAS;IAAAiM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACNlN,KAAA,CAAA0M,aAAA,CAAC7L,QAAQ;IAAAgM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACLlN,KAAA,CAAA0M,aAAA,CAAC/L,SAAS;IAACkE,OAAO,EAAC,UAAU;IAAAgI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAChClN,KAAA,CAAA0M,aAAA,CAAC/L,SAAS;IAAAkM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACLjL,IAAI,CAAC2I,CAAC,CAAC,qBAAqB,CACtB,CAAC,eACZ5K,KAAA,CAAA0M,aAAA,CAAC/L,SAAS;IAAC2O,KAAK,EAAC,QAAQ;IAAAzC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpBjL,IAAI,CAAC2I,CAAC,CAAC,yBAAyB,CAC1B,CAAC,eACZ5K,KAAA,CAAA0M,aAAA,CAAC/L,SAAS;IAAC2O,KAAK,EAAC,QAAQ;IAAAzC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpBjL,IAAI,CAAC2I,CAAC,CAAC,sBAAsB,CACvB,CAAC,eAIZ5K,KAAA,CAAA0M,aAAA,CAAC/L,SAAS;IAAC2O,KAAK,EAAC,QAAQ;IAAAzC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpBjL,IAAI,CAAC2I,CAAC,CAAC,yBAAyB,CAC1B,CAAC,eACZ5K,KAAA,CAAA0M,aAAA,CAAC/L,SAAS;IAAC2O,KAAK,EAAC,QAAQ;IAAAzC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE,QAAoB,CAAC,eAChDlN,KAAA,CAAA0M,aAAA,CAAC/L,SAAS;IAAC2O,KAAK,EAAC,QAAQ;IAAAzC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpBjL,IAAI,CAAC2I,CAAC,CAAC,wBAAwB,CACzB,CACL,CACH,CAAC,eACZ5K,KAAA,CAAA0M,aAAA,CAAChM,SAAS;IAAAmM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACNlN,KAAA,CAAA0M,aAAA,CAAA1M,KAAA,CAAAsO,QAAA,QACKzK,QAAQ,CAAC8G,GAAG,CAAE1G,OAAO;IAAA,IAAAsL,mBAAA,EAAAC,eAAA,EAAAC,iBAAA;IAAA,oBAClBzP,KAAA,CAAA0M,aAAA,CAAC7L,QAAQ;MAACyH,GAAG,EAAErE,OAAO,CAACI,EAAG;MAAAwI,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACtBlN,KAAA,CAAA0M,aAAA,CAAC/L,SAAS;MAACgO,KAAK,EAAE;QAAEe,YAAY,EAAE;MAAE,CAAE;MAAA7C,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACjClN,KAAA,CAAA0M,aAAA,CAAC1L,MAAM;MAAC2O,GAAG,EAAE,GAAG1L,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE2L,UAAU,EAAG;MAAA/C,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAClC,CAAC,eACZlN,KAAA,CAAA0M,aAAA,CAAC/L,SAAS;MAAAkM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEjJ,OAAO,CAACuJ,IAAgB,CAAC,eACrCxN,KAAA,CAAA0M,aAAA,CAAC/L,SAAS;MAAC2O,KAAK,EAAC,QAAQ;MAAAzC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAClBjF,UAAU,IAAIF,OAAO,IAAI3C,IAAI,CAAC4J,OAAO,KAAK,MAAM,GAC7C/K,OAAO,CAAC4L,OAAO,GACX5L,OAAO,CAAC6L,MAAM,GAChBhN,kBAAkB,CAACmB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE6L,MAAM,CAAC,KAAK,IAAI,GAAG7L,OAAO,CAAC6L,MAAM,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,IAAG9L,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE6L,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,IAC5G,EAAAR,mBAAA,GAAAzM,kBAAkB,CAACmB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE6L,MAAM,CAAC,cAAAP,mBAAA,uBAAnCA,mBAAA,CAAqCQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAG,OAAO,IAAG9L,OAAO,aAAPA,OAAO,wBAAAuL,eAAA,GAAPvL,OAAO,CAAE6L,MAAM,cAAAN,eAAA,uBAAfA,eAAA,CAAiBO,KAAK,CAAC,CAAC,CAAC,CAAC,IACxF9L,OAAO,CAAC4L,OAAO,GAAG5L,OAAO,CAAC6L,MAAM,GAAGhN,kBAAkB,CAACmB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE6L,MAAM,CAE1E,CAAC,eACZ9P,KAAA,CAAA0M,aAAA,CAAC/L,SAAS;MAAC2O,KAAK,EAAC,QAAQ;MAAAzC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACpBjJ,OAAO,CAAC+L,KACF,CAAC,eAIZhQ,KAAA,CAAA0M,aAAA,CAAC/L,SAAS;MAAAkM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEjJ,OAAO,aAAPA,OAAO,wBAAAwL,iBAAA,GAAPxL,OAAO,CAAEgM,QAAQ,cAAAR,iBAAA,uBAAjBA,iBAAA,CAAmBjC,IAAgB,CAAC,eAChDxN,KAAA,CAAA0M,aAAA,CAAC/L,SAAS;MAAC2O,KAAK,EAAC,QAAQ;MAAAzC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACpBjJ,OAAO,CAACwH,MAAM,gBACXzL,KAAA,CAAA0M,aAAA,CAAChL,eAAe;MACZiN,KAAK,EAAE;QAAET,KAAK,EAAE;MAAQ,CAAE;MAC1BQ,QAAQ,EAAC,OAAO;MAAA7B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACnB,CAAC,gBAEFlN,KAAA,CAAA0M,aAAA,CAAC/K,UAAU;MACPgN,KAAK,EAAE;QAAET,KAAK,EAAE;MAAM,CAAE;MACxBQ,QAAQ,EAAC,OAAO;MAAA7B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACnB,CAEE,CAAC,eACZlN,KAAA,CAAA0M,aAAA,CAAC/L,SAAS;MAAC2O,KAAK,EAAC,QAAQ;MAAAzC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrBlN,KAAA,CAAA0M,aAAA,CAACnL,UAAU;MACP8N,IAAI,EAAC,OAAO;MACZa,QAAQ,EAAE,CAACjM,OAAO,CAACwH,MAAO;MAC1B+C,OAAO,EAAEA,CAAA,KAAM;QACXlH,gBAAgB,CAACrD,OAAO,CAAC;QACzBmD,qBAAqB,CAAC,IAAI,CAAC;QAC3B;MACJ,CAAE;MAAAyF,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEDjJ,OAAO,CAACkM,OAAO,KAAK,UAAU,iBAAKnQ,KAAA,CAAA0M,aAAA,CAACvL,QAAQ;MAACwN,KAAK,EAAE;QAAET,KAAK,EAAE;MAAQ,CAAE;MAAArB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAE,EAC3EjJ,OAAO,CAACkM,OAAO,KAAK,WAAW,iBAAKnQ,KAAA,CAAA0M,aAAA,CAACxL,SAAS;MAACyN,KAAK,EAAE;QAAET,KAAK,EAAE;MAAS,CAAE;MAAArB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAE,EAC9EjJ,OAAO,CAACkM,OAAO,KAAK,UAAU,iBAAKnQ,KAAA,CAAA0M,aAAA,CAACzL,QAAQ;MAAC0N,KAAK,EAAE;QAAET,KAAK,EAAE;MAAO,CAAE;MAAArB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACjE,CAAC,eAEblN,KAAA,CAAA0M,aAAA,CAACnL,UAAU;MACP8N,IAAI,EAAC,OAAO;MACZb,OAAO,EAAEA,CAAA,KACLrD,gBAAgB,CAAClH,OAAO,CAACI,EAAE,CAC9B;MAAAwI,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAEDlN,KAAA,CAAA0M,aAAA,CAACjL,QAAQ;MAACyM,KAAK,EAAC,WAAW;MAAArB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACrB,CAAC,eACblN,KAAA,CAAA0M,aAAA,CAACnL,UAAU;MACP8N,IAAI,EAAC,OAAO;MACZb,OAAO,EACHvK,OAAO,CAACwH,MAAM,GACR,MAAM;QACJ7E,cAAc,CAAC,IAAI,CAAC;QACpBJ,kBAAkB,CACdvC,OACJ,CAAC;MACL,CAAC,GACC,MAAM;QACJ2C,cAAc,CAAC,IAAI,CAAC;QACpBF,oBAAoB,CAChBzC,OACJ,CAAC;MACL,CACP;MAAA4I,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEAjJ,OAAO,CAACwH,MAAM,gBACXzL,KAAA,CAAA0M,aAAA,CAAC9K,SAAS;MAACsM,KAAK,EAAC,WAAW;MAAArB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,gBAE/BlN,KAAA,CAAA0M,aAAA,CAAChL,eAAe;MAACwM,KAAK,EAAC,WAAW;MAAArB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAEhC,CAAC,eACblN,KAAA,CAAA0M,aAAA,CAAClK,GAAG;MACA4N,IAAI,EAAEhL,IAAI,CAAC4J,OAAQ;MACnBqB,OAAO,EAAC,6BAA6B;MACrCC,GAAG,EAAEA,CAAA,kBACDtQ,KAAA,CAAA0M,aAAA,CAACnL,UAAU;QACP8N,IAAI,EAAC,OAAO;QACZb,OAAO,EAAGnC,CAAC,IAAK;UACZzF,cAAc,CAAC,IAAI,CAAC;UACpBR,kBAAkB,CACdnC,OACJ,CAAC;QACL,CAAE;QAAA4I,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAEFlN,KAAA,CAAA0M,aAAA,CAAClL,iBAAiB;QAAC0M,KAAK,EAAC,WAAW;QAAArB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAC9B,CACd;MAAAL,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACL,CACM,CACL,CAAC;EAAA,CACd,CAAC,EACD5H,OAAO,iBAAItF,KAAA,CAAA0M,aAAA,CAAC5K,gBAAgB;IAACyO,MAAM;IAACC,OAAO,EAAE,CAAE;IAAA3D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACpD,CACK,CACR,CACJ,CACK,CAAC;AAEzB,CAAC;AAED,eAAejI,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}