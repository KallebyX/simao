{"ast":null,"code":"var _jsxFileName = \"/workspaces/simao/whaticket/frontend/src/components/MomentsUser/index.js\";\nimport React, { Fragment, useContext, useEffect, useMemo, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { ReportProblem, VisibilityOutlined } from \"@mui/icons-material\";\n// import { SocketContext } from \"../../context/Socket/SocketContext\";\nimport { toast } from \"react-toastify\";\nimport { yellow } from \"@mui/material/colors\";\nimport { Avatar, CardHeader, Divider, List, ListItem, ListItemAvatar, ListItemText, Paper, Typography, Card, makeStyles, Container, Badge, Grid, Tooltip } from \"@material-ui/core\";\nimport { format, isSameDay, parseISO } from \"date-fns\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { getBackendUrl } from \"../../config\";\nconst backendUrl = getBackendUrl();\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles\n  },\n  cardHeader: {\n    width: \"380px\",\n    height: \"78px\",\n    padding: 10,\n    backgroundColor: \"#DCDCDC\"\n  },\n  cardHeaderPending: {\n    width: \"380px\",\n    height: \"78px\",\n    padding: 10,\n    backgroundColor: \"#C0C0C0\"\n  },\n  card: {\n    height: \"300px\",\n    width: \"380px\",\n    margin: \"3px\",\n    borderRadius: 5,\n    flex: 1,\n    maxHeight: \"100%\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n    borderTop: \"2px solid rgba(0, 0, 0, 0.12)\"\n  },\n  changeWarap: {\n    width: '380px',\n    padding: 0,\n    margin: 0\n  },\n  pending: {\n    color: yellow[600],\n    fontSize: '20px'\n  },\n  connectionTag: {\n    background: \"green\",\n    color: \"#FFF\",\n    marginRight: 1,\n    padding: 1,\n    fontWeight: 'bold',\n    // paddingLeft: 5,\n    // paddingRight: 5,\n    borderRadius: 3,\n    fontSize: \"0.6em\"\n    // whiteSpace: \"nowrap\"\n  },\n  lastMessageTime: {\n    justifySelf: \"flex-end\",\n    textAlign: \"right\",\n    position: \"relative\",\n    // top: -30,\n    marginRight: \"1px\",\n    color: grey[400]\n  },\n  lastMessageTimeUnread: {\n    justifySelf: \"flex-end\",\n    textAlign: \"right\",\n    position: \"relative\",\n    // top: -30,\n    color: \"green\",\n    fontWeight: \"bold\",\n    marginRight: \"1px\"\n  },\n  pending: {\n    color: yellow[600],\n    fontSize: '20px'\n  }\n}));\nconst DashboardManage = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  //   const socketManager = useContext(SocketContext);\n  const {\n    user,\n    socket\n  } = useContext(AuthContext);\n  const [tickets, setTickets] = useState([]);\n  const [update, setUpdate] = useState(false);\n  const [ticketNot, setTicketNot] = useState(0);\n  const companyId = user.companyId;\n  const userQueueIds = user.queues.map(q => q.id);\n  const [selectedQueueIds, setSelectedQueueIds] = useState(userQueueIds || []);\n  useEffect(() => {\n    (async () => {\n      try {\n        const {\n          data\n        } = await api.get(\"/usersMoments\");\n        console.log(data);\n        setTickets(data);\n        setUpdate(!update);\n      } catch (err) {\n        var _err$response;\n        if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) !== 500) {\n          toastError(err);\n        } else {\n          toast.error(`${i18n.t(\"frontEndErrors.getUsers\")}`);\n        }\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    const companyId = user.companyId;\n    console.log(\"socket painel\");\n    // const socket = socketManager.GetSocket();\n\n    // const onConnect = () => {\n    //   socket.emit(\"joinChatBox\", `${ticketId}`);\n    // }\n    const onAppMessage = data => {\n      if (data.action === \"create\" || data.action === \"update\" || data.action === \"delete\") {\n        (async () => {\n          try {\n            const {\n              data\n            } = await api.get(\"/usersMoments\");\n            setTickets(data);\n            setUpdate(!update);\n          } catch (err) {\n            var _err$response2;\n            if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) !== 500) {\n              toastError(err);\n            } else {\n              toast.error(`${i18n.t(\"frontEndErrors.getUsers\")}`);\n            }\n          }\n        })();\n      }\n    };\n\n    // socket.on(\"connect\", onConnect);\n    socket.on(`company-${companyId}-ticket`, onAppMessage);\n    socket.on(`company-${companyId}-appMessage`, onAppMessage);\n    return () => {\n      // socket.off(\"connect\", onConnect);\n      socket.off(`company-${companyId}-ticket`, onAppMessage);\n      socket.off(`company-${companyId}-appMessage`, onAppMessage);\n    };\n  }, [socket]);\n  const Moments = useMemo(() => {\n    // console.log(tickets)\n    if (tickets && tickets.length > 0) {\n      const ticketsByUser = tickets.reduce((userTickets, ticket) => {\n        const user = ticket.user;\n        if (user) {\n          const userIndex = userTickets.findIndex(group => group.user.id === user.id);\n          if (userIndex === -1) {\n            userTickets.push({\n              user,\n              userTickets: [ticket]\n            });\n          } else {\n            userTickets[userIndex].userTickets.push(ticket);\n          }\n        }\n        return userTickets;\n      }, []);\n      return ticketsByUser.map((group, index) => {\n        var _group$user, _group$userTickets;\n        return /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          padding: 20,\n          className: classes.main,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.changeWarap,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          elevation: 3,\n          className: classes.cardHeader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          style: {\n            maxWidth: '380px',\n            width: '100%'\n          },\n          avatar: /*#__PURE__*/React.createElement(Avatar, {\n            alt: `${group.user.profileImage}`,\n            src: group.user.profileImage ? `${backendUrl}/public/company${companyId}/user/${group.user.profileImage}` : null,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 27\n            }\n          }),\n          title: /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }\n          }, (group === null || group === void 0 ? void 0 : (_group$user = group.user) === null || _group$user === void 0 ? void 0 : _group$user.name) || \"Pendentes\", \" \", /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 62\n            }\n          }), `Atendimentos: ${(_group$userTickets = group.userTickets) === null || _group$userTickets === void 0 ? void 0 : _group$userTickets.length}`),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(Paper, {\n          square: true,\n          elevation: 1,\n          className: classes.card,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }\n        }, group.userTickets.map(ticket => {\n          var _ticket$contact, _ticket$contact$name, _ticket$contact2, _ticket$contact3, _ticket$lastMessage, _ticket$whatsapp, _ticket$queue, _ticket$queue2;\n          return /*#__PURE__*/React.createElement(List, {\n            style: {\n              paddingTop: 0\n            },\n            key: ticket.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(ListItem, {\n            dense: true,\n            button: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Avatar, {\n            alt: `${ticket.contact.urlPicture}`,\n            src: `${ticket.contact.urlPicture}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(ListItemText, {\n            disableTypography: true,\n            primary: (ticket === null || ticket === void 0 ? void 0 : (_ticket$contact = ticket.contact) === null || _ticket$contact === void 0 ? void 0 : (_ticket$contact$name = _ticket$contact.name) === null || _ticket$contact$name === void 0 ? void 0 : _ticket$contact$name.length) > 30 ? (ticket === null || ticket === void 0 ? void 0 : (_ticket$contact2 = ticket.contact) === null || _ticket$contact2 === void 0 ? void 0 : _ticket$contact2.name.substring(0, 25)) + '...' : ticket === null || ticket === void 0 ? void 0 : (_ticket$contact3 = ticket.contact) === null || _ticket$contact3 === void 0 ? void 0 : _ticket$contact3.name,\n            secondary: /*#__PURE__*/React.createElement(Fragment, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 27\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Typography, {\n              style: {\n                display: 'inline'\n              },\n              component: \"span\",\n              variant: \"body2\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 31\n              }\n            }, `${((_ticket$lastMessage = ticket.lastMessage) === null || _ticket$lastMessage === void 0 ? void 0 : _ticket$lastMessage.length) > 30 ? String(ticket.lastMessage).substring(0, 27) + '...' : ticket.lastMessage}`)), /*#__PURE__*/React.createElement(Badge, {\n              className: classes.connectionTag,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 29\n              }\n            }, ticket === null || ticket === void 0 ? void 0 : (_ticket$whatsapp = ticket.whatsapp) === null || _ticket$whatsapp === void 0 ? void 0 : _ticket$whatsapp.name), /*#__PURE__*/React.createElement(Badge, {\n              style: {\n                backgroundColor: ((_ticket$queue = ticket.queue) === null || _ticket$queue === void 0 ? void 0 : _ticket$queue.color) || \"#7c7c7c\"\n              },\n              className: classes.connectionTag,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 29\n              }\n            }, ((_ticket$queue2 = ticket.queue) === null || _ticket$queue2 === void 0 ? void 0 : _ticket$queue2.name.toUpperCase()) || \"SEM FILA\")),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 23\n            }\n          }), /*#__PURE__*/React.createElement(Typography, {\n            className: Number(ticket.unreadMessages) > 0 ? classes.lastMessageTimeUnread : classes.lastMessageTime,\n            component: \"span\",\n            variant: \"body2\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 23\n            }\n          }, isSameDay(parseISO(ticket.updatedAt), new Date()) ? /*#__PURE__*/React.createElement(React.Fragment, null, format(parseISO(ticket.updatedAt), \"HH:mm\")) : /*#__PURE__*/React.createElement(React.Fragment, null, format(parseISO(ticket.updatedAt), \"dd/MM/yyyy\"))), (user.profile === \"admin\" || ticket.userId === user.id) && /*#__PURE__*/React.createElement(Tooltip, {\n            title: \"Acessar Ticket\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(VisibilityOutlined, {\n            onClick: () => history.push(`/tickets/${ticket.uuid}`),\n            fontSize: \"small\",\n            style: {\n              color: grey[500],\n              cursor: \"pointer\",\n              marginRight: 5,\n              bottom: \"-15px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 27\n            }\n          }))), /*#__PURE__*/React.createElement(Divider, {\n            variant: \"inset\",\n            component: \"li\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 21\n            }\n          }));\n        })))));\n      });\n    } else {\n      return null;\n    }\n  }, [update]);\n  const MomentsPending = useMemo(() => {\n    if (tickets && tickets.length > 0) {\n      const pendingTickets = tickets.filter(ticket => !ticket.user);\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.main,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        padding: 2,\n        className: classes.changeWarap,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        elevation: 3,\n        className: classes.cardHeaderPending,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        style: {\n          maxWidth: '380px',\n          width: '100%'\n        },\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 27\n          }\n        }),\n        title: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 21\n          }\n        }, \"Pendentes\", /*#__PURE__*/React.createElement(ReportProblem, {\n          className: classes.pending,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 23\n          }\n        }, \"Atendimentos: \", pendingTickets === null || pendingTickets === void 0 ? void 0 : pendingTickets.length)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Paper, {\n        square: true,\n        elevation: 1,\n        className: classes.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }\n      }, pendingTickets.map(ticket => {\n        var _ticket$contact4, _ticket$lastMessage2, _ticket$whatsapp2, _ticket$queue3, _ticket$queue4;\n        return /*#__PURE__*/React.createElement(List, {\n          style: {\n            paddingTop: 0\n          },\n          key: ticket.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(ListItem, {\n          dense: true,\n          button: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Avatar, {\n          alt: `${ticket.contact.urlPicture}`,\n          src: `${ticket.contact.urlPicture}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(ListItemText, {\n          disableTypography: true,\n          primary: ticket === null || ticket === void 0 ? void 0 : (_ticket$contact4 = ticket.contact) === null || _ticket$contact4 === void 0 ? void 0 : _ticket$contact4.name,\n          secondary: /*#__PURE__*/React.createElement(Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            style: {\n              display: 'inline'\n            },\n            component: \"span\",\n            variant: \"body2\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 31\n            }\n          }, `${((_ticket$lastMessage2 = ticket.lastMessage) === null || _ticket$lastMessage2 === void 0 ? void 0 : _ticket$lastMessage2.length) > 30 ? String(ticket.lastMessage).substring(0, 27) + '...' : ticket.lastMessage}`)), /*#__PURE__*/React.createElement(Badge, {\n            className: classes.connectionTag,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }\n          }, ticket === null || ticket === void 0 ? void 0 : (_ticket$whatsapp2 = ticket.whatsapp) === null || _ticket$whatsapp2 === void 0 ? void 0 : _ticket$whatsapp2.name), /*#__PURE__*/React.createElement(Badge, {\n            style: {\n              backgroundColor: ((_ticket$queue3 = ticket.queue) === null || _ticket$queue3 === void 0 ? void 0 : _ticket$queue3.color) || \"#7c7c7c\"\n            },\n            className: classes.connectionTag,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }\n          }, ((_ticket$queue4 = ticket.queue) === null || _ticket$queue4 === void 0 ? void 0 : _ticket$queue4.name.toUpperCase()) || \"SEM FILA\")),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(Typography, {\n          className: Number(ticket.unreadMessages) > 0 ? classes.lastMessageTimeUnread : classes.lastMessageTime,\n          component: \"span\",\n          variant: \"body2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 23\n          }\n        }, isSameDay(parseISO(ticket.updatedAt), new Date()) ? /*#__PURE__*/React.createElement(React.Fragment, null, format(parseISO(ticket.updatedAt), \"HH:mm\")) : /*#__PURE__*/React.createElement(React.Fragment, null, format(parseISO(ticket.updatedAt), \"dd/MM/yyyy\")))), /*#__PURE__*/React.createElement(Divider, {\n          variant: \"inset\",\n          component: \"li\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 21\n          }\n        }));\n      })))));\n    } else {\n      return null;\n    }\n  }, [update]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }\n  }, Moments, MomentsPending));\n};\nexport default DashboardManage;","map":{"version":3,"names":["React","Fragment","useContext","useEffect","useMemo","useState","useHistory","api","i18n","toastError","AuthContext","ReportProblem","VisibilityOutlined","toast","yellow","Avatar","CardHeader","Divider","List","ListItem","ListItemAvatar","ListItemText","Paper","Typography","Card","makeStyles","Container","Badge","Grid","Tooltip","format","isSameDay","parseISO","grey","getBackendUrl","backendUrl","useStyles","theme","main","display","justifyContent","container","flexWrap","overflowY","scrollbarStyles","cardHeader","width","height","padding","backgroundColor","cardHeaderPending","card","margin","borderRadius","flex","maxHeight","borderTop","changeWarap","pending","color","fontSize","connectionTag","background","marginRight","fontWeight","lastMessageTime","justifySelf","textAlign","position","lastMessageTimeUnread","DashboardManage","classes","history","user","socket","tickets","setTickets","update","setUpdate","ticketNot","setTicketNot","companyId","userQueueIds","queues","map","q","id","selectedQueueIds","setSelectedQueueIds","data","get","console","log","err","_err$response","response","status","error","t","onAppMessage","action","_err$response2","on","off","Moments","length","ticketsByUser","reduce","userTickets","ticket","userIndex","findIndex","group","push","index","_group$user","_group$userTickets","createElement","item","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","elevation","style","maxWidth","avatar","alt","profileImage","src","title","name","square","_ticket$contact","_ticket$contact$name","_ticket$contact2","_ticket$contact3","_ticket$lastMessage","_ticket$whatsapp","_ticket$queue","_ticket$queue2","paddingTop","dense","button","contact","urlPicture","disableTypography","primary","substring","secondary","component","variant","lastMessage","String","whatsapp","queue","toUpperCase","Number","unreadMessages","updatedAt","Date","profile","userId","onClick","uuid","cursor","bottom","MomentsPending","pendingTickets","filter","_ticket$contact4","_ticket$lastMessage2","_ticket$whatsapp2","_ticket$queue3","_ticket$queue4","spacing"],"sources":["/workspaces/simao/whaticket/frontend/src/components/MomentsUser/index.js"],"sourcesContent":["import React, { Fragment, useContext, useEffect, useMemo, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport toastError from \"../../errors/toastError\";\n\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport {  ReportProblem, VisibilityOutlined } from \"@mui/icons-material\";\n// import { SocketContext } from \"../../context/Socket/SocketContext\";\nimport { toast } from \"react-toastify\";\nimport { yellow } from \"@mui/material/colors\";\nimport { Avatar, CardHeader, Divider, List, ListItem, ListItemAvatar, ListItemText, Paper, Typography, Card, makeStyles, Container, Badge, Grid, Tooltip } from \"@material-ui/core\";\nimport { format, isSameDay, parseISO } from \"date-fns\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { getBackendUrl } from \"../../config\";\n\nconst backendUrl = getBackendUrl();\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  cardHeader: {\n    width: \"380px\",\n    height: \"78px\",\n    padding: 10,\n    backgroundColor: \"#DCDCDC\",\n  },\n  cardHeaderPending: {\n    width: \"380px\",\n    height: \"78px\",\n    padding: 10,\n    backgroundColor: \"#C0C0C0\",\n  },\n  card: {\n    height: \"300px\",\n    width: \"380px\",\n    margin: \"3px\",\n    borderRadius: 5,\n    flex: 1,\n    maxHeight: \"100%\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n    borderTop: \"2px solid rgba(0, 0, 0, 0.12)\",\n  },\n  changeWarap: {\n    width: '380px',\n    padding: 0,\n    margin: 0\n  },\n  pending: {\n    color: yellow[600],\n    fontSize: '20px'\n  },\n  connectionTag: {\n    background: \"green\",\n    color: \"#FFF\",\n    marginRight: 1,\n    padding: 1,\n    fontWeight: 'bold',\n    // paddingLeft: 5,\n    // paddingRight: 5,\n    borderRadius: 3,\n    fontSize: \"0.6em\",\n    // whiteSpace: \"nowrap\"\n  },\n  lastMessageTime: {\n    justifySelf: \"flex-end\",\n    textAlign: \"right\",\n    position: \"relative\",\n    // top: -30,\n    marginRight: \"1px\",\n    color: grey[400],\n  },\n\n  lastMessageTimeUnread: {\n    justifySelf: \"flex-end\",\n    textAlign: \"right\",\n    position: \"relative\",\n    // top: -30,\n    color: \"green\",\n    fontWeight: \"bold\",\n    marginRight: \"1px\",\n  },\n  pending: {\n    color: yellow[600],\n    fontSize: '20px'\n  },\n}));\n\nconst DashboardManage = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  //   const socketManager = useContext(SocketContext);\n  const { user, socket } = useContext(AuthContext);\n\n  const [tickets, setTickets] = useState([]);\n  const [update, setUpdate] = useState(false);\n  const [ticketNot, setTicketNot] = useState(0);\n  const companyId = user.companyId;\n\n\n  const userQueueIds = user.queues.map((q) => q.id);\n  const [selectedQueueIds, setSelectedQueueIds] = useState(userQueueIds || []);\n\n \n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data } = await api.get(\"/usersMoments\");\n        console.log(data)\n        setTickets(data);\n        setUpdate(!update);\n      } catch (err) {\n        if (err.response?.status !== 500) {\n          toastError(err);\n        } else {\n          toast.error(`${i18n.t(\"frontEndErrors.getUsers\")}`);\n        }\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    const companyId = user.companyId;\n    console.log(\"socket painel\")\n    // const socket = socketManager.GetSocket();\n  \n    // const onConnect = () => {\n    //   socket.emit(\"joinChatBox\", `${ticketId}`);\n    // }\n    const onAppMessage = (data) => {\n      if (data.action === \"create\" || data.action === \"update\" || data.action === \"delete\") {\n        (async () => {\n          try {\n            const { data } = await api.get(\"/usersMoments\");\n            setTickets(data);\n            setUpdate(!update);\n          } catch (err) {\n            if (err.response?.status !== 500) {\n              toastError(err);\n            } else {\n              toast.error(`${i18n.t(\"frontEndErrors.getUsers\")}`);\n            }\n          }\n        })();\n      }\n    }\n  \n    // socket.on(\"connect\", onConnect);\n    socket.on(`company-${companyId}-ticket`, onAppMessage)\n    socket.on(`company-${companyId}-appMessage`, onAppMessage);\n  \n    return () => {\n      // socket.off(\"connect\", onConnect);\n      socket.off(`company-${companyId}-ticket`, onAppMessage)\n      socket.off(`company-${companyId}-appMessage`, onAppMessage);\n    };\n  }, [socket]);\n\n  const Moments = useMemo(() => {\n    // console.log(tickets)\n    if (tickets && tickets.length > 0) {\n      const ticketsByUser = tickets.reduce((userTickets, ticket) => {\n        const user = ticket.user;\n\n        if (user) {\n          const userIndex = userTickets.findIndex((group) => group.user.id === user.id);\n          if (userIndex === -1) {\n            userTickets.push({\n              user,\n              userTickets: [ticket],\n            });\n          } else {\n            userTickets[userIndex].userTickets.push(ticket);\n          }\n        }\n        return userTickets;\n      }, []);\n\n      return ticketsByUser.map((group, index) => (\n        <Grid item key={index}>\n          <div padding={20} className={classes.main} key={index}>\n            <div className={classes.changeWarap}>\n              <Paper elevation={3} className={classes.cardHeader}>\n                <CardHeader\n                  style={{ maxWidth: '380px', width: '100%' }}\n                  avatar={<Avatar alt={`${group.user.profileImage}`} src={group.user.profileImage ? `${backendUrl}/public/company${companyId}/user/${group.user.profileImage}` : null} />}\n                  title={(\n                    <span>{group?.user?.name || \"Pendentes\"} <br />\n                      {`Atendimentos: ${group.userTickets?.length}`}\n                    </span>\n                  )}\n                />\n              </Paper>\n              <Paper square elevation={1} className={classes.card}>\n                {group.userTickets.map((ticket) => (\n                  <List style={{ paddingTop: 0 }} key={ticket.id}>\n                    <ListItem dense button>\n                      <ListItemAvatar>\n                        <Avatar alt={`${ticket.contact.urlPicture}`} src={`${ticket.contact.urlPicture}`} />\n                      </ListItemAvatar>\n                      <ListItemText\n                        disableTypography\n                        primary={ticket?.contact?.name?.length > 30 ? ticket?.contact?.name.substring(0, 25) + '...' : ticket?.contact?.name}\n                        secondary={\n                          <Fragment>\n                            <div>\n                              <Typography\n                                style={{ display: 'inline' }}\n                                component=\"span\"\n                                variant=\"body2\"\n                              >\n                                {`${ticket.lastMessage?.length > 30 ? String(ticket.lastMessage).substring(0, 27) + '...' : ticket.lastMessage}`}\n                              </Typography>\n                            </div>\n                            <Badge className={classes.connectionTag}>{ticket?.whatsapp?.name}</Badge>\n                            <Badge style={{ backgroundColor: ticket.queue?.color || \"#7c7c7c\" }} className={classes.connectionTag}>{ticket.queue?.name.toUpperCase() || \"SEM FILA\"}</Badge>\n                          </Fragment>\n                        }\n                      />\n                      <Typography\n                        className={Number(ticket.unreadMessages) > 0 ? classes.lastMessageTimeUnread : classes.lastMessageTime}\n                        component=\"span\"\n                        variant=\"body2\"\n                      >\n                        {isSameDay(parseISO(ticket.updatedAt), new Date()) ? (\n                          <>{format(parseISO(ticket.updatedAt), \"HH:mm\")}</>\n                        ) : (\n                          <>{format(parseISO(ticket.updatedAt), \"dd/MM/yyyy\")}</>\n                        )}\n                      </Typography>\n                      {(user.profile === \"admin\" || ticket.userId === user.id) && (\n                        <Tooltip title=\"Acessar Ticket\">\n                          <VisibilityOutlined\n                            onClick={() => history.push(`/tickets/${ticket.uuid}`)}\n                            fontSize=\"small\"\n                            style={{\n                              color: grey[500],\n                              cursor: \"pointer\",\n                              marginRight: 5,\n                              bottom: \"-15px\"\n                            }}\n                          />\n                        </Tooltip>\n                      )}\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                  </List>\n                ))}\n              </Paper>\n            </div>\n          </div>\n        </Grid>\n      )\n      );\n    } else {\n      return null;\n    }\n  }, [update]);\n\n  const MomentsPending = useMemo(() => {\n    if (tickets && tickets.length > 0) {\n      const pendingTickets = tickets.filter((ticket) => !ticket.user);\n\n      return (\n        <Grid item >\n          <div className={classes.main}>\n            <div padding={2} className={classes.changeWarap}>\n              <Paper elevation={3} className={classes.cardHeaderPending}>\n                <CardHeader\n                  style={{ maxWidth: '380px', width: '100%' }}\n                  avatar={<Avatar />}\n                  title={(\n                    <span>{\"Pendentes\"}\n                      <ReportProblem className={classes.pending} />\n                      <div>\n                        Atendimentos: {pendingTickets?.length}\n                      </div>\n                    </span>\n                  )}\n                />\n              </Paper>\n              <Paper square elevation={1} className={classes.card}>\n                {pendingTickets.map((ticket) => (\n                  <List style={{ paddingTop: 0 }} key={ticket.id}>\n                    <ListItem dense button>\n                      <ListItemAvatar>\n                        <Avatar alt={`${ticket.contact.urlPicture}`} src={`${ticket.contact.urlPicture}`} />\n                      </ListItemAvatar>\n                      <ListItemText\n                        disableTypography\n                        primary={ticket?.contact?.name}\n                        secondary={\n                          <Fragment>\n                            <div>\n                              <Typography\n                                style={{ display: 'inline' }}\n                                component=\"span\"\n                                variant=\"body2\"\n                              >\n                                {`${ticket.lastMessage?.length > 30 ? String(ticket.lastMessage).substring(0, 27) + '...' : ticket.lastMessage}`}\n                              </Typography>\n                            </div>\n                            <Badge className={classes.connectionTag}>{ticket?.whatsapp?.name}</Badge>\n                            <Badge style={{ backgroundColor: ticket.queue?.color || \"#7c7c7c\" }} className={classes.connectionTag}>{ticket.queue?.name.toUpperCase() || \"SEM FILA\"}</Badge>\n                          </Fragment>\n                        }\n                      />\n                      <Typography\n                        className={Number(ticket.unreadMessages) > 0 ? classes.lastMessageTimeUnread : classes.lastMessageTime}\n                        component=\"span\"\n                        variant=\"body2\"\n                      >\n                        {isSameDay(parseISO(ticket.updatedAt), new Date()) ? (\n                          <>{format(parseISO(ticket.updatedAt), \"HH:mm\")}</>\n                        ) : (\n                          <>{format(parseISO(ticket.updatedAt), \"dd/MM/yyyy\")}</>\n                        )}\n                      </Typography>\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                  </List>\n                ))}\n              </Paper>\n            </div>\n          </div>\n        </Grid>\n      );\n    } else {\n      return null;\n    }\n  }, [update]);\n\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        {Moments}\n        {MomentsPending}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashboardManage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}