{"ast":null,"code":"var _jsxFileName = \"/workspaces/simao/whaticket/frontend/src/App.js\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport api from \"./services/api\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ptBR } from \"@material-ui/core/locale\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport ColorModeContext from \"./layout/themeContext\";\nimport { ActiveMenuProvider } from \"./context/ActiveMenuContext\";\nimport Favicon from \"react-favicon\";\nimport { getBackendUrl } from \"./config\";\nimport Routes from \"./routes\";\nimport defaultLogoLight from \"./assets/logo.png\";\nimport defaultLogoDark from \"./assets/logo-black.png\";\nimport defaultLogoFavicon from \"./assets/favicon.ico\";\nimport useSettings from \"./hooks/useSettings\";\nconst queryClient = new QueryClient();\nconst App = () => {\n  const [locale, setLocale] = useState();\n  const appColorLocalStorage = localStorage.getItem(\"primaryColorLight\") || localStorage.getItem(\"primaryColorDark\") || \"#065183\";\n  const appNameLocalStorage = localStorage.getItem(\"appName\") || \"\";\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const preferredTheme = window.localStorage.getItem(\"preferredTheme\");\n  const [mode, setMode] = useState(preferredTheme ? preferredTheme : prefersDarkMode ? \"dark\" : \"light\");\n  const [primaryColorLight, setPrimaryColorLight] = useState(appColorLocalStorage);\n  const [primaryColorDark, setPrimaryColorDark] = useState(appColorLocalStorage);\n  const [appLogoLight, setAppLogoLight] = useState(defaultLogoLight);\n  const [appLogoDark, setAppLogoDark] = useState(defaultLogoDark);\n  const [appLogoFavicon, setAppLogoFavicon] = useState(defaultLogoFavicon);\n  const [appName, setAppName] = useState(appNameLocalStorage);\n  const {\n    getPublicSetting\n  } = useSettings();\n  const colorMode = useMemo(() => ({\n    toggleColorMode: () => {\n      setMode(prevMode => {\n        const newMode = prevMode === \"light\" ? \"dark\" : \"light\";\n        window.localStorage.setItem(\"preferredTheme\", newMode); // Persistindo o tema no localStorage\n        return newMode;\n      });\n    },\n    setPrimaryColorLight,\n    setPrimaryColorDark,\n    setAppLogoLight,\n    setAppLogoDark,\n    setAppLogoFavicon,\n    setAppName,\n    appLogoLight,\n    appLogoDark,\n    appLogoFavicon,\n    appName,\n    mode\n  }), [appLogoLight, appLogoDark, appLogoFavicon, appName, mode]);\n  const theme = useMemo(() => createTheme({\n    scrollbarStyles: {\n      \"&::-webkit-scrollbar\": {\n        width: \"8px\",\n        height: \"8px\"\n      },\n      \"&::-webkit-scrollbar-thumb\": {\n        boxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\",\n        backgroundColor: mode === \"light\" ? primaryColorLight : primaryColorDark\n      }\n    },\n    scrollbarStylesSoft: {\n      \"&::-webkit-scrollbar\": {\n        width: \"8px\"\n      },\n      \"&::-webkit-scrollbar-thumb\": {\n        backgroundColor: mode === \"light\" ? \"#F3F3F3\" : \"#333333\"\n      }\n    },\n    palette: {\n      type: mode,\n      primary: {\n        main: mode === \"light\" ? primaryColorLight : primaryColorDark\n      },\n      textPrimary: mode === \"light\" ? primaryColorLight : primaryColorDark,\n      borderPrimary: mode === \"light\" ? primaryColorLight : primaryColorDark,\n      dark: {\n        main: mode === \"light\" ? \"#333333\" : \"#F3F3F3\"\n      },\n      light: {\n        main: mode === \"light\" ? \"#F3F3F3\" : \"#333333\"\n      },\n      fontColor: mode === \"light\" ? primaryColorLight : primaryColorDark,\n      tabHeaderBackground: mode === \"light\" ? \"#EEE\" : \"#666\",\n      optionsBackground: mode === \"light\" ? \"#fafafa\" : \"#333\",\n      fancyBackground: mode === \"light\" ? \"#fafafa\" : \"#333\",\n      total: mode === \"light\" ? \"#fff\" : \"#222\",\n      messageIcons: mode === \"light\" ? \"grey\" : \"#F3F3F3\",\n      inputBackground: mode === \"light\" ? \"#FFFFFF\" : \"#333\",\n      barraSuperior: mode === \"light\" ? primaryColorLight : \"#666\"\n    },\n    mode,\n    appLogoLight,\n    appLogoDark,\n    appLogoFavicon,\n    appName,\n    calculatedLogoDark: () => {\n      if (appLogoDark === defaultLogoDark && appLogoLight !== defaultLogoLight) {\n        return appLogoLight;\n      }\n      return appLogoDark;\n    },\n    calculatedLogoLight: () => {\n      if (appLogoDark !== defaultLogoDark && appLogoLight === defaultLogoLight) {\n        return appLogoDark;\n      }\n      return appLogoLight;\n    }\n  }, locale), [appLogoLight, appLogoDark, appLogoFavicon, appName, locale, mode, primaryColorDark, primaryColorLight]);\n  useEffect(() => {\n    const i18nlocale = localStorage.getItem(\"i18nextLng\");\n    const browserLocale = i18nlocale.substring(0, 2) + i18nlocale.substring(3, 5);\n    if (browserLocale === \"ptBR\") {\n      setLocale(ptBR);\n    }\n  }, []);\n  useEffect(() => {\n    window.localStorage.setItem(\"preferredTheme\", mode);\n  }, [mode]);\n  useEffect(() => {\n    console.log(\"|=========== handleSaveSetting ==========|\");\n    console.log(\"APP START\");\n    console.log(\"|========================================|\");\n    getPublicSetting(\"primaryColorLight\").then(color => {\n      setPrimaryColorLight(color || \"#0000FF\");\n    }).catch(error => {\n      console.log(\"Error reading setting\", error);\n    });\n    getPublicSetting(\"primaryColorDark\").then(color => {\n      setPrimaryColorDark(color || \"#39ACE7\");\n    }).catch(error => {\n      console.log(\"Error reading setting\", error);\n    });\n    getPublicSetting(\"appLogoLight\").then(file => {\n      setAppLogoLight(file ? getBackendUrl() + \"/public/\" + file : defaultLogoLight);\n    }).catch(error => {\n      console.log(\"Error reading setting\", error);\n    });\n    getPublicSetting(\"appLogoDark\").then(file => {\n      setAppLogoDark(file ? getBackendUrl() + \"/public/\" + file : defaultLogoDark);\n    }).catch(error => {\n      console.log(\"Error reading setting\", error);\n    });\n    getPublicSetting(\"appLogoFavicon\").then(file => {\n      setAppLogoFavicon(file ? getBackendUrl() + \"/public/\" + file : defaultLogoFavicon);\n    }).catch(error => {\n      console.log(\"Error reading setting\", error);\n    });\n    getPublicSetting(\"appName\").then(name => {\n      setAppName(name || \"Chat-flow\");\n    }).catch(error => {\n      console.log(\"!==== Erro ao carregar temas: ====!\", error);\n      setAppName(\"chat-flow\");\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    const root = document.documentElement;\n    root.style.setProperty(\"--primaryColor\", mode === \"light\" ? primaryColorLight : primaryColorDark);\n  }, [primaryColorLight, primaryColorDark, mode]);\n  useEffect(() => {\n    async function fetchVersionData() {\n      try {\n        const response = await api.get(\"/version\");\n        const {\n          data\n        } = response;\n        window.localStorage.setItem(\"frontendVersion\", data.version);\n      } catch (error) {\n        console.log(\"Error fetching data\", error);\n      }\n    }\n    fetchVersionData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Favicon, {\n    url: appLogoFavicon ? getBackendUrl() + \"/public/\" + appLogoFavicon : defaultLogoFavicon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ColorModeContext.Provider, {\n    value: {\n      colorMode\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QueryClientProvider, {\n    client: queryClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ActiveMenuProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }))))));\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useMemo","api","QueryClient","QueryClientProvider","ptBR","createTheme","ThemeProvider","useMediaQuery","ColorModeContext","ActiveMenuProvider","Favicon","getBackendUrl","Routes","defaultLogoLight","defaultLogoDark","defaultLogoFavicon","useSettings","queryClient","App","locale","setLocale","appColorLocalStorage","localStorage","getItem","appNameLocalStorage","prefersDarkMode","preferredTheme","window","mode","setMode","primaryColorLight","setPrimaryColorLight","primaryColorDark","setPrimaryColorDark","appLogoLight","setAppLogoLight","appLogoDark","setAppLogoDark","appLogoFavicon","setAppLogoFavicon","appName","setAppName","getPublicSetting","colorMode","toggleColorMode","prevMode","newMode","setItem","theme","scrollbarStyles","width","height","boxShadow","backgroundColor","scrollbarStylesSoft","palette","type","primary","main","textPrimary","borderPrimary","dark","light","fontColor","tabHeaderBackground","optionsBackground","fancyBackground","total","messageIcons","inputBackground","barraSuperior","calculatedLogoDark","calculatedLogoLight","i18nlocale","browserLocale","substring","console","log","then","color","catch","error","file","name","root","document","documentElement","style","setProperty","fetchVersionData","response","get","data","version","createElement","Fragment","url","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","client"],"sources":["/workspaces/simao/whaticket/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport api from \"./services/api\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ptBR } from \"@material-ui/core/locale\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport ColorModeContext from \"./layout/themeContext\";\nimport { ActiveMenuProvider } from \"./context/ActiveMenuContext\";\nimport Favicon from \"react-favicon\";\nimport { getBackendUrl } from \"./config\";\nimport Routes from \"./routes\";\nimport defaultLogoLight from \"./assets/logo.png\";\nimport defaultLogoDark from \"./assets/logo-black.png\";\nimport defaultLogoFavicon from \"./assets/favicon.ico\";\nimport useSettings from \"./hooks/useSettings\";\n\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  const [locale, setLocale] = useState();\n  const appColorLocalStorage = localStorage.getItem(\"primaryColorLight\") || localStorage.getItem(\"primaryColorDark\") || \"#065183\";\n  const appNameLocalStorage = localStorage.getItem(\"appName\") || \"\";\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const preferredTheme = window.localStorage.getItem(\"preferredTheme\");\n  const [mode, setMode] = useState(preferredTheme ? preferredTheme : prefersDarkMode ? \"dark\" : \"light\");\n  const [primaryColorLight, setPrimaryColorLight] = useState(appColorLocalStorage);\n  const [primaryColorDark, setPrimaryColorDark] = useState(appColorLocalStorage);\n  const [appLogoLight, setAppLogoLight] = useState(defaultLogoLight);\n  const [appLogoDark, setAppLogoDark] = useState(defaultLogoDark);\n  const [appLogoFavicon, setAppLogoFavicon] = useState(defaultLogoFavicon);\n  const [appName, setAppName] = useState(appNameLocalStorage);\n  const { getPublicSetting } = useSettings();\n\n  const colorMode = useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => {\n          const newMode = prevMode === \"light\" ? \"dark\" : \"light\";\n          window.localStorage.setItem(\"preferredTheme\", newMode); // Persistindo o tema no localStorage\n          return newMode;\n        });\n      },\n      setPrimaryColorLight,\n      setPrimaryColorDark,\n      setAppLogoLight,\n      setAppLogoDark,\n      setAppLogoFavicon,\n      setAppName,\n      appLogoLight,\n      appLogoDark,\n      appLogoFavicon,\n      appName,\n      mode,\n    }),\n    [appLogoLight, appLogoDark, appLogoFavicon, appName, mode]\n  );\n\n  const theme = useMemo(\n    () =>\n      createTheme(\n        {\n          scrollbarStyles: {\n            \"&::-webkit-scrollbar\": {\n              width: \"8px\",\n              height: \"8px\",\n            },\n            \"&::-webkit-scrollbar-thumb\": {\n              boxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\",\n              backgroundColor: mode === \"light\" ? primaryColorLight : primaryColorDark,\n            },\n          },\n          scrollbarStylesSoft: {\n            \"&::-webkit-scrollbar\": {\n              width: \"8px\",\n            },\n            \"&::-webkit-scrollbar-thumb\": {\n              backgroundColor: mode === \"light\" ? \"#F3F3F3\" : \"#333333\",\n            },\n          },\n          palette: {\n            type: mode,\n            primary: { main: mode === \"light\" ? primaryColorLight : primaryColorDark },\n            textPrimary: mode === \"light\" ? primaryColorLight : primaryColorDark,\n            borderPrimary: mode === \"light\" ? primaryColorLight : primaryColorDark,\n            dark: { main: mode === \"light\" ? \"#333333\" : \"#F3F3F3\" },\n            light: { main: mode === \"light\" ? \"#F3F3F3\" : \"#333333\" },\n            fontColor: mode === \"light\" ? primaryColorLight : primaryColorDark,\n            tabHeaderBackground: mode === \"light\" ? \"#EEE\" : \"#666\",\n            optionsBackground: mode === \"light\" ? \"#fafafa\" : \"#333\",\n            fancyBackground: mode === \"light\" ? \"#fafafa\" : \"#333\",\n            total: mode === \"light\" ? \"#fff\" : \"#222\",\n            messageIcons: mode === \"light\" ? \"grey\" : \"#F3F3F3\",\n            inputBackground: mode === \"light\" ? \"#FFFFFF\" : \"#333\",\n            barraSuperior: mode === \"light\" ? primaryColorLight : \"#666\",\n          },\n          mode,\n          appLogoLight,\n          appLogoDark,\n          appLogoFavicon,\n          appName,\n          calculatedLogoDark: () => {\n            if (appLogoDark === defaultLogoDark && appLogoLight !== defaultLogoLight) {\n              return appLogoLight;\n            }\n            return appLogoDark;\n          },\n          calculatedLogoLight: () => {\n            if (appLogoDark !== defaultLogoDark && appLogoLight === defaultLogoLight) {\n              return appLogoDark;\n            }\n            return appLogoLight;\n          },\n        },\n        locale\n      ),\n    [appLogoLight, appLogoDark, appLogoFavicon, appName, locale, mode, primaryColorDark, primaryColorLight]\n  );\n\n  useEffect(() => {\n    const i18nlocale = localStorage.getItem(\"i18nextLng\");\n    const browserLocale = i18nlocale.substring(0, 2) + i18nlocale.substring(3, 5);\n\n    if (browserLocale === \"ptBR\") {\n      setLocale(ptBR);\n    }\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"preferredTheme\", mode);\n  }, [mode]);\n\n  useEffect(() => {\n    console.log(\"|=========== handleSaveSetting ==========|\")\n    console.log(\"APP START\")\n    console.log(\"|========================================|\")\n   \n    \n    getPublicSetting(\"primaryColorLight\")\n      .then((color) => {\n        setPrimaryColorLight(color || \"#0000FF\");\n      })\n      .catch((error) => {\n        console.log(\"Error reading setting\", error);\n      });\n    getPublicSetting(\"primaryColorDark\")\n      .then((color) => {\n        setPrimaryColorDark(color || \"#39ACE7\");\n      })\n      .catch((error) => {\n        console.log(\"Error reading setting\", error);\n      });\n    getPublicSetting(\"appLogoLight\")\n      .then((file) => {\n        setAppLogoLight(file ? getBackendUrl() + \"/public/\" + file : defaultLogoLight);\n      })\n      .catch((error) => {\n        console.log(\"Error reading setting\", error);\n      });\n    getPublicSetting(\"appLogoDark\")\n      .then((file) => {\n        setAppLogoDark(file ? getBackendUrl() + \"/public/\" + file : defaultLogoDark);\n      })\n      .catch((error) => {\n        console.log(\"Error reading setting\", error);\n      });\n    getPublicSetting(\"appLogoFavicon\")\n      .then((file) => {\n        setAppLogoFavicon(file ? getBackendUrl() + \"/public/\" + file : defaultLogoFavicon);\n      })\n      .catch((error) => {\n        console.log(\"Error reading setting\", error);\n      });\n    getPublicSetting(\"appName\")\n      .then((name) => {\n        setAppName(name || \"Chat-flow\");\n      })\n      .catch((error) => {\n        console.log(\"!==== Erro ao carregar temas: ====!\", error);\n        setAppName(\"chat-flow\");\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const root = document.documentElement;\n    root.style.setProperty(\"--primaryColor\", mode === \"light\" ? primaryColorLight : primaryColorDark);\n  }, [primaryColorLight, primaryColorDark, mode]);\n\n  useEffect(() => {\n    async function fetchVersionData() {\n      try {\n        const response = await api.get(\"/version\");\n        const { data } = response;\n        window.localStorage.setItem(\"frontendVersion\", data.version);\n      } catch (error) {\n        console.log(\"Error fetching data\", error);\n      }\n    }\n    fetchVersionData();\n  }, []);\n\n  return (\n    <>\n      <Favicon url={appLogoFavicon ? getBackendUrl() + \"/public/\" + appLogoFavicon : defaultLogoFavicon} />\n      <ColorModeContext.Provider value={{ colorMode }}>\n        <ThemeProvider theme={theme}>\n          <QueryClientProvider client={queryClient}>\n            <ActiveMenuProvider>\n              <Routes />\n            </ActiveMenuProvider>\n          </QueryClientProvider>\n        </ThemeProvider>\n      </ColorModeContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}