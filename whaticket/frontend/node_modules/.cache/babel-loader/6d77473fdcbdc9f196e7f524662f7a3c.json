{"ast":null,"code":"\"use strict\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.jsx\nvar src_exports = {};\n__export(src_exports, {\n  default: () => src_default\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_react = require(\"react\");\nvar import_prop_types = __toESM(require(\"prop-types\"));\nvar DefaultCanvasSize = 16;\nvar linkElements = [];\nvar drawAlert = (context, {\n  fillColor,\n  text,\n  textColor,\n  canvasSize\n}) => {\n  const Padding = canvasSize / 5;\n  context.font = `bold ${canvasSize - Padding * 2}px arial`;\n  const w = Math.min(\n  // Take the text with if it's smaller than available space (eg: '2')\n  context.measureText(text).width,\n  // Or take the maximum size we'll force our text to fit in anyway (eg: '1000000')\n  canvasSize - Padding) + Padding;\n  const x = canvasSize - w;\n  const y = canvasSize / 2 - Padding;\n  const h = Padding + canvasSize / 2;\n  const r = Math.min(w / 2, h / 2);\n  context.beginPath();\n  context.moveTo(x + r, y);\n  context.arcTo(x + w, y, x + w, y + h, r);\n  context.arcTo(x + w, y + h, x, y + h, r);\n  context.arcTo(x, y + h, x, y, r);\n  context.arcTo(x, y, x + w, y, r);\n  context.closePath();\n  context.fillStyle = fillColor;\n  context.fill();\n  context.fillStyle = textColor;\n  context.textBaseline = \"bottom\";\n  context.textAlign = \"right\";\n  context.fillText(text, canvasSize - Padding / 2, canvasSize,\n  // This will prevent the text from going outside the favicon, instead it'll squeeze his with to fit in\n  canvasSize - Padding);\n};\nvar drawIcon = ({\n  alertCount,\n  alertFillColor,\n  alertTextColor,\n  callback,\n  renderOverlay,\n  url: src,\n  canvasSize\n}) => {\n  const img = document.createElement(\"img\");\n  img.crossOrigin = \"Anonymous\";\n  img.onload = function () {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvasSize;\n    canvas.height = canvasSize;\n    const context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, img.width, img.height);\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    if (alertCount) {\n      drawAlert(context, {\n        fillColor: alertFillColor,\n        textColor: alertTextColor,\n        text: alertCount,\n        canvasSize\n      });\n    }\n    if (renderOverlay) {\n      renderOverlay(canvas, context);\n    }\n    callback(context.canvas.toDataURL());\n  };\n  img.src = src;\n};\nvar updateHtmlIconLink = keepIconLink => {\n  if (typeof document === \"undefined\") {\n    return;\n  }\n  if (linkElements.length === 0) {\n    var head = document.getElementsByTagName(\"head\")[0];\n    const linkEl = document.createElement(\"link\");\n    linkEl.type = \"image/x-icon\";\n    linkEl.rel = \"icon\";\n    const linkApple = document.createElement(\"link\");\n    linkApple.rel = \"apple-touch-icon\";\n    linkElements.push(linkEl, linkApple);\n    var links = head.getElementsByTagName(\"link\");\n    for (var i = links.length; --i >= 0;) {\n      if (/\\bicon\\b/i.test(links[i].getAttribute(\"rel\")) && !keepIconLink(links[i])) {\n        head.removeChild(links[i]);\n      }\n    }\n    linkElements.forEach(el => head.appendChild(el));\n  }\n};\nvar Favicon = ({\n  iconSize,\n  alertCount,\n  alertFillColor,\n  alertTextColor,\n  animated,\n  animationDelay,\n  keepIconLink,\n  renderOverlay,\n  url\n}) => {\n  const animationIndex = (0, import_react.useRef)(0);\n  const animationTickIntervalId = (0, import_react.useRef)(null);\n  const [, updateState] = (0, import_react.useState)();\n  const forceUpdate = (0, import_react.useCallback)(() => updateState({}), []);\n  const onAnimationTick = (0, import_react.useCallback)(() => {\n    updateHtmlIconLink(keepIconLink);\n    animationIndex.current = (animationIndex.current + 1) % url.length;\n    forceUpdate();\n  }, [forceUpdate, keepIconLink, url]);\n  (0, import_react.useEffect)(() => {\n    onAnimationTick();\n  }, [onAnimationTick]);\n  const isAnimated = url instanceof Array && animated;\n  (0, import_react.useEffect)(() => {\n    if (isAnimated) {\n      if (!animationTickIntervalId.current) {\n        const intervalId = setInterval(onAnimationTick, animationDelay);\n        animationTickIntervalId.current = intervalId;\n      }\n    } else {\n      if (animationTickIntervalId.current) {\n        clearInterval(animationTickIntervalId.current);\n        animationTickIntervalId.current = null;\n        updateHtmlIconLink(keepIconLink);\n      }\n    }\n  }, [animationDelay, isAnimated, keepIconLink, onAnimationTick, url]);\n  const currentUrl = isAnimated ? url[animationIndex.current] : url instanceof Array ? url[0] : url;\n  if (alertCount || renderOverlay) {\n    drawIcon({\n      alertCount,\n      alertFillColor,\n      alertTextColor,\n      callback: url2 => {\n        linkElements.forEach(el => el.href = url2);\n      },\n      renderOverlay,\n      url: currentUrl,\n      canvasSize: iconSize\n    });\n  } else {\n    linkElements.forEach(el => el.href = currentUrl);\n  }\n  return null;\n};\nFavicon.defaultProps = {\n  iconSize: DefaultCanvasSize,\n  alertCount: null,\n  alertFillColor: \"red\",\n  alertTextColor: \"white\",\n  animated: true,\n  animationDelay: 500,\n  keepIconLink: () => false,\n  renderOverlay: null,\n  url: null\n};\nFavicon.propTypes = {\n  iconSize: import_prop_types.default.number,\n  alertCount: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string]),\n  alertFillColor: import_prop_types.default.string,\n  alertTextColor: import_prop_types.default.string,\n  animated: import_prop_types.default.bool,\n  animationDelay: import_prop_types.default.number,\n  keepIconLink: import_prop_types.default.func,\n  renderOverlay: import_prop_types.default.func,\n  url: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.string), import_prop_types.default.string]).isRequired\n};\nvar src_default = Favicon;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {});\nmodule.exports = module.exports.default;","map":{"version":3,"sources":["../src/index.jsx"],"names":["url"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst DefaultCanvasSize = 16\nconst linkElements = []\n\nconst drawAlert = (context, { fillColor, text, textColor, canvasSize }) => {\n  // Allow same looking padding over differents iconSizes\n  const Padding = canvasSize / 5\n  // Allow readable text across differnts iconSizes\n  context.font = `bold ${canvasSize - Padding * 2}px arial`\n\n  const w =\n    Math.min(\n      // Take the text with if it's smaller than available space (eg: '2')\n      context.measureText(text).width,\n      // Or take the maximum size we'll force our text to fit in anyway (eg: '1000000')\n      canvasSize - Padding\n    ) + Padding\n\n  const x = canvasSize - w\n  const y = canvasSize / 2 - Padding\n  const h = Padding + canvasSize / 2\n  const r = Math.min(w / 2, h / 2)\n\n  context.beginPath()\n  context.moveTo(x + r, y)\n  context.arcTo(x + w, y, x + w, y + h, r)\n  context.arcTo(x + w, y + h, x, y + h, r)\n  context.arcTo(x, y + h, x, y, r)\n  context.arcTo(x, y, x + w, y, r)\n  context.closePath()\n  context.fillStyle = fillColor\n  context.fill()\n  context.fillStyle = textColor\n  context.textBaseline = 'bottom'\n  context.textAlign = 'right'\n  context.fillText(\n    text,\n    canvasSize - Padding / 2,\n    canvasSize,\n    // This will prevent the text from going outside the favicon, instead it'll squeeze his with to fit in\n    canvasSize - Padding\n  )\n}\n\nconst drawIcon = ({\n  alertCount,\n  alertFillColor,\n  alertTextColor,\n  callback,\n  renderOverlay,\n  url: src,\n  canvasSize,\n}) => {\n  const img = document.createElement('img')\n  img.crossOrigin = 'Anonymous'\n  img.onload = function () {\n    const canvas = document.createElement('canvas')\n    canvas.width = canvasSize\n    canvas.height = canvasSize\n\n    const context = canvas.getContext('2d')\n    context.clearRect(0, 0, img.width, img.height)\n    context.drawImage(img, 0, 0, canvas.width, canvas.height)\n\n    if (alertCount) {\n      drawAlert(context, {\n        fillColor: alertFillColor,\n        textColor: alertTextColor,\n        text: alertCount,\n        canvasSize,\n      })\n    }\n\n    if (renderOverlay) {\n      renderOverlay(canvas, context)\n    }\n    callback(context.canvas.toDataURL())\n  }\n  img.src = src\n}\n\nconst updateHtmlIconLink = (keepIconLink) => {\n  if (typeof document === 'undefined') {\n    return\n  }\n\n  if (linkElements.length === 0) {\n    var head = document.getElementsByTagName('head')[0]\n\n    const linkEl = document.createElement('link')\n    linkEl.type = 'image/x-icon'\n    linkEl.rel = 'icon'\n\n    const linkApple = document.createElement('link')\n    linkApple.rel = 'apple-touch-icon'\n\n    linkElements.push(linkEl, linkApple)\n\n    // remove existing favicons\n    var links = head.getElementsByTagName('link')\n    for (var i = links.length; --i >= 0; ) {\n      if (\n        /\\bicon\\b/i.test(links[i].getAttribute('rel')) &&\n        !keepIconLink(links[i])\n      ) {\n        head.removeChild(links[i])\n      }\n    }\n\n    linkElements.forEach((el) => head.appendChild(el))\n  }\n}\n\nconst Favicon = ({\n  iconSize,\n  alertCount,\n  alertFillColor,\n  alertTextColor,\n  animated,\n  animationDelay,\n  keepIconLink,\n  renderOverlay,\n  url,\n}) => {\n  const animationIndex = useRef(0)\n  const animationTickIntervalId = useRef(null)\n\n  const [, updateState] = useState()\n  const forceUpdate = useCallback(() => updateState({}), [])\n\n  const onAnimationTick = useCallback(() => {\n    updateHtmlIconLink(keepIconLink)\n    animationIndex.current = (animationIndex.current + 1) % url.length\n    forceUpdate()\n  }, [forceUpdate, keepIconLink, url])\n\n  // Perform initial favicon update\n  useEffect(() => {\n    onAnimationTick()\n  }, [onAnimationTick])\n\n  const isAnimated = url instanceof Array && animated\n\n  useEffect(() => {\n    if (isAnimated) {\n      if (!animationTickIntervalId.current) {\n        const intervalId = setInterval(onAnimationTick, animationDelay)\n        animationTickIntervalId.current = intervalId\n      }\n    } else {\n      if (animationTickIntervalId.current) {\n        clearInterval(animationTickIntervalId.current)\n        animationTickIntervalId.current = null\n        updateHtmlIconLink(keepIconLink)\n      }\n    }\n  }, [animationDelay, isAnimated, keepIconLink, onAnimationTick, url])\n\n  const currentUrl = isAnimated\n    ? url[animationIndex.current]\n    : url instanceof Array\n    ? url[0]\n    : url\n\n  if (alertCount || renderOverlay) {\n    drawIcon({\n      alertCount,\n      alertFillColor,\n      alertTextColor,\n      callback: (url) => {\n        linkElements.forEach((el) => (el.href = url))\n      },\n      renderOverlay,\n      url: currentUrl,\n      canvasSize: iconSize,\n    })\n  } else {\n    linkElements.forEach((el) => (el.href = currentUrl))\n  }\n\n  return null\n}\n\nFavicon.defaultProps = {\n  iconSize: DefaultCanvasSize,\n  alertCount: null,\n  alertFillColor: 'red',\n  alertTextColor: 'white',\n  animated: true,\n  animationDelay: 500,\n  keepIconLink: () => false,\n  renderOverlay: null,\n  url: null,\n}\n\nFavicon.propTypes = {\n  iconSize: PropTypes.number,\n  alertCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  alertFillColor: PropTypes.string,\n  alertTextColor: PropTypes.string,\n  animated: PropTypes.bool,\n  animationDelay: PropTypes.number,\n  keepIconLink: PropTypes.func,\n  renderOverlay: PropTypes.func,\n  url: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]).isRequired,\n}\n\nexport default Favicon\n"]},"metadata":{},"sourceType":"script"}