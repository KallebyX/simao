{"ast":null,"code":"import { createContext } from \"react\";\nimport openSocket from \"socket.io-client\";\n// import config from \"../../services/config\";\n\nconst socketManager = {\n  currentSocket: null,\n  GetSocket: function () {\n    const publicToken = localStorage.getItem(\"public-token\");\n    if (publicToken !== this.currentToken) {\n      if (this.currentSocket) {\n        this.currentSocket.disconnect();\n      }\n      this.currentToken = publicToken;\n      this.currentSocket = openSocket(process.env.REACT_APP_BACKEND_URL, {\n        transports: [\"websocket\"],\n        pingTimeout: 18000,\n        pingInterval: 18000,\n        query: publicToken ? {\n          token: publicToken\n        } : {}\n        // auth: publicToken ? { token: publicToken } : {},\n      });\n    }\n    return this.currentSocket;\n  },\n  onConnect: function (callbackConnect) {\n    if (this.currentSocket && this.currentSocket.connected) {\n      callbackConnect();\n    }\n    this.currentSocket.on(\"connect\", callbackConnect);\n  }\n};\nconst SocketContext = createContext();\nexport { SocketContext, socketManager };","map":{"version":3,"names":["createContext","openSocket","socketManager","currentSocket","GetSocket","publicToken","localStorage","getItem","currentToken","disconnect","process","env","REACT_APP_BACKEND_URL","transports","pingTimeout","pingInterval","query","token","onConnect","callbackConnect","connected","on","SocketContext"],"sources":["/workspaces/simao/whaticket/frontend/src/context/Socket/SocketContext.js"],"sourcesContent":["import { createContext } from \"react\";\nimport openSocket from \"socket.io-client\";\n// import config from \"../../services/config\";\n\nconst socketManager = {\n\tcurrentSocket: null,\n\n\tGetSocket: function () {\n\t\tconst publicToken = localStorage.getItem(\"public-token\");\n\n\t\tif (publicToken !== this.currentToken) {\n\t\t\tif (this.currentSocket) {\n\t\t\t\tthis.currentSocket.disconnect();\n\t\t\t}\n\n\t\t\tthis.currentToken = publicToken;\n\t\t\tthis.currentSocket = openSocket(process.env.REACT_APP_BACKEND_URL, {\n\t\t\t\ttransports: [\"websocket\"],\n\t\t\t\tpingTimeout: 18000,\n\t\t\t\tpingInterval: 18000,\n\t\t\t\tquery: publicToken ? { token: publicToken } : {},\n\t\t\t\t// auth: publicToken ? { token: publicToken } : {},\n\t\t\t});\n\t\t}\n\t\treturn this.currentSocket;\n\t},\n\n\tonConnect: function (callbackConnect) {\n\t\tif (this.currentSocket && this.currentSocket.connected) {\n\t\t\tcallbackConnect();\n\t\t}\n\t\tthis.currentSocket.on(\"connect\", callbackConnect);\n\t},\n};\n\nconst SocketContext = createContext()\n\nexport { SocketContext, socketManager };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,OAAOC,UAAU,MAAM,kBAAkB;AACzC;;AAEA,MAAMC,aAAa,GAAG;EACrBC,aAAa,EAAE,IAAI;EAEnBC,SAAS,EAAE,SAAAA,CAAA,EAAY;IACtB,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAExD,IAAIF,WAAW,KAAK,IAAI,CAACG,YAAY,EAAE;MACtC,IAAI,IAAI,CAACL,aAAa,EAAE;QACvB,IAAI,CAACA,aAAa,CAACM,UAAU,CAAC,CAAC;MAChC;MAEA,IAAI,CAACD,YAAY,GAAGH,WAAW;MAC/B,IAAI,CAACF,aAAa,GAAGF,UAAU,CAACS,OAAO,CAACC,GAAG,CAACC,qBAAqB,EAAE;QAClEC,UAAU,EAAE,CAAC,WAAW,CAAC;QACzBC,WAAW,EAAE,KAAK;QAClBC,YAAY,EAAE,KAAK;QACnBC,KAAK,EAAEX,WAAW,GAAG;UAAEY,KAAK,EAAEZ;QAAY,CAAC,GAAG,CAAC;QAC/C;MACD,CAAC,CAAC;IACH;IACA,OAAO,IAAI,CAACF,aAAa;EAC1B,CAAC;EAEDe,SAAS,EAAE,SAAAA,CAAUC,eAAe,EAAE;IACrC,IAAI,IAAI,CAAChB,aAAa,IAAI,IAAI,CAACA,aAAa,CAACiB,SAAS,EAAE;MACvDD,eAAe,CAAC,CAAC;IAClB;IACA,IAAI,CAAChB,aAAa,CAACkB,EAAE,CAAC,SAAS,EAAEF,eAAe,CAAC;EAClD;AACD,CAAC;AAED,MAAMG,aAAa,GAAGtB,aAAa,CAAC,CAAC;AAErC,SAASsB,aAAa,EAAEpB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}