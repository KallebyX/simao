{"ast":null,"code":"var _jsxFileName = \"/workspaces/simao/whaticket/frontend/src/components/TagsContainer/index.js\";\nimport { Chip, Paper, TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { isArray, isString } from \"lodash\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nexport function TagsContainer({\n  contact\n}) {\n  const [tags, setTags] = useState([]);\n  const [selecteds, setSelecteds] = useState([]);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    if (isMounted.current) {\n      loadTags().then(() => {\n        if (Array.isArray(contact.tags)) {\n          setSelecteds(contact.tags);\n        } else {\n          setSelecteds([]);\n        }\n      });\n    }\n  }, [contact]);\n  const createTag = async data => {\n    try {\n      const {\n        data: responseData\n      } = await api.post(`/tags`, data);\n      return responseData;\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  const loadTags = async () => {\n    try {\n      const {\n        data\n      } = await api.get(`/tags/list`, {\n        params: {\n          kanban: 0\n        }\n      });\n      setTags(data);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  const syncTags = async data => {\n    try {\n      const {\n        data: responseData\n      } = await api.post(`/tags/sync`, data);\n      return responseData;\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  const onChange = async (value, reason) => {\n    let optionsChanged = [];\n    if (reason === 'create-option') {\n      if (isArray(value)) {\n        for (let item of value) {\n          if (item.length < 3) {\n            toastError(\"Tag muito curta!\");\n            return;\n          }\n          if (isString(item)) {\n            const newTag = await createTag({\n              name: item,\n              kanban: 0,\n              color: getRandomHexColor()\n            });\n            optionsChanged.push(newTag);\n          } else {\n            optionsChanged.push(item);\n          }\n        }\n      }\n      await loadTags();\n    } else {\n      optionsChanged = value;\n    }\n    setSelecteds(optionsChanged);\n    await syncTags({\n      contactId: contact.id,\n      tags: optionsChanged\n    });\n  };\n  function getRandomHexColor() {\n    // Gerar valores aleatórios para os componentes de cor\n    const red = Math.floor(Math.random() * 256); // Valor entre 0 e 255\n    const green = Math.floor(Math.random() * 256); // Valor entre 0 e 255\n    const blue = Math.floor(Math.random() * 256); // Valor entre 0 e 255\n\n    // Converter os componentes de cor em uma cor hexadecimal\n    const hexColor = `#${red.toString(16).padStart(2, '0')}${green.toString(16).padStart(2, '0')}${blue.toString(16).padStart(2, '0')}`;\n    return hexColor;\n  }\n  return /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      padding: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    multiple: true,\n    size: \"small\",\n    options: tags,\n    value: selecteds,\n    freeSolo: true,\n    onChange: (e, v, r) => onChange(v, r),\n    getOptionLabel: option => option.name,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/React.createElement(Chip, Object.assign({\n      variant: \"outlined\",\n      style: {\n        backgroundColor: option.color || '#eee',\n        color: \"#FFF\",\n        marginRight: 1,\n        padding: 1,\n        fontWeight: 'bold',\n        paddingLeft: 5,\n        paddingRight: 5,\n        borderRadius: 3,\n        fontSize: \"0.8em\",\n        whiteSpace: \"nowrap\"\n      },\n      label: option.name\n    }, getTagProps({\n      index\n    }), {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }))),\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      placeholder: \"Tags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    })),\n    PaperComponent: ({\n      children\n    }) => /*#__PURE__*/React.createElement(Paper, {\n      style: {\n        width: 400,\n        marginLeft: 6\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, children),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"names":["Chip","Paper","TextField","Autocomplete","React","useEffect","useRef","useState","isArray","isString","toastError","api","TagsContainer","contact","tags","setTags","selecteds","setSelecteds","isMounted","current","loadTags","then","Array","createTag","data","responseData","post","err","get","params","kanban","syncTags","onChange","value","reason","optionsChanged","item","length","newTag","name","color","getRandomHexColor","push","contactId","id","red","Math","floor","random","green","blue","hexColor","toString","padStart","createElement","style","padding","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","multiple","size","options","freeSolo","e","v","r","getOptionLabel","option","renderTags","getTagProps","map","index","Object","assign","variant","backgroundColor","marginRight","fontWeight","paddingLeft","paddingRight","borderRadius","fontSize","whiteSpace","label","renderInput","placeholder","PaperComponent","children","width","marginLeft"],"sources":["/workspaces/simao/whaticket/frontend/src/components/TagsContainer/index.js"],"sourcesContent":["import { Chip, Paper, TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { isArray, isString } from \"lodash\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\n\nexport function TagsContainer({ contact }) {\n\n    const [tags, setTags] = useState([]);\n    const [selecteds, setSelecteds] = useState([]);\n    const isMounted = useRef(true);\n\n    useEffect(() => {\n        return () => {\n            isMounted.current = false\n        }\n    }, [])\n\n    useEffect(() => {\n        if (isMounted.current) {\n            loadTags().then(() => {\n                if (Array.isArray(contact.tags)) {\n                    setSelecteds(contact.tags);\n                } else {\n                    setSelecteds([]);\n                }\n            });\n        }\n    }, [contact]);\n\n    const createTag = async (data) => {\n        try {\n            const { data: responseData } = await api.post(`/tags`, data);\n            return responseData;\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const loadTags = async () => {\n        try {\n            const { data } = await api.get(`/tags/list`, \n            {params: { kanban: 0}\n        });\n            setTags(data);\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const syncTags = async (data) => {\n        try {\n            const { data: responseData } = await api.post(`/tags/sync`, data);\n            return responseData;\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const onChange = async (value, reason) => {\n        let optionsChanged = []\n        if (reason === 'create-option') {\n            if (isArray(value)) {\n                for (let item of value) {\n                    if (item.length < 3) {\n                        toastError(\"Tag muito curta!\");\n                        return;\n                    }\n                    if (isString(item)) {\n                        const newTag = await createTag({ name: item, kanban: 0, color: getRandomHexColor() })\n                        optionsChanged.push(newTag);\n                    } else {\n                        optionsChanged.push(item);\n                    }\n                }\n            }\n            await loadTags();\n        } else {\n            optionsChanged = value;\n        }\n        setSelecteds(optionsChanged);\n        await syncTags({ contactId: contact.id, tags: optionsChanged });\n    }\n\n    function getRandomHexColor() {\n        // Gerar valores aleatórios para os componentes de cor\n        const red = Math.floor(Math.random() * 256); // Valor entre 0 e 255\n        const green = Math.floor(Math.random() * 256); // Valor entre 0 e 255\n        const blue = Math.floor(Math.random() * 256); // Valor entre 0 e 255\n      \n        // Converter os componentes de cor em uma cor hexadecimal\n        const hexColor = `#${red.toString(16).padStart(2, '0')}${green.toString(16).padStart(2, '0')}${blue.toString(16).padStart(2, '0')}`;\n      \n        return hexColor;\n    }\n\n    return (\n        <Paper style={{ padding: 2 }}>\n            <Autocomplete\n                multiple\n                size=\"small\"\n                options={tags}\n                value={selecteds}\n                freeSolo\n                onChange={(e, v, r) => onChange(v, r)}\n                getOptionLabel={(option) => option.name}\n                renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                        <Chip\n                            variant=\"outlined\"\n                            style={{\n                                backgroundColor: option.color || '#eee',\n                                color: \"#FFF\",\n                                marginRight: 1,\n                                padding: 1,\n                                fontWeight: 'bold',\n                                paddingLeft: 5,\n                                paddingRight: 5,\n                                borderRadius: 3,\n                                fontSize: \"0.8em\",\n                                whiteSpace: \"nowrap\"\n                            }}\n                            label={option.name}\n                            {...getTagProps({ index })}\n                            size=\"small\"\n                        />\n                    ))\n                }\n                renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" placeholder=\"Tags\" />\n                )}\n                PaperComponent={({ children }) => (\n                    <Paper\n                        style={{ width: 400, marginLeft: 6 }}\n                    >\n                        {children}\n                    </Paper>\n                )}\n            />\n        </Paper>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}