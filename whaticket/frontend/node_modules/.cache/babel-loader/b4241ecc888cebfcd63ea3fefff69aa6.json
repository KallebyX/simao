{"ast":null,"code":"var _jsxFileName = \"/workspaces/simao/whaticket/frontend/src/components/TicketInfo/index.js\";\nimport React, { useState } from \"react\";\nimport { i18n } from \"../../translate/i18n\";\nimport { Avatar, CardHeader, Grid, TextField, Input, InputAdornment, InputLabel } from \"@material-ui/core\";\nimport { TagsKanbanContainer } from \"../TagsKanbanContainer\";\nconst TicketInfo = ({\n  contact,\n  ticket,\n  onClick\n}) => {\n  const [amount, setAmount] = useState(\"\");\n  const renderCardReader = () => {\n    return /*#__PURE__*/React.createElement(CardHeader, {\n      onClick: onClick,\n      style: {\n        cursor: \"pointer\"\n      },\n      titleTypographyProps: {\n        noWrap: true\n      },\n      subheaderTypographyProps: {\n        noWrap: true\n      },\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: contact === null || contact === void 0 ? void 0 : contact.urlPicture,\n        alt: \"contact_image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      }),\n      title: `${(contact === null || contact === void 0 ? void 0 : contact.name) || '(sem contato)'} #${ticket.id}`,\n      subheader: ticket.user && `${i18n.t(\"messagesList.header.assignedTo\")} ${ticket.user.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 4\n      }\n    });\n  };\n  const handleChange = event => {\n    const value = event.target.value;\n    setAmount(value);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    spacing: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, renderCardReader())));\n};\nexport default TicketInfo;","map":{"version":3,"names":["React","useState","i18n","Avatar","CardHeader","Grid","TextField","Input","InputAdornment","InputLabel","TagsKanbanContainer","TicketInfo","contact","ticket","onClick","amount","setAmount","renderCardReader","createElement","style","cursor","titleTypographyProps","noWrap","subheaderTypographyProps","avatar","src","urlPicture","alt","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","name","id","subheader","user","t","handleChange","event","value","target","Fragment","container","alignItems","spacing","item","xs"],"sources":["/workspaces/simao/whaticket/frontend/src/components/TicketInfo/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { i18n } from \"../../translate/i18n\";\nimport { Avatar, CardHeader, Grid, TextField, Input, InputAdornment, InputLabel } from \"@material-ui/core\";\nimport { TagsKanbanContainer } from \"../TagsKanbanContainer\";\n\nconst TicketInfo = ({ contact, ticket, onClick }) => {\n\tconst [amount, setAmount] = useState(\"\");\n\n\tconst renderCardReader = () => {\n\t\treturn (\n\t\t\t<CardHeader\n\t\t\t\tonClick={onClick}\n\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\ttitleTypographyProps={{ noWrap: true }}\n\t\t\t\tsubheaderTypographyProps={{ noWrap: true }}\n\t\t\t\tavatar={<Avatar src={contact?.urlPicture} alt=\"contact_image\" />}\n\t\t\t\ttitle={`${contact?.name || '(sem contato)'} #${ticket.id}`}\n\t\t\t\tsubheader={\n\t\t\t\t\tticket.user &&\n\t\t\t\t\t`${i18n.t(\"messagesList.header.assignedTo\")} ${ticket.user.name}`\n\t\t\t\t}\n\n\t\t\t/>\n\t\t);\n\t}\n\n\tconst handleChange = (event) => {\n\t\tconst value = event.target.value;\n\n\t\tsetAmount(value);\n\t}\n\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid container alignItems=\"center\" spacing={10}>\n\t\t\t\t{/* Conteúdo do contato à esquerda */}\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t{renderCardReader()}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default TicketInfo;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,MAAM,EAAEC,UAAU,EAAEC,IAAI,EAAEC,SAAS,EAAEC,KAAK,EAAEC,cAAc,EAAEC,UAAU,QAAQ,mBAAmB;AAC1G,SAASC,mBAAmB,QAAQ,wBAAwB;AAE5D,MAAMC,UAAU,GAAGA,CAAC;EAAEC,OAAO;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EACpD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM;IAC9B,oBACCjB,KAAA,CAAAkB,aAAA,CAACd,UAAU;MACVU,OAAO,EAAEA,OAAQ;MACjBK,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAU,CAAE;MAC7BC,oBAAoB,EAAE;QAAEC,MAAM,EAAE;MAAK,CAAE;MACvCC,wBAAwB,EAAE;QAAED,MAAM,EAAE;MAAK,CAAE;MAC3CE,MAAM,eAAExB,KAAA,CAAAkB,aAAA,CAACf,MAAM;QAACsB,GAAG,EAAEb,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEc,UAAW;QAACC,GAAG,EAAC,eAAe;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAE;MACjEC,KAAK,EAAE,GAAG,CAAAtB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEuB,IAAI,KAAI,eAAe,KAAKtB,MAAM,CAACuB,EAAE,EAAG;MAC3DC,SAAS,EACRxB,MAAM,CAACyB,IAAI,IACX,GAAGpC,IAAI,CAACqC,CAAC,CAAC,gCAAgC,CAAC,IAAI1B,MAAM,CAACyB,IAAI,CAACH,IAAI,EAC/D;MAAAP,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAED,CAAC;EAEJ,CAAC;EAED,MAAMO,YAAY,GAAIC,KAAK,IAAK;IAC/B,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAEhC1B,SAAS,CAAC0B,KAAK,CAAC;EACjB,CAAC;EAGD,oBACC1C,KAAA,CAAAkB,aAAA,CAAClB,KAAK,CAAC4C,QAAQ;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACdjC,KAAA,CAAAkB,aAAA,CAACb,IAAI;IAACwC,SAAS;IAACC,UAAU,EAAC,QAAQ;IAACC,OAAO,EAAE,EAAG;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE/CjC,KAAA,CAAAkB,aAAA,CAACb,IAAI;IAAC2C,IAAI;IAACC,EAAE,EAAE,CAAE;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACfhB,gBAAgB,CAAC,CACb,CACD,CACS,CAAC;AAEnB,CAAC;AAED,eAAeN,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}