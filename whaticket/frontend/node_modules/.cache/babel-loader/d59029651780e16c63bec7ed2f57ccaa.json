{"ast":null,"code":"var _jsxFileName = \"/workspaces/simao/whaticket/frontend/src/components/ButtonModal/index.js\";\nimport React, { useRef, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { Grid } from \"@material-ui/core\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    marginBottom: theme.spacing(2),\n    minWidth: 300\n  },\n  inputFile: {\n    display: 'none'\n  },\n  buttonFile: {\n    marginBottom: theme.spacing(2)\n  },\n  dialogTitleWrapper: {\n    position: 'relative'\n  },\n  primaryBar: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    height: '100%',\n    backgroundColor: theme.palette.primary.main,\n    zIndex: 1\n  },\n  dialogTitle: {\n    position: 'relative',\n    zIndex: 2,\n    color: 'white'\n  }\n}));\nconst ButtonModal = ({\n  modalOpen,\n  onClose,\n  ticketId\n}) => {\n  const classes = useStyles();\n  const isMounted = useRef(true);\n  const [loading, setLoading] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [inputList, setInputList] = useState([{\n    option: \"\"\n  }]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [buttonText, setButtonText] = useState(\"\");\n  const [copyText, setCopyText] = useState(\"\");\n  const [sendCALL, setSendCall] = useState(\"\");\n  const [sendURL, setSendURL] = useState(\"\");\n  const [imageBase64, setImageBase64] = useState('');\n  const [sendKey, setsendKey] = useState('');\n  const [sendkey_type, setsendkey_type] = useState('');\n  const [sendvalue, setsendvalue] = useState('');\n  const [sendmerchant_name, setsendmerchant_name] = useState('');\n  const handleSelectChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  const handleAddOption = () => {\n    setInputList([...inputList, {\n      option: \"\"\n    }]);\n  };\n  const handleRemoveOption = index => {\n    setInputList(prev => prev.filter((_, i) => i !== index));\n  };\n  const handleInputChange = (index, event) => {\n    const updatedInputs = [...inputList];\n    updatedInputs[index].option = event.target.value;\n    setInputList(updatedInputs);\n  };\n  const handleUploadListMessage = async (title, description, inputList, ticketId) => {\n    setLoading(true);\n    if (!ticketId || isNaN(ticketId)) {\n      console.error('ID do Ticket inválido:', ticketId);\n      toastError('ID do Ticket inválido.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const sections = [{\n        title: title || 'Opções',\n        rows: inputList.map((input, index) => ({\n          title: input.option,\n          rowId: (index + 1).toString()\n        }))\n      }];\n      const listMessage = {\n        title: `${title}\\n`,\n        text: `${description}\\n`,\n        buttonText: 'Clique aqui',\n        sections: sections\n      };\n      if (isMounted.current) {\n        await api.post(`/messages/lista/${ticketId}`, listMessage);\n      }\n    } catch (err) {\n      toastError(err);\n    } finally {\n      if (isMounted.current) {\n        setLoading(false);\n      }\n    }\n  };\n  const handleUploadCopy = async (title, description, buttonText, copyText, imageBase64, ticketId) => {\n    setLoading(true);\n    if (!ticketId || isNaN(ticketId)) {\n      console.error('ID do Ticket inválido:', ticketId);\n      toastError('ID do Ticket inválido.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const payload = {\n        image: imageBase64 ? imageBase64.replace(/^data:image\\/[a-zA-Z]+;base64,/, '') : '',\n        // Remove o prefixo\n        title: title,\n        description: description,\n        buttonText: buttonText,\n        copyText: copyText\n      };\n      console.log('PAYLOAD:', payload);\n      if (isMounted.current) {\n        await api.post(`/messages/copy/${ticketId}`, payload); // Envia a mensagem para a API\n      }\n    } catch (err) {\n      toastError(err);\n    } finally {\n      if (isMounted.current) {\n        setLoading(false);\n      }\n    }\n  };\n  const handleUploadCALL = async (title, description, buttonText, sendCALL, imageBase64, ticketId) => {\n    setLoading(true);\n    if (!ticketId || isNaN(ticketId)) {\n      console.error('ID do Ticket inválido:', ticketId);\n      toastError('ID do Ticket inválido.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const payload = {\n        image: imageBase64 ? imageBase64.replace(/^data:image\\/[a-zA-Z]+;base64,/, '') : '',\n        // Remove o prefixo\n        title: title,\n        // Título da mensagem\n        description: description,\n        // Descrição da mensagem\n        buttonText: buttonText,\n        // Texto do botão\n        copyText: sendCALL\n      };\n      if (isMounted.current) {\n        await api.post(`/messages/call/${ticketId}`, payload); // Envia a mensagem para a API\n      }\n    } catch (err) {\n      toastError(err);\n    } finally {\n      if (isMounted.current) {\n        setLoading(false);\n      }\n    }\n  };\n  const handleUploadURL = async (title, description, buttonText, sendURL, imageBase64, ticketId) => {\n    setLoading(true);\n    if (!ticketId || isNaN(ticketId)) {\n      console.error('ID do Ticket inválido:', ticketId);\n      toastError('ID do Ticket inválido.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const payload = {\n        image: imageBase64 ? imageBase64.replace(/^data:image\\/[a-zA-Z]+;base64,/, '') : '',\n        // Remove o prefixo\n        title: title || 'Botão copiar',\n        // Título da mensagem\n        description: description || 'Muito legal esses botões',\n        // Descrição da mensagem\n        buttonText: buttonText || 'Botão copiar',\n        // Texto do botão\n        copyText: sendURL || 'Texto padrão para copiar' // Texto para copiar\n      };\n      if (isMounted.current) {\n        await api.post(`/messages/URL/${ticketId}`, payload); // Envia a mensagem para a API\n      }\n    } catch (err) {\n      toastError(err);\n    } finally {\n      if (isMounted.current) {\n        setLoading(false);\n      }\n    }\n  };\n  const handleUploadPIX = async (title, sendvalue, sendkey_type, sendmerchant_name, sendKey, ticketId) => {\n    setLoading(true);\n    try {\n      // Verifica se o tipo de chave é PHONE e adiciona +55 ao sendKey\n      if (sendkey_type === 'PHONE' && !sendKey.startsWith('+55')) {\n        sendKey = '+55' + sendKey;\n      }\n      const payload = {\n        title: title,\n        sendvalue: sendvalue,\n        sendkey_type: sendkey_type,\n        sendmerchant_name: sendmerchant_name,\n        sendKey: sendKey\n      };\n      if (isMounted.current) {\n        await api.post(`/messages/PIX/${ticketId}`, payload);\n      }\n    } catch (err) {\n      toastError(err);\n    } finally {\n      if (isMounted.current) {\n        setLoading(false);\n      }\n    }\n  };\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImageBase64(reader.result);\n        //  console.log('Image Base64:', reader.result); // Log the Base64 string\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const createMessage = async () => {\n    console.log('createMessage chamada');\n    try {\n      if (selectedOption === \"Lista\") {\n        await handleUploadListMessage(title, description, inputList, ticketId);\n      } else if (selectedOption === \"Copia\") {\n        await handleUploadCopy(title, description, buttonText, copyText, imageBase64, ticketId);\n      } else if (selectedOption === \"Me Ligue\") {\n        await handleUploadCALL(title, description, buttonText, sendCALL, imageBase64, ticketId);\n      } else if (selectedOption === \"URL\") {\n        await handleUploadURL(title, description, buttonText, sendURL, imageBase64, ticketId);\n      } else if (selectedOption === \"PIX\") {\n        await handleUploadPIX(title, sendvalue, sendkey_type, sendmerchant_name, sendKey, ticketId);\n      } else {\n        let listMessage = null;\n        switch (selectedOption) {\n          default:\n            console.error('Opção não selecionada ou mensagem não gerada.');\n            return;\n        }\n      }\n\n      // Fecha o modal após processar a mensagem\n      onClose();\n    } catch (error) {\n      toastError('Erro ao processar a mensagem');\n    }\n  };\n  const renderContent = () => {\n    switch (selectedOption) {\n      case \"Lista\":\n        return /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"T\\xEDtulo\",\n          variant: \"outlined\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"Descri\\xE7\\xE3o\",\n          variant: \"outlined\",\n          multiline: true,\n          rows: 5,\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }\n        }, inputList.map((input, index) => /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          key: index,\n          spacing: 1,\n          alignItems: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: `Opção ${index + 1}`,\n          value: input.option,\n          onChange: e => handleInputChange(index, e),\n          variant: \"outlined\",\n          style: {\n            marginBottom: \"8px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => handleRemoveOption(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 21\n          }\n        }, \"X\")))), /*#__PURE__*/React.createElement(Button, {\n          onClick: handleAddOption,\n          color: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }\n        }, \"Adicionar nova op\\xE7\\xE3o\")));\n      case \"URL\":\n        return /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          accept: \"image/*\",\n          className: classes.inputFile // Certifique-se de que esta classe está definida\n          ,\n          id: \"input-file\" // Um ID único\n          ,\n          type: \"file\",\n          onChange: handleImageChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"input-file\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          component: \"span\",\n          className: classes.buttonFile // Certifique-se de que esta classe está definida\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }\n        }, \"Imagem\"))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"T\\xEDtulo\",\n          variant: \"outlined\",\n          value: title,\n          onChange: e => setTitle(e.target.value) // Campo para o título\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"Mensagem\",\n          variant: \"outlined\",\n          multiline: true,\n          rows: 5,\n          value: description,\n          onChange: e => setDescription(e.target.value) // Campo para a mensagem\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"Texto do bot\\xE3o\",\n          variant: \"outlined\",\n          value: buttonText,\n          onChange: e => setButtonText(e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"URL\",\n          variant: \"outlined\",\n          value: sendURL,\n          onChange: e => setSendURL(e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }\n        })));\n      case \"Copia\":\n        return /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          accept: \"image/*\",\n          className: classes.inputFile // Certifique-se de que esta classe está definida\n          ,\n          id: \"input-file\" // Um ID único\n          ,\n          type: \"file\",\n          onChange: handleImageChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"input-file\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }\n        }, \" \", /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          component: \"span\",\n          className: classes.buttonFile // Certifique-se de que esta classe está definida\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 17\n          }\n        }, \"Imagem\"))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"T\\xEDtulo\",\n          variant: \"outlined\",\n          value: title,\n          onChange: e => setTitle(e.target.value) // Campo para o título\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"Mensagem\",\n          variant: \"outlined\",\n          multiline: true,\n          rows: 5,\n          value: description,\n          onChange: e => setDescription(e.target.value) // Campo para a mensagem\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"Texto do bot\\xE3o\",\n          variant: \"outlined\",\n          value: buttonText,\n          onChange: e => setButtonText(e.target.value) // Campo para o texto do botão\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"Texto para copiar\",\n          variant: \"outlined\",\n          multiline: true,\n          rows: 4,\n          value: copyText,\n          onChange: e => setCopyText(e.target.value) // Campo para o texto de copiar\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }\n        })));\n      case \"Me Ligue\":\n        return /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          accept: \"image/*\",\n          className: classes.inputFile,\n          id: \"input-file\",\n          type: \"file\",\n          onChange: handleImageChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"input-file\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          component: \"span\",\n          className: classes.buttonFile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }\n        }, \"Imagem\"))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"T\\xEDtulo\",\n          variant: \"outlined\",\n          value: title,\n          onChange: e => setTitle(e.target.value) // Campo para o título\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"Mensagem\",\n          variant: \"outlined\",\n          multiline: true,\n          rows: 5,\n          value: description,\n          onChange: e => setDescription(e.target.value) // Campo para a mensagem\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"Texto do bot\\xE3o\",\n          variant: \"outlined\",\n          value: buttonText,\n          onChange: e => setButtonText(e.target.value) // Campo para o texto do botão\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"Telefone\",\n          variant: \"outlined\",\n          defaultValue: \"5511999999999\",\n          value: sendCALL,\n          onChange: e => setSendCall(e.target.value) // Campo para o telefone\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }\n        })));\n      case \"PIX\":\n        return /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"T\\xEDtulo\",\n          variant: \"outlined\",\n          value: title,\n          onChange: e => setTitle(e.target.value) // Campo para o título\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"Valor\",\n          variant: \"outlined\",\n          value: sendvalue,\n          onChange: e => setsendvalue(e.target.value) // Ajuste para o valor\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Select, {\n          fullWidth: true,\n          className: classes.formControl,\n          value: sendkey_type,\n          onChange: e => setsendkey_type(e.target.value) // Atualizando o estado sendkey_type\n          ,\n          displayEmpty: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(MenuItem, {\n          value: \"\",\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 17\n          }\n        }, \"Tipo de Chave\"), /*#__PURE__*/React.createElement(MenuItem, {\n          value: \"CNPJ\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 17\n          }\n        }, \"CNPJ\"), /*#__PURE__*/React.createElement(MenuItem, {\n          value: \"CPF\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 17\n          }\n        }, \"CPF\"), /*#__PURE__*/React.createElement(MenuItem, {\n          value: \"PHONE\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 17\n          }\n        }, \"Telefone\"), /*#__PURE__*/React.createElement(MenuItem, {\n          value: \"EMAIL\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 17\n          }\n        }, \"E-mail\"), /*#__PURE__*/React.createElement(MenuItem, {\n          value: \"EVP\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 17\n          }\n        }, \"Chave Aleat\\xF3ria\"))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"Nome\",\n          variant: \"outlined\",\n          value: sendmerchant_name,\n          onChange: e => setsendmerchant_name(e.target.value) // Campo para o nome\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          fullWidth: true,\n          label: \"Chave PIX\",\n          variant: \"outlined\",\n          value: sendKey,\n          onChange: e => setsendKey(e.target.value) // Campo para a chave PIX\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 15\n          }\n        })));\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: modalOpen,\n    onClose: onClose,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dialogTitleWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.primaryBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitle, {\n    className: classes.dialogTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 9\n    }\n  }, \"Selecione uma op\\xE7\\xE3o\")), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    fullWidth: true,\n    className: classes.formControl,\n    value: selectedOption,\n    onChange: handleSelectChange,\n    displayEmpty: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 11\n    }\n  }, \"Selecione\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Lista\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 11\n    }\n  }, \"Lista\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"URL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 11\n    }\n  }, \"URL\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Copia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 11\n    }\n  }, \"Copiar\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Me Ligue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 11\n    }\n  }, \"Me Ligue\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"PIX\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 11\n    }\n  }, \"PIX\")), renderContent()), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onClose,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 9\n    }\n  }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => createMessage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 9\n    }\n  }, \"Confirmar\")));\n};\nexport default ButtonModal;","map":{"version":3,"names":["React","useRef","useState","makeStyles","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","MenuItem","Select","Grid","api","toastError","useStyles","theme","formControl","marginBottom","spacing","minWidth","inputFile","display","buttonFile","dialogTitleWrapper","position","primaryBar","top","left","right","height","backgroundColor","palette","primary","main","zIndex","dialogTitle","color","ButtonModal","modalOpen","onClose","ticketId","classes","isMounted","loading","setLoading","selectedOption","setSelectedOption","inputList","setInputList","option","title","setTitle","description","setDescription","buttonText","setButtonText","copyText","setCopyText","sendCALL","setSendCall","sendURL","setSendURL","imageBase64","setImageBase64","sendKey","setsendKey","sendkey_type","setsendkey_type","sendvalue","setsendvalue","sendmerchant_name","setsendmerchant_name","handleSelectChange","event","target","value","handleAddOption","handleRemoveOption","index","prev","filter","_","i","handleInputChange","updatedInputs","handleUploadListMessage","isNaN","console","error","sections","rows","map","input","rowId","toString","listMessage","text","current","post","err","handleUploadCopy","payload","image","replace","log","handleUploadCALL","handleUploadURL","handleUploadPIX","startsWith","handleImageChange","file","files","reader","FileReader","onloadend","result","readAsDataURL","createMessage","renderContent","createElement","container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","item","xs","fullWidth","label","variant","onChange","e","multiline","key","alignItems","style","onClick","accept","className","id","type","htmlFor","component","defaultValue","displayEmpty","disabled","open","maxWidth"],"sources":["/workspaces/simao/whaticket/frontend/src/components/ButtonModal/index.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport api from \"../../services/api\";\r\nimport toastError from \"../../errors/toastError\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    marginBottom: theme.spacing(2),\r\n    minWidth: 300,\r\n  },\r\n  inputFile: {\r\n    display: 'none',  \r\n  },\r\n  buttonFile: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  dialogTitleWrapper: {\r\n    position: 'relative',\r\n  },\r\n  primaryBar: {\r\n    position: 'absolute',\r\n    top: 0,                \r\n    left: 0,\r\n    right: 0,\r\n    height: '100%',          \r\n    backgroundColor: theme.palette.primary.main,  \r\n    zIndex: 1,              \r\n  },\r\n  dialogTitle: {\r\n    position: 'relative',    \r\n    zIndex: 2,               \r\n    color: 'white',          \r\n  },\r\n}));\r\n\r\nconst ButtonModal = ({ modalOpen, onClose, ticketId }) => {\r\n  const classes = useStyles();\r\n  const isMounted = useRef(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [inputList, setInputList] = useState([{ option: \"\" }]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [buttonText, setButtonText] = useState(\"\");\r\n  const [copyText, setCopyText] = useState(\"\");\r\n  const [sendCALL, setSendCall] = useState(\"\");\r\n  const [sendURL, setSendURL] = useState(\"\");\r\n  const [imageBase64, setImageBase64] = useState('');\r\n  const [sendKey, setsendKey] = useState('');\r\n  const [sendkey_type, setsendkey_type] = useState('');\r\n  const [sendvalue, setsendvalue] = useState('');\r\n  const [sendmerchant_name, setsendmerchant_name] = useState('');\r\n\r\n\r\n  const handleSelectChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n  };\r\n\r\n  const handleAddOption = () => {\r\n    setInputList([...inputList, { option: \"\" }]);\r\n  };\r\n\r\n  const handleRemoveOption = (index) => {\r\n    setInputList((prev) => prev.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleInputChange = (index, event) => {\r\n    const updatedInputs = [...inputList];\r\n    updatedInputs[index].option = event.target.value;\r\n    setInputList(updatedInputs);\r\n  };\r\n\r\n  const handleUploadListMessage = async (title, description, inputList, ticketId) => {\r\n    setLoading(true);\r\n\r\n    if (!ticketId || isNaN(ticketId)) {\r\n      console.error('ID do Ticket inválido:', ticketId);\r\n      toastError('ID do Ticket inválido.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const sections = [\r\n        {\r\n          title: title || 'Opções',\r\n          rows: inputList.map((input, index) => ({\r\n            title: input.option,\r\n            rowId: (index + 1).toString(),\r\n          })),\r\n        },\r\n      ];\r\n\r\n      const listMessage = {\r\n        title: `${title}\\n`,\r\n        text: `${description}\\n`,\r\n        buttonText: 'Clique aqui',\r\n        sections: sections,\r\n      };\r\n      if (isMounted.current) {\r\n        await api.post(`/messages/lista/${ticketId}`, listMessage);\r\n      }\r\n    } catch (err) {\r\n      toastError(err);\r\n    } finally {\r\n      if (isMounted.current) {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUploadCopy = async (title, description, buttonText, copyText, imageBase64, ticketId) => {\r\n    setLoading(true);\r\n\r\n    if (!ticketId || isNaN(ticketId)) {\r\n      console.error('ID do Ticket inválido:', ticketId);\r\n      toastError('ID do Ticket inválido.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload = {\r\n        image: imageBase64 ? imageBase64.replace(/^data:image\\/[a-zA-Z]+;base64,/, '') : '', // Remove o prefixo\r\n        title: title,\r\n        description: description,\r\n        buttonText: buttonText,\r\n        copyText: copyText,\r\n      };\r\n\r\n      console.log('PAYLOAD:', payload);\r\n      if (isMounted.current) {\r\n        await api.post(`/messages/copy/${ticketId}`, payload); // Envia a mensagem para a API\r\n      }\r\n    } catch (err) {\r\n      toastError(err);\r\n    } finally {\r\n      if (isMounted.current) {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUploadCALL = async (title, description, buttonText, sendCALL, imageBase64, ticketId) => {\r\n    setLoading(true);\r\n\r\n    if (!ticketId || isNaN(ticketId)) {\r\n      console.error('ID do Ticket inválido:', ticketId);\r\n      toastError('ID do Ticket inválido.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload = {\r\n        image: imageBase64 ? imageBase64.replace(/^data:image\\/[a-zA-Z]+;base64,/, '') : '', // Remove o prefixo\r\n        title: title, // Título da mensagem\r\n        description: description, // Descrição da mensagem\r\n        buttonText: buttonText, // Texto do botão\r\n        copyText: sendCALL,\r\n      };\r\n\r\n      if (isMounted.current) {\r\n        await api.post(`/messages/call/${ticketId}`, payload); // Envia a mensagem para a API\r\n      }\r\n    } catch (err) {\r\n      toastError(err);\r\n    } finally {\r\n      if (isMounted.current) {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUploadURL = async (title, description, buttonText, sendURL, imageBase64, ticketId) => {\r\n    setLoading(true);\r\n\r\n    if (!ticketId || isNaN(ticketId)) {\r\n      console.error('ID do Ticket inválido:', ticketId);\r\n      toastError('ID do Ticket inválido.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload = {\r\n        image: imageBase64 ? imageBase64.replace(/^data:image\\/[a-zA-Z]+;base64,/, '') : '', // Remove o prefixo\r\n        title: title || 'Botão copiar', // Título da mensagem\r\n        description: description || 'Muito legal esses botões', // Descrição da mensagem\r\n        buttonText: buttonText || 'Botão copiar', // Texto do botão\r\n        copyText: sendURL || 'Texto padrão para copiar', // Texto para copiar\r\n      };\r\n\r\n      if (isMounted.current) {\r\n        await api.post(`/messages/URL/${ticketId}`, payload); // Envia a mensagem para a API\r\n      }\r\n    } catch (err) {\r\n      toastError(err);\r\n    } finally {\r\n      if (isMounted.current) {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUploadPIX = async (title, sendvalue, sendkey_type, sendmerchant_name, sendKey, ticketId) => {\r\n  setLoading(true);\r\n\r\n  try {\r\n    // Verifica se o tipo de chave é PHONE e adiciona +55 ao sendKey\r\n    if (sendkey_type === 'PHONE' && !sendKey.startsWith('+55')) {\r\n      sendKey = '+55' + sendKey;\r\n    }\r\n\r\n    const payload = {\r\n      title: title,\r\n      sendvalue: sendvalue,\r\n      sendkey_type: sendkey_type, \r\n      sendmerchant_name: sendmerchant_name,\r\n      sendKey: sendKey,\r\n    };\r\n\r\n    if (isMounted.current) {\r\n      await api.post(`/messages/PIX/${ticketId}`, payload); \r\n    }\r\n  } catch (err) {\r\n    toastError(err);\r\n  } finally {\r\n    if (isMounted.current) {\r\n      setLoading(false);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImageBase64(reader.result);\r\n        //  console.log('Image Base64:', reader.result); // Log the Base64 string\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n\r\n  const createMessage = async () => {\r\n    console.log('createMessage chamada');\r\n\r\n    try {\r\n      if (selectedOption === \"Lista\") {\r\n        await handleUploadListMessage(title, description, inputList, ticketId);\r\n      } else if (selectedOption === \"Copia\") {\r\n        await handleUploadCopy(title, description, buttonText, copyText, imageBase64, ticketId);\r\n      } else if (selectedOption === \"Me Ligue\") {\r\n        await handleUploadCALL(title, description, buttonText, sendCALL, imageBase64, ticketId);\r\n      } else if (selectedOption === \"URL\") {\r\n        await handleUploadURL(title, description, buttonText, sendURL, imageBase64, ticketId);\r\n      } else if (selectedOption === \"PIX\") {\r\n        await handleUploadPIX(title, sendvalue, sendkey_type, sendmerchant_name, sendKey, ticketId);\r\n      } else {\r\n        let listMessage = null;\r\n        switch (selectedOption) {\r\n          default:\r\n            console.error('Opção não selecionada ou mensagem não gerada.');\r\n            return;\r\n        }\r\n      }\r\n\r\n      // Fecha o modal após processar a mensagem\r\n      onClose();\r\n\r\n    } catch (error) {\r\n      toastError('Erro ao processar a mensagem');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const renderContent = () => {\r\n    switch (selectedOption) {\r\n\r\n      case \"Lista\":\r\n        return (\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Título\"\r\n                variant=\"outlined\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Descrição\"\r\n                variant=\"outlined\"\r\n                multiline\r\n                rows={5}\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              {inputList.map((input, index) => (\r\n                <Grid container key={index} spacing={1} alignItems=\"center\">\r\n                  <Grid item xs={10}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label={`Opção ${index + 1}`}\r\n                      value={input.option}\r\n                      onChange={(e) => handleInputChange(index, e)}\r\n                      variant=\"outlined\"\r\n                      style={{ marginBottom: \"8px\" }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={() => handleRemoveOption(index)}\r\n                    >\r\n                      X\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              ))}\r\n              <Button onClick={handleAddOption} color=\"primary\">\r\n                Adicionar nova opção\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      case \"URL\":\r\n        return (\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.inputFile} // Certifique-se de que esta classe está definida\r\n                id=\"input-file\" // Um ID único\r\n                type=\"file\"\r\n                onChange={handleImageChange}\r\n              />\r\n              <label htmlFor=\"input-file\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component=\"span\"\r\n                  className={classes.buttonFile} // Certifique-se de que esta classe está definida\r\n                >\r\n                  Imagem\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Título\"\r\n                variant=\"outlined\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}  // Campo para o título\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Mensagem\"\r\n                variant=\"outlined\"\r\n                multiline\r\n                rows={5}\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}  // Campo para a mensagem\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Texto do botão\"\r\n                variant=\"outlined\"\r\n                value={buttonText}\r\n                onChange={(e) => setButtonText(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"URL\"\r\n                variant=\"outlined\"\r\n                value={sendURL}\r\n                onChange={(e) => setSendURL(e.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      case \"Copia\":\r\n        return (\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.inputFile} // Certifique-se de que esta classe está definida\r\n                id=\"input-file\" // Um ID único\r\n                type=\"file\"\r\n                onChange={handleImageChange}\r\n              />\r\n              <label htmlFor=\"input-file\"> {/* O label deve referenciar o ID correto */}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component=\"span\"\r\n                  className={classes.buttonFile} // Certifique-se de que esta classe está definida\r\n                >\r\n                  Imagem\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Título\"\r\n                variant=\"outlined\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}  // Campo para o título\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Mensagem\"\r\n                variant=\"outlined\"\r\n                multiline\r\n                rows={5}\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}  // Campo para a mensagem\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Texto do botão\"\r\n                variant=\"outlined\"\r\n                value={buttonText}\r\n                onChange={(e) => setButtonText(e.target.value)}  // Campo para o texto do botão\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Texto para copiar\"\r\n                variant=\"outlined\"\r\n                multiline\r\n                rows={4}\r\n                value={copyText}\r\n                onChange={(e) => setCopyText(e.target.value)}  // Campo para o texto de copiar\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      case \"Me Ligue\":\r\n        return (\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.inputFile}\r\n                id=\"input-file\"\r\n                type=\"file\"\r\n                onChange={handleImageChange}\r\n              />\r\n              <label htmlFor=\"input-file\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component=\"span\"\r\n                  className={classes.buttonFile}\r\n                >\r\n                  Imagem\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Título\"\r\n                variant=\"outlined\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)} // Campo para o título\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Mensagem\"\r\n                variant=\"outlined\"\r\n                multiline\r\n                rows={5}\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)} // Campo para a mensagem\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Texto do botão\"\r\n                variant=\"outlined\"\r\n                value={buttonText}\r\n                onChange={(e) => setButtonText(e.target.value)} // Campo para o texto do botão\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Telefone\"\r\n                variant=\"outlined\"\r\n                defaultValue=\"5511999999999\"\r\n                value={sendCALL}\r\n                onChange={(e) => setSendCall(e.target.value)} // Campo para o telefone\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      case \"PIX\":\r\n        return (\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Título\"\r\n                variant=\"outlined\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)} // Campo para o título\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Valor\"\r\n                variant=\"outlined\"\r\n                value={sendvalue}\r\n                onChange={(e) => setsendvalue(e.target.value)} // Ajuste para o valor\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Select\r\n                fullWidth\r\n                className={classes.formControl}\r\n                value={sendkey_type}\r\n                onChange={(e) => setsendkey_type(e.target.value)} // Atualizando o estado sendkey_type\r\n                displayEmpty\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  Tipo de Chave\r\n                </MenuItem>\r\n                <MenuItem value=\"CNPJ\">CNPJ</MenuItem>\r\n                <MenuItem value=\"CPF\">CPF</MenuItem>\r\n                <MenuItem value=\"PHONE\">Telefone</MenuItem>\r\n                <MenuItem value=\"EMAIL\">E-mail</MenuItem>\r\n                <MenuItem value=\"EVP\">Chave Aleatória</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nome\"\r\n                variant=\"outlined\"\r\n                value={sendmerchant_name}\r\n                onChange={(e) => setsendmerchant_name(e.target.value)} // Campo para o nome\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Chave PIX\"\r\n                variant=\"outlined\"\r\n                value={sendKey}\r\n                onChange={(e) => setsendKey(e.target.value)} // Campo para a chave PIX\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={modalOpen} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n\r\n      {/* Wrapper que contém tanto o título quanto a barra */}\r\n      <div className={classes.dialogTitleWrapper}>\r\n        {/* Barra colorida atrás do título */}\r\n        <div className={classes.primaryBar}></div>\r\n\r\n        {/* Título com posição relativa */}\r\n        <DialogTitle className={classes.dialogTitle}>\r\n          Selecione uma opção\r\n        </DialogTitle>\r\n      </div>\r\n\r\n      <DialogContent>\r\n        <Select\r\n          fullWidth\r\n          className={classes.formControl}\r\n          value={selectedOption}\r\n          onChange={handleSelectChange}\r\n          displayEmpty\r\n        >\r\n          <MenuItem value=\"\" disabled>\r\n            Selecione\r\n          </MenuItem>\r\n          <MenuItem value=\"Lista\">Lista</MenuItem>\r\n          <MenuItem value=\"URL\">URL</MenuItem>\r\n          <MenuItem value=\"Copia\">Copiar</MenuItem>\r\n          <MenuItem value=\"Me Ligue\">Me Ligue</MenuItem>\r\n          <MenuItem value=\"PIX\">PIX</MenuItem>\r\n        </Select>\r\n\r\n        {/* Renderiza o conteúdo com base na opção selecionada */}\r\n        {renderContent()}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"secondary\">\r\n          Cancelar\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => createMessage()}>\r\n          Confirmar\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ButtonModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}