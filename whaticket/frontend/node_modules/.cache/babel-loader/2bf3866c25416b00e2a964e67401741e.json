{"ast":null,"code":"var _jsxFileName = \"/workspaces/simao/whaticket/frontend/src/pages/FlowBuilderConfig/index.js\";\nimport React, { useState, useEffect, useReducer, useContext, useCallback } from \"react\";\nimport { SiOpenai } from \"react-icons/si\";\nimport typebotIcon from \"../../assets/typebot-ico.png\";\nimport { HiOutlinePuzzle } from \"react-icons/hi\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport audioNode from \"./nodes/audioNode\";\nimport typebotNode from \"./nodes/typebotNode\";\nimport openaiNode from \"./nodes/openaiNode\";\nimport messageNode from \"./nodes/messageNode.js\";\nimport startNode from \"./nodes/startNode\";\nimport menuNode from \"./nodes/menuNode\";\nimport intervalNode from \"./nodes/intervalNode\";\nimport imgNode from \"./nodes/imgNode\";\nimport randomizerNode from \"./nodes/randomizerNode\";\nimport videoNode from \"./nodes/videoNode\";\nimport questionNode from \"./nodes/questionNode\";\nimport api from \"../../services/api\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport MainContainer from \"../../components/MainContainer\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { SpeedDial, SpeedDialAction, SpeedDialIcon, Stack, Typography } from \"@mui/material\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { Box, CircularProgress } from \"@material-ui/core\";\nimport BallotIcon from '@mui/icons-material/Ballot';\nimport \"reactflow/dist/style.css\";\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge, onElementsRemove, useReactFlow } from \"react-flow-renderer\";\nimport FlowBuilderAddTextModal from \"../../components/FlowBuilderAddTextModal\";\nimport FlowBuilderIntervalModal from \"../../components/FlowBuilderIntervalModal\";\nimport FlowBuilderConditionModal from \"../../components/FlowBuilderConditionModal\";\nimport FlowBuilderMenuModal from \"../../components/FlowBuilderMenuModal\";\nimport { AccessTime, CallSplit, DynamicFeed, Image, ImportExport, LibraryBooks, Message, MicNone, RocketLaunch, Videocam } from \"@mui/icons-material\";\nimport RemoveEdge from \"./nodes/removeEdge\";\nimport FlowBuilderAddImgModal from \"../../components/FlowBuilderAddImgModal\";\nimport FlowBuilderTicketModal from \"../../components/FlowBuilderAddTicketModal\";\nimport FlowBuilderAddAudioModal from \"../../components/FlowBuilderAddAudioModal\";\nimport { useNodeStorage } from \"../../stores/useNodeStorage\";\nimport FlowBuilderRandomizerModal from \"../../components/FlowBuilderRandomizerModal\";\nimport FlowBuilderAddVideoModal from \"../../components/FlowBuilderAddVideoModal\";\nimport FlowBuilderSingleBlockModal from \"../../components/FlowBuilderSingleBlockModal\";\nimport singleBlockNode from \"./nodes/singleBlockNode\";\nimport { colorPrimary } from \"../../styles/styles\";\nimport ticketNode from \"./nodes/ticketNode\";\nimport { ConfirmationNumber } from \"@material-ui/icons\";\nimport FlowBuilderTypebotModal from \"../../components/FlowBuilderAddTypebotModal\";\nimport FlowBuilderOpenAIModal from \"../../components/FlowBuilderAddOpenAIModal\";\nimport FlowBuilderAddQuestionModal from \"../../components/FlowBuilderAddQuestionModal\";\nconst useStyles = makeStyles(theme => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    position: \"relative\",\n    backgroundColor: \"#F8F9FA\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles\n  },\n  speeddial: {\n    backgroundColor: \"red\"\n  }\n}));\nfunction geraStringAleatoria(tamanho) {\n  var stringAleatoria = \"\";\n  var caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (var i = 0; i < tamanho; i++) {\n    stringAleatoria += caracteres.charAt(Math.floor(Math.random() * caracteres.length));\n  }\n  return stringAleatoria;\n}\nconst nodeTypes = {\n  message: messageNode,\n  start: startNode,\n  menu: menuNode,\n  interval: intervalNode,\n  img: imgNode,\n  audio: audioNode,\n  randomizer: randomizerNode,\n  video: videoNode,\n  singleBlock: singleBlockNode,\n  ticket: ticketNode,\n  typebot: typebotNode,\n  openai: openaiNode,\n  question: questionNode\n};\nconst edgeTypes = {\n  buttonedge: RemoveEdge\n};\nconst initialNodes = [{\n  id: \"1\",\n  position: {\n    x: 250,\n    y: 100\n  },\n  data: {\n    label: \"Inicio do fluxo\"\n  },\n  type: \"start\"\n}];\nconst initialEdges = [];\nexport const FlowBuilderConfig = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const storageItems = useNodeStorage();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [dataNode, setDataNode] = useState(null);\n  const [hasMore, setHasMore] = useState(false);\n  const [modalAddText, setModalAddText] = useState(null);\n  const [modalAddInterval, setModalAddInterval] = useState(false);\n  const [modalAddMenu, setModalAddMenu] = useState(null);\n  const [modalAddImg, setModalAddImg] = useState(null);\n  const [modalAddAudio, setModalAddAudio] = useState(null);\n  const [modalAddRandomizer, setModalAddRandomizer] = useState(null);\n  const [modalAddVideo, setModalAddVideo] = useState(null);\n  const [modalAddSingleBlock, setModalAddSingleBlock] = useState(null);\n  const [modalAddTicket, setModalAddTicket] = useState(null);\n  const [modalAddTypebot, setModalAddTypebot] = useState(null);\n  const [modalAddOpenAI, setModalAddOpenAI] = useState(null);\n  const [modalAddQuestion, setModalAddQuestion] = useState(null);\n  const connectionLineStyle = {\n    stroke: \"#2b2b2b\",\n    strokeWidth: \"6px\"\n  };\n  const addNode = (type, data) => {\n    const posY = nodes[nodes.length - 1].position.y;\n    const posX = nodes[nodes.length - 1].position.x + nodes[nodes.length - 1].width + 40;\n    if (type === \"start\") {\n      return setNodes(old => {\n        return [\n        //  ...old.filter((item) => item.id !== \"1\"),\n        {\n          id: \"1\",\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            label: \"Inicio do fluxo\"\n          },\n          type: \"start\"\n        }];\n      });\n    }\n    if (type === \"text\") {\n      return setNodes(old => {\n        return [...old, {\n          id: geraStringAleatoria(30),\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            label: data.text\n          },\n          type: \"message\"\n        }];\n      });\n    }\n    if (type === \"interval\") {\n      return setNodes(old => {\n        return [...old, {\n          id: geraStringAleatoria(30),\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            label: `Intervalo ${data.sec} seg.`,\n            sec: data.sec\n          },\n          type: \"interval\"\n        }];\n      });\n    }\n    if (type === \"condition\") {\n      return setNodes(old => {\n        return [...old, {\n          id: geraStringAleatoria(30),\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            key: data.key,\n            condition: data.condition,\n            value: data.value\n          },\n          type: \"condition\"\n        }];\n      });\n    }\n    if (type === \"menu\") {\n      return setNodes(old => {\n        return [...old, {\n          id: geraStringAleatoria(30),\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            message: data.message,\n            arrayOption: data.arrayOption\n          },\n          type: \"menu\"\n        }];\n      });\n    }\n    if (type === \"img\") {\n      return setNodes(old => {\n        return [...old, {\n          id: geraStringAleatoria(30),\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            url: data.url\n          },\n          type: \"img\"\n        }];\n      });\n    }\n    if (type === \"audio\") {\n      return setNodes(old => {\n        return [...old, {\n          id: geraStringAleatoria(30),\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            url: data.url,\n            record: data.record\n          },\n          type: \"audio\"\n        }];\n      });\n    }\n    if (type === \"randomizer\") {\n      return setNodes(old => {\n        return [...old, {\n          id: geraStringAleatoria(30),\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            percent: data.percent\n          },\n          type: \"randomizer\"\n        }];\n      });\n    }\n    if (type === \"video\") {\n      return setNodes(old => {\n        return [...old, {\n          id: geraStringAleatoria(30),\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            url: data.url\n          },\n          type: \"video\"\n        }];\n      });\n    }\n    if (type === \"singleBlock\") {\n      return setNodes(old => {\n        return [...old, {\n          id: geraStringAleatoria(30),\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            ...data\n          },\n          type: \"singleBlock\"\n        }];\n      });\n    }\n    if (type === \"ticket\") {\n      return setNodes(old => {\n        return [...old, {\n          id: geraStringAleatoria(30),\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            ...data\n          },\n          type: \"ticket\"\n        }];\n      });\n    }\n    if (type === \"typebot\") {\n      return setNodes(old => {\n        return [...old, {\n          id: geraStringAleatoria(30),\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            ...data\n          },\n          type: \"typebot\"\n        }];\n      });\n    }\n    if (type === \"openai\") {\n      return setNodes(old => {\n        return [...old, {\n          id: geraStringAleatoria(30),\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            ...data\n          },\n          type: \"openai\"\n        }];\n      });\n    }\n    if (type === \"question\") {\n      return setNodes(old => {\n        return [...old, {\n          id: geraStringAleatoria(30),\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            ...data\n          },\n          type: \"question\"\n        }];\n      });\n    }\n  };\n  const textAdd = data => {\n    addNode(\"text\", data);\n  };\n  const intervalAdd = data => {\n    addNode(\"interval\", data);\n  };\n  const conditionAdd = data => {\n    addNode(\"condition\", data);\n  };\n  const menuAdd = data => {\n    addNode(\"menu\", data);\n  };\n  const imgAdd = data => {\n    addNode(\"img\", data);\n  };\n  const audioAdd = data => {\n    addNode(\"audio\", data);\n  };\n  const randomizerAdd = data => {\n    addNode(\"randomizer\", data);\n  };\n  const videoAdd = data => {\n    addNode(\"video\", data);\n  };\n  const singleBlockAdd = data => {\n    addNode(\"singleBlock\", data);\n  };\n  const ticketAdd = data => {\n    addNode(\"ticket\", data);\n  };\n  const typebotAdd = data => {\n    addNode(\"typebot\", data);\n  };\n  const openaiAdd = data => {\n    addNode(\"openai\", data);\n  };\n  const questionAdd = data => {\n    addNode(\"question\", data);\n  };\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        try {\n          const {\n            data\n          } = await api.get(`/flowbuilder/flow/${id}`);\n          if (data.flow.flow !== null) {\n            const flowNodes = data.flow.flow.nodes;\n            setNodes(flowNodes);\n            setEdges(data.flow.flow.connections);\n            const filterVariables = flowNodes.filter(nd => nd.type === \"question\");\n            const variables = filterVariables.map(variable => variable.data.typebotIntegration.answerKey);\n            localStorage.setItem('variables', JSON.stringify(variables));\n          }\n          setLoading(false);\n        } catch (err) {\n          toastError(err);\n        }\n      };\n      fetchContacts();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [id]);\n  useEffect(() => {\n    if (storageItems.action === \"delete\") {\n      setNodes(old => old.filter(item => item.id !== storageItems.node));\n      setEdges(old => {\n        const newData = old.filter(item => item.source !== storageItems.node);\n        const newClearTarget = newData.filter(item => item.target !== storageItems.node);\n        return newClearTarget;\n      });\n      storageItems.setNodesStorage(\"\");\n      storageItems.setAct(\"idle\");\n    }\n    if (storageItems.action === \"duplicate\") {\n      const nodeDuplicate = nodes.filter(item => item.id === storageItems.node)[0];\n      const maioresX = nodes.map(node => node.position.x);\n      const maiorX = Math.max(...maioresX);\n      const finalY = nodes[nodes.length - 1].position.y;\n      const nodeNew = {\n        ...nodeDuplicate,\n        id: geraStringAleatoria(30),\n        position: {\n          x: maiorX + 240,\n          y: finalY\n        },\n        selected: false,\n        style: {\n          backgroundColor: \"#555555\",\n          padding: 0,\n          borderRadius: 8\n        }\n      };\n      setNodes(old => [...old, nodeNew]);\n      storageItems.setNodesStorage(\"\");\n      storageItems.setAct(\"idle\");\n    }\n  }, [storageItems.action]);\n  const loadMore = () => {\n    setPageNumber(prevState => prevState + 1);\n  };\n  const handleScroll = e => {\n    if (!hasMore || loading) return;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const saveFlow = async () => {\n    await api.post(\"/flowbuilder/flow\", {\n      idFlow: id,\n      nodes: nodes,\n      connections: edges\n    }).then(res => {\n      toast.success(\"Fluxo salvo com sucesso\");\n    });\n  };\n  const doubleClick = (event, node) => {\n    console.log(\"NODE\", node);\n    setDataNode(node);\n    if (node.type === \"message\") {\n      setModalAddText(\"edit\");\n    }\n    if (node.type === \"interval\") {\n      setModalAddInterval(\"edit\");\n    }\n    if (node.type === \"menu\") {\n      setModalAddMenu(\"edit\");\n    }\n    if (node.type === \"img\") {\n      setModalAddImg(\"edit\");\n    }\n    if (node.type === \"audio\") {\n      setModalAddAudio(\"edit\");\n    }\n    if (node.type === \"randomizer\") {\n      setModalAddRandomizer(\"edit\");\n    }\n    if (node.type === \"singleBlock\") {\n      setModalAddSingleBlock(\"edit\");\n    }\n    if (node.type === \"ticket\") {\n      setModalAddTicket(\"edit\");\n    }\n    if (node.type === \"typebot\") {\n      setModalAddTypebot(\"edit\");\n    }\n    if (node.type === \"openai\") {\n      setModalAddOpenAI(\"edit\");\n    }\n    if (node.type === \"question\") {\n      setModalAddQuestion(\"edit\");\n    }\n  };\n  const clickNode = (event, node) => {\n    setNodes(old => old.map(item => {\n      if (item.id === node.id) {\n        return {\n          ...item,\n          style: {\n            backgroundColor: \"#0000FF\",\n            padding: 1,\n            borderRadius: 8\n          }\n        };\n      }\n      return {\n        ...item,\n        style: {\n          backgroundColor: \"#13111C\",\n          padding: 0,\n          borderRadius: 8\n        }\n      };\n    }));\n  };\n  const clickEdge = (event, node) => {\n    setNodes(old => old.map(item => {\n      return {\n        ...item,\n        style: {\n          backgroundColor: \"#13111C\",\n          padding: 0,\n          borderRadius: 8\n        }\n      };\n    }));\n  };\n  const updateNode = dataAlter => {\n    setNodes(old => old.map(itemNode => {\n      if (itemNode.id === dataAlter.id) {\n        return dataAlter;\n      }\n      return itemNode;\n    }));\n    setModalAddText(null);\n    setModalAddInterval(null);\n    setModalAddMenu(null);\n    setModalAddOpenAI(null);\n    setModalAddTypebot(null);\n  };\n  const actions = [{\n    icon: /*#__PURE__*/React.createElement(RocketLaunch, {\n      sx: {\n        color: \"#3ABA38\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 9\n      }\n    }),\n    name: \"Inicio\",\n    type: \"start\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(LibraryBooks, {\n      sx: {\n        color: \"#EC5858\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }\n    }),\n    name: \"Conteúdo\",\n    type: \"content\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(DynamicFeed, {\n      sx: {\n        color: \"#683AC8\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }\n    }),\n    name: \"Menu\",\n    type: \"menu\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(CallSplit, {\n      sx: {\n        color: \"#1FBADC\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }\n    }),\n    name: \"Randomizador\",\n    type: \"random\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(AccessTime, {\n      sx: {\n        color: \"#F7953B\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 9\n      }\n    }),\n    name: \"Intervalo\",\n    type: \"interval\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(ConfirmationNumber, {\n      sx: {\n        color: \"#F7953B\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }\n    }),\n    name: \"Ticket\",\n    type: \"ticket\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(Box, {\n      component: \"img\",\n      sx: {\n        width: 24,\n        height: 24,\n        color: \"#3aba38\"\n      },\n      src: typebotIcon,\n      alt: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 9\n      }\n    }),\n    name: \"TypeBot\",\n    type: \"typebot\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(SiOpenai, {\n      sx: {\n        color: \"#F7953B\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 9\n      }\n    }),\n    name: \"OpenAI\",\n    type: \"openai\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(BallotIcon, {\n      sx: {\n        color: \"#F7953B\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 9\n      }\n    }),\n    name: \"Pergunta\",\n    type: \"question\"\n  }];\n  const clickActions = type => {\n    switch (type) {\n      case \"start\":\n        addNode(\"start\");\n        break;\n      case \"menu\":\n        setModalAddMenu(\"create\");\n        break;\n      case \"content\":\n        setModalAddSingleBlock(\"create\");\n        break;\n      case \"random\":\n        setModalAddRandomizer(\"create\");\n        break;\n      case \"interval\":\n        setModalAddInterval(\"create\");\n        break;\n      case \"ticket\":\n        setModalAddTicket(\"create\");\n        break;\n      case \"typebot\":\n        setModalAddTypebot(\"create\");\n        break;\n      case \"openai\":\n        setModalAddOpenAI(\"create\");\n        break;\n      case \"question\":\n        setModalAddQuestion(\"create\");\n      default:\n    }\n  };\n  return /*#__PURE__*/React.createElement(Stack, {\n    sx: {\n      height: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FlowBuilderAddTextModal, {\n    open: modalAddText,\n    onSave: textAdd,\n    data: dataNode,\n    onUpdate: updateNode,\n    close: setModalAddText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FlowBuilderIntervalModal, {\n    open: modalAddInterval,\n    onSave: intervalAdd,\n    data: dataNode,\n    onUpdate: updateNode,\n    close: setModalAddInterval,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FlowBuilderMenuModal, {\n    open: modalAddMenu,\n    onSave: menuAdd,\n    data: dataNode,\n    onUpdate: updateNode,\n    close: setModalAddMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FlowBuilderAddImgModal, {\n    open: modalAddImg,\n    onSave: imgAdd,\n    data: dataNode,\n    onUpdate: updateNode,\n    close: setModalAddImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FlowBuilderAddAudioModal, {\n    open: modalAddAudio,\n    onSave: audioAdd,\n    data: dataNode,\n    onUpdate: updateNode,\n    close: setModalAddAudio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FlowBuilderRandomizerModal, {\n    open: modalAddRandomizer,\n    onSave: randomizerAdd,\n    data: dataNode,\n    onUpdate: updateNode,\n    close: setModalAddRandomizer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FlowBuilderAddVideoModal, {\n    open: modalAddVideo,\n    onSave: videoAdd,\n    data: dataNode,\n    onUpdate: updateNode,\n    close: setModalAddVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FlowBuilderSingleBlockModal, {\n    open: modalAddSingleBlock,\n    onSave: singleBlockAdd,\n    data: dataNode,\n    onUpdate: updateNode,\n    close: setModalAddSingleBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FlowBuilderTicketModal, {\n    open: modalAddTicket,\n    onSave: ticketAdd,\n    data: dataNode,\n    onUpdate: updateNode,\n    close: setModalAddTicket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FlowBuilderOpenAIModal, {\n    open: modalAddOpenAI,\n    onSave: openaiAdd,\n    data: dataNode,\n    onUpdate: updateNode,\n    close: setModalAddOpenAI,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FlowBuilderTypebotModal, {\n    open: modalAddTypebot,\n    onSave: typebotAdd,\n    data: dataNode,\n    onUpdate: updateNode,\n    close: setModalAddTypebot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FlowBuilderAddQuestionModal, {\n    open: modalAddQuestion,\n    onSave: questionAdd,\n    data: dataNode,\n    onUpdate: updateNode,\n    close: setModalAddQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MainHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 9\n    }\n  }, \"Desenhe seu fluxo\")), !loading && /*#__PURE__*/React.createElement(Paper, {\n    className: classes.mainPaper,\n    variant: \"outlined\",\n    onScroll: handleScroll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SpeedDial, {\n    ariaLabel: \"SpeedDial basic example\",\n    sx: {\n      position: \"absolute\",\n      top: 16,\n      left: 16,\n      \".MuiSpeedDial-fab\": {\n        backgroundColor: colorPrimary(),\n        \"&:hover\": {\n          backgroundColor: colorPrimary()\n        }\n      }\n    },\n    icon: /*#__PURE__*/React.createElement(SpeedDialIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 21\n      }\n    }),\n    direction: \"down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 13\n    }\n  }, actions.map(action => /*#__PURE__*/React.createElement(SpeedDialAction, {\n    key: action.name,\n    icon: action.icon,\n    tooltipTitle: action.name,\n    tooltipOpen: true,\n    tooltipPlacement: \"right\",\n    onClick: () => {\n      console.log(action.type);\n      clickActions(action.type);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Stack, {\n    sx: {\n      position: \"absolute\",\n      justifyContent: \"center\",\n      flexDirection: \"row\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: \"#010101\",\n      textShadow: \"#010101 1px 0 10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 13\n    }\n  }, \"N\\xE3o se esque\\xE7a de salvar seu fluxo!\")), /*#__PURE__*/React.createElement(Stack, {\n    direction: \"row\",\n    justifyContent: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    sx: {\n      textTransform: \"none\"\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => saveFlow(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 13\n    }\n  }, \"Salvar\")), /*#__PURE__*/React.createElement(Stack, {\n    direction: \"row\",\n    style: {\n      width: \"100%\",\n      height: \"90%\",\n      position: \"relative\",\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    deleteKeyCode: [\"Backspace\", \"Delete\"],\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onNodeDoubleClick: doubleClick,\n    onNodeClick: clickNode,\n    onEdgeClick: clickEdge,\n    onConnect: onConnect,\n    nodeTypes: nodeTypes,\n    fitView: true,\n    connectionLineStyle: connectionLineStyle,\n    style: {\n      //backgroundImage: `url(${imgBackground})`,\n      //backgroundSize: \"cover\"\n      backgroundColor: \"#F8F9FA\"\n    },\n    edgeTypes: edgeTypes,\n    variant: \"cross\",\n    defaultEdgeOptions: {\n      style: {\n        color: \"#ff0000\",\n        strokeWidth: \"6px\"\n      },\n      animated: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Controls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 934,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(MiniMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 935,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Background, {\n    variant: \"dots\",\n    gap: 12,\n    size: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 936,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Stack, {\n    style: {\n      backgroundColor: \"#FAFAFA\",\n      height: \"20px\",\n      width: \"58px\",\n      position: \"absolute\",\n      bottom: 0,\n      right: 0,\n      zIndex: 1111\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 13\n    }\n  }))), loading && /*#__PURE__*/React.createElement(Stack, {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"70vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1167,\n      columnNumber: 11\n    }\n  })));\n};","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useCallback","SiOpenai","typebotIcon","HiOutlinePuzzle","toast","useHistory","makeStyles","Paper","Button","audioNode","typebotNode","openaiNode","messageNode","startNode","menuNode","intervalNode","imgNode","randomizerNode","videoNode","questionNode","api","MainHeader","Title","MainHeaderButtonsWrapper","MainContainer","toastError","AuthContext","SpeedDial","SpeedDialAction","SpeedDialIcon","Stack","Typography","useParams","Box","CircularProgress","BallotIcon","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","onElementsRemove","useReactFlow","FlowBuilderAddTextModal","FlowBuilderIntervalModal","FlowBuilderConditionModal","FlowBuilderMenuModal","AccessTime","CallSplit","DynamicFeed","Image","ImportExport","LibraryBooks","Message","MicNone","RocketLaunch","Videocam","RemoveEdge","FlowBuilderAddImgModal","FlowBuilderTicketModal","FlowBuilderAddAudioModal","useNodeStorage","FlowBuilderRandomizerModal","FlowBuilderAddVideoModal","FlowBuilderSingleBlockModal","singleBlockNode","colorPrimary","ticketNode","ConfirmationNumber","FlowBuilderTypebotModal","FlowBuilderOpenAIModal","FlowBuilderAddQuestionModal","useStyles","theme","mainPaper","flex","padding","spacing","position","backgroundColor","overflowY","scrollbarStyles","speeddial","geraStringAleatoria","tamanho","stringAleatoria","caracteres","i","charAt","Math","floor","random","length","nodeTypes","message","start","menu","interval","img","audio","randomizer","video","singleBlock","ticket","typebot","openai","question","edgeTypes","buttonedge","initialNodes","id","x","y","data","label","type","initialEdges","FlowBuilderConfig","classes","history","storageItems","user","loading","setLoading","pageNumber","setPageNumber","dataNode","setDataNode","hasMore","setHasMore","modalAddText","setModalAddText","modalAddInterval","setModalAddInterval","modalAddMenu","setModalAddMenu","modalAddImg","setModalAddImg","modalAddAudio","setModalAddAudio","modalAddRandomizer","setModalAddRandomizer","modalAddVideo","setModalAddVideo","modalAddSingleBlock","setModalAddSingleBlock","modalAddTicket","setModalAddTicket","modalAddTypebot","setModalAddTypebot","modalAddOpenAI","setModalAddOpenAI","modalAddQuestion","setModalAddQuestion","connectionLineStyle","stroke","strokeWidth","addNode","posY","nodes","posX","width","setNodes","old","text","sec","key","condition","value","arrayOption","url","record","percent","textAdd","intervalAdd","conditionAdd","menuAdd","imgAdd","audioAdd","randomizerAdd","videoAdd","singleBlockAdd","ticketAdd","typebotAdd","openaiAdd","questionAdd","delayDebounceFn","setTimeout","fetchContacts","get","flow","flowNodes","setEdges","connections","filterVariables","filter","nd","variables","map","variable","typebotIntegration","answerKey","localStorage","setItem","JSON","stringify","err","clearTimeout","action","item","node","newData","source","newClearTarget","target","setNodesStorage","setAct","nodeDuplicate","maioresX","maiorX","max","finalY","nodeNew","selected","style","borderRadius","loadMore","prevState","handleScroll","e","scrollTop","scrollHeight","clientHeight","currentTarget","onNodesChange","edges","onEdgesChange","onConnect","params","eds","saveFlow","post","idFlow","then","res","success","doubleClick","event","console","log","clickNode","clickEdge","updateNode","dataAlter","itemNode","actions","icon","createElement","sx","color","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","component","height","src","alt","clickActions","open","onSave","onUpdate","close","className","variant","onScroll","ariaLabel","top","left","direction","tooltipTitle","tooltipOpen","tooltipPlacement","onClick","justifyContent","flexDirection","textShadow","textTransform","display","deleteKeyCode","onNodeDoubleClick","onNodeClick","onEdgeClick","fitView","defaultEdgeOptions","animated","gap","size","bottom","right","zIndex","alignItems"],"sources":["/workspaces/simao/whaticket/frontend/src/pages/FlowBuilderConfig/index.js"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useContext,\n  useCallback,\n} from \"react\";\nimport { SiOpenai } from \"react-icons/si\";\nimport typebotIcon from \"../../assets/typebot-ico.png\";\nimport { HiOutlinePuzzle } from \"react-icons/hi\";\n\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\n\nimport audioNode from \"./nodes/audioNode\";\nimport typebotNode from \"./nodes/typebotNode\";\nimport openaiNode from \"./nodes/openaiNode\";\nimport messageNode from \"./nodes/messageNode.js\";\nimport startNode from \"./nodes/startNode\";\nimport menuNode from \"./nodes/menuNode\";\nimport intervalNode from \"./nodes/intervalNode\";\nimport imgNode from \"./nodes/imgNode\";\nimport randomizerNode from \"./nodes/randomizerNode\";\nimport videoNode from \"./nodes/videoNode\";\nimport questionNode from \"./nodes/questionNode\";\n\nimport api from \"../../services/api\";\n\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport MainContainer from \"../../components/MainContainer\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport {\n  SpeedDial,\n  SpeedDialAction,\n  SpeedDialIcon,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { Box, CircularProgress } from \"@material-ui/core\";\nimport BallotIcon from '@mui/icons-material/Ballot';\n\nimport \"reactflow/dist/style.css\";\n\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n  addEdge,\n  onElementsRemove,\n  useReactFlow,\n} from \"react-flow-renderer\";\nimport FlowBuilderAddTextModal from \"../../components/FlowBuilderAddTextModal\";\nimport FlowBuilderIntervalModal from \"../../components/FlowBuilderIntervalModal\";\nimport FlowBuilderConditionModal from \"../../components/FlowBuilderConditionModal\";\nimport FlowBuilderMenuModal from \"../../components/FlowBuilderMenuModal\";\nimport {\n  AccessTime,\n  CallSplit,\n  DynamicFeed,\n  Image,\n  ImportExport,\n  LibraryBooks,\n  Message,\n  MicNone,\n  RocketLaunch,\n  Videocam,\n} from \"@mui/icons-material\";\nimport RemoveEdge from \"./nodes/removeEdge\";\nimport FlowBuilderAddImgModal from \"../../components/FlowBuilderAddImgModal\";\nimport FlowBuilderTicketModal from \"../../components/FlowBuilderAddTicketModal\";\nimport FlowBuilderAddAudioModal from \"../../components/FlowBuilderAddAudioModal\";\n\nimport { useNodeStorage } from \"../../stores/useNodeStorage\";\nimport FlowBuilderRandomizerModal from \"../../components/FlowBuilderRandomizerModal\";\nimport FlowBuilderAddVideoModal from \"../../components/FlowBuilderAddVideoModal\";\nimport FlowBuilderSingleBlockModal from \"../../components/FlowBuilderSingleBlockModal\";\nimport singleBlockNode from \"./nodes/singleBlockNode\";\nimport { colorPrimary } from \"../../styles/styles\";\nimport ticketNode from \"./nodes/ticketNode\";\nimport { ConfirmationNumber } from \"@material-ui/icons\";\nimport FlowBuilderTypebotModal from \"../../components/FlowBuilderAddTypebotModal\";\nimport FlowBuilderOpenAIModal from \"../../components/FlowBuilderAddOpenAIModal\";\nimport FlowBuilderAddQuestionModal from \"../../components/FlowBuilderAddQuestionModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    position: \"relative\",\n    backgroundColor: \"#F8F9FA\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  speeddial: {\n    backgroundColor: \"red\",\n  },\n}));\n\nfunction geraStringAleatoria(tamanho) {\n  var stringAleatoria = \"\";\n  var caracteres =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (var i = 0; i < tamanho; i++) {\n    stringAleatoria += caracteres.charAt(\n      Math.floor(Math.random() * caracteres.length)\n    );\n  }\n  return stringAleatoria;\n}\n\nconst nodeTypes = {\n  message: messageNode,\n  start: startNode,\n  menu: menuNode,\n  interval: intervalNode,\n  img: imgNode,\n  audio: audioNode,\n  randomizer: randomizerNode,\n  video: videoNode,\n  singleBlock: singleBlockNode,\n  ticket: ticketNode,\n  typebot: typebotNode,\n  openai: openaiNode,\n  question: questionNode,\n};\n\nconst edgeTypes = {\n  buttonedge: RemoveEdge,\n};\n\nconst initialNodes = [\n  {\n    id: \"1\",\n    position: { x: 250, y: 100 },\n    data: { label: \"Inicio do fluxo\" },\n    type: \"start\",\n  },\n];\n\nconst initialEdges = [];\n\nexport const FlowBuilderConfig = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const storageItems = useNodeStorage();\n\n  const { user } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [dataNode, setDataNode] = useState(null);\n  const [hasMore, setHasMore] = useState(false);\n  const [modalAddText, setModalAddText] = useState(null);\n  const [modalAddInterval, setModalAddInterval] = useState(false);\n  const [modalAddMenu, setModalAddMenu] = useState(null);\n  const [modalAddImg, setModalAddImg] = useState(null);\n  const [modalAddAudio, setModalAddAudio] = useState(null);\n  const [modalAddRandomizer, setModalAddRandomizer] = useState(null);\n  const [modalAddVideo, setModalAddVideo] = useState(null);\n  const [modalAddSingleBlock, setModalAddSingleBlock] = useState(null);\n  const [modalAddTicket, setModalAddTicket] = useState(null);\n  const [modalAddTypebot, setModalAddTypebot] = useState(null);\n  const [modalAddOpenAI, setModalAddOpenAI] = useState(null);\n  const [modalAddQuestion, setModalAddQuestion] = useState(null);\n\n  const connectionLineStyle = { stroke: \"#2b2b2b\", strokeWidth: \"6px\" };\n\n  const addNode = (type, data) => {\n    const posY = nodes[nodes.length - 1].position.y;\n    const posX =\n      nodes[nodes.length - 1].position.x + nodes[nodes.length - 1].width + 40;\n    if (type === \"start\") {\n      return setNodes((old) => {\n        return [\n        //  ...old.filter((item) => item.id !== \"1\"),\n          {\n            id: \"1\",\n            position: { x: posX, y: posY },\n            data: { label: \"Inicio do fluxo\" },\n            type: \"start\",\n          },\n        ];\n      });\n    }\n    if (type === \"text\") {\n      return setNodes((old) => {\n        return [\n          ...old,\n          {\n            id: geraStringAleatoria(30),\n            position: { x: posX, y: posY },\n            data: { label: data.text },\n            type: \"message\",\n          },\n        ];\n      });\n    }\n    if (type === \"interval\") {\n      return setNodes((old) => {\n        return [\n          ...old,\n          {\n            id: geraStringAleatoria(30),\n            position: { x: posX, y: posY },\n            data: { label: `Intervalo ${data.sec} seg.`, sec: data.sec },\n            type: \"interval\",\n          },\n        ];\n      });\n    }\n    if (type === \"condition\") {\n      return setNodes((old) => {\n        return [\n          ...old,\n          {\n            id: geraStringAleatoria(30),\n            position: { x: posX, y: posY },\n            data: {\n              key: data.key,\n              condition: data.condition,\n              value: data.value,\n            },\n            type: \"condition\",\n          },\n        ];\n      });\n    }\n    if (type === \"menu\") {\n      return setNodes((old) => {\n        return [\n          ...old,\n          {\n            id: geraStringAleatoria(30),\n            position: { x: posX, y: posY },\n            data: {\n              message: data.message,\n              arrayOption: data.arrayOption,\n            },\n            type: \"menu\",\n          },\n        ];\n      });\n    }\n    if (type === \"img\") {\n      return setNodes((old) => {\n        return [\n          ...old,\n          {\n            id: geraStringAleatoria(30),\n            position: { x: posX, y: posY },\n            data: { url: data.url },\n            type: \"img\",\n          },\n        ];\n      });\n    }\n    if (type === \"audio\") {\n      return setNodes((old) => {\n        return [\n          ...old,\n          {\n            id: geraStringAleatoria(30),\n            position: { x: posX, y: posY },\n            data: { url: data.url, record: data.record },\n            type: \"audio\",\n          },\n        ];\n      });\n    }\n    if (type === \"randomizer\") {\n      return setNodes((old) => {\n        return [\n          ...old,\n          {\n            id: geraStringAleatoria(30),\n            position: { x: posX, y: posY },\n            data: { percent: data.percent },\n            type: \"randomizer\",\n          },\n        ];\n      });\n    }\n    if (type === \"video\") {\n      return setNodes((old) => {\n        return [\n          ...old,\n          {\n            id: geraStringAleatoria(30),\n            position: { x: posX, y: posY },\n            data: { url: data.url },\n            type: \"video\",\n          },\n        ];\n      });\n    }\n    if (type === \"singleBlock\") {\n      return setNodes((old) => {\n        return [\n          ...old,\n          {\n            id: geraStringAleatoria(30),\n            position: { x: posX, y: posY },\n            data: { ...data },\n            type: \"singleBlock\",\n          },\n        ];\n      });\n    }\n\n    if (type === \"ticket\") {\n      return setNodes((old) => {\n        return [\n          ...old,\n          {\n            id: geraStringAleatoria(30),\n            position: { x: posX, y: posY },\n            data: { ...data },\n            type: \"ticket\",\n          },\n        ];\n      });\n    }\n\n    if (type === \"typebot\") {\n      return setNodes((old) => {\n        return [\n          ...old,\n          {\n            id: geraStringAleatoria(30),\n            position: { x: posX, y: posY },\n            data: { ...data },\n            type: \"typebot\",\n          },\n        ];\n      });\n    }\n\n    if (type === \"openai\") {\n      return setNodes((old) => {\n        return [\n          ...old,\n          {\n            id: geraStringAleatoria(30),\n            position: { x: posX, y: posY },\n            data: { ...data },\n            type: \"openai\",\n          },\n        ];\n      });\n    }\n\n    if (type === \"question\") {\n      return setNodes((old) => {\n        return [\n          ...old,\n          {\n            id: geraStringAleatoria(30),\n            position: { x: posX, y: posY },\n            data: { ...data },\n            type: \"question\",\n          },\n        ];\n      });\n    }\n  };\n\n  const textAdd = (data) => {\n    addNode(\"text\", data);\n  };\n\n  const intervalAdd = (data) => {\n    addNode(\"interval\", data);\n  };\n\n  const conditionAdd = (data) => {\n    addNode(\"condition\", data);\n  };\n\n  const menuAdd = (data) => {\n    addNode(\"menu\", data);\n  };\n\n  const imgAdd = (data) => {\n    addNode(\"img\", data);\n  };\n\n  const audioAdd = (data) => {\n    addNode(\"audio\", data);\n  };\n\n  const randomizerAdd = (data) => {\n    addNode(\"randomizer\", data);\n  };\n\n  const videoAdd = (data) => {\n    addNode(\"video\", data);\n  };\n\n  const singleBlockAdd = (data) => {\n    addNode(\"singleBlock\", data);\n  };\n\n  const ticketAdd = (data) => {\n    addNode(\"ticket\", data);\n  };\n\n  const typebotAdd = (data) => {\n    addNode(\"typebot\", data);\n  };\n\n  const openaiAdd = (data) => {\n    addNode(\"openai\", data);\n  };\n\n  const questionAdd = (data) => {\n    addNode(\"question\", data);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        try {\n          const { data } = await api.get(`/flowbuilder/flow/${id}`);\n          if (data.flow.flow !== null) {\n            const flowNodes = data.flow.flow.nodes\n            setNodes(flowNodes);\n            setEdges(data.flow.flow.connections);\n            const filterVariables = flowNodes.filter(nd  => nd.type === \"question\")\n            const variables = filterVariables.map(variable => variable.data.typebotIntegration.answerKey)\n            localStorage.setItem('variables', JSON.stringify(variables))\n          }\n          setLoading(false);\n        } catch (err) {\n          toastError(err);\n        }\n      };\n      fetchContacts();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [id]);\n\n  useEffect(() => {\n    if (storageItems.action === \"delete\") {\n      setNodes((old) => old.filter((item) => item.id !== storageItems.node));\n      setEdges((old) => {\n        const newData = old.filter((item) => item.source !== storageItems.node);\n        const newClearTarget = newData.filter(\n          (item) => item.target !== storageItems.node\n        );\n        return newClearTarget;\n      });\n      storageItems.setNodesStorage(\"\");\n      storageItems.setAct(\"idle\");\n    }\n    if (storageItems.action === \"duplicate\") {\n      const nodeDuplicate = nodes.filter(\n        (item) => item.id === storageItems.node\n      )[0];\n      const maioresX = nodes.map((node) => node.position.x);\n      const maiorX = Math.max(...maioresX);\n      const finalY = nodes[nodes.length - 1].position.y;\n      const nodeNew = {\n        ...nodeDuplicate,\n        id: geraStringAleatoria(30),\n        position: {\n          x: maiorX + 240,\n          y: finalY,\n        },\n        selected: false,\n        style: { backgroundColor: \"#555555\", padding: 0, borderRadius: 8 },\n      };\n      setNodes((old) => [...old, nodeNew]);\n      storageItems.setNodesStorage(\"\");\n      storageItems.setAct(\"idle\");\n    }\n  }, [storageItems.action]);\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [setEdges]\n  );\n\n  const saveFlow = async () => {\n    await api\n      .post(\"/flowbuilder/flow\", {\n        idFlow: id,\n        nodes: nodes,\n        connections: edges,\n      })\n      .then((res) => {\n        toast.success(\"Fluxo salvo com sucesso\");\n      });\n  };\n\n  const doubleClick = (event, node) => {\n    console.log(\"NODE\", node);\n    setDataNode(node);\n    if (node.type === \"message\") {\n      setModalAddText(\"edit\");\n    }\n    if (node.type === \"interval\") {\n      setModalAddInterval(\"edit\");\n    }\n\n    if (node.type === \"menu\") {\n      setModalAddMenu(\"edit\");\n    }\n    if (node.type === \"img\") {\n      setModalAddImg(\"edit\");\n    }\n    if (node.type === \"audio\") {\n      setModalAddAudio(\"edit\");\n    }\n    if (node.type === \"randomizer\") {\n      setModalAddRandomizer(\"edit\");\n    }\n    if (node.type === \"singleBlock\") {\n      setModalAddSingleBlock(\"edit\");\n    }\n    if (node.type === \"ticket\") {\n      setModalAddTicket(\"edit\");\n    }\n    if (node.type === \"typebot\") {\n      setModalAddTypebot(\"edit\");\n    }\n    if (node.type === \"openai\") {\n      setModalAddOpenAI(\"edit\");\n    }\n    if (node.type === \"question\") {\n      setModalAddQuestion(\"edit\");\n    }\n  };\n\n  const clickNode = (event, node) => {\n    setNodes((old) =>\n      old.map((item) => {\n        if (item.id === node.id) {\n          return {\n            ...item,\n            style: { backgroundColor: \"#0000FF\", padding: 1, borderRadius: 8 },\n          };\n        }\n        return {\n          ...item,\n          style: { backgroundColor: \"#13111C\", padding: 0, borderRadius: 8 },\n        };\n      })\n    );\n  };\n  const clickEdge = (event, node) => {\n    setNodes((old) =>\n      old.map((item) => {\n        return {\n          ...item,\n          style: { backgroundColor: \"#13111C\", padding: 0, borderRadius: 8 },\n        };\n      })\n    );\n  };\n\n  const updateNode = (dataAlter) => {\n    setNodes((old) =>\n      old.map((itemNode) => {\n        if (itemNode.id === dataAlter.id) {\n          return dataAlter;\n        }\n        return itemNode;\n      })\n    );\n    setModalAddText(null);\n    setModalAddInterval(null);\n    setModalAddMenu(null);\n    setModalAddOpenAI(null);\n    setModalAddTypebot(null);\n  };\n\n  const actions = [\n    {\n      icon: (\n        <RocketLaunch\n          sx={{\n            color: \"#3ABA38\",\n          }}\n        />\n      ),\n      name: \"Inicio\",\n      type: \"start\",\n    },\n    {\n      icon: (\n        <LibraryBooks\n          sx={{\n            color: \"#EC5858\",\n          }}\n        />\n      ),\n      name: \"Conteúdo\",\n      type: \"content\",\n    },\n    {\n      icon: (\n        <DynamicFeed\n          sx={{\n            color: \"#683AC8\",\n          }}\n        />\n      ),\n      name: \"Menu\",\n      type: \"menu\",\n    },\n    {\n      icon: (\n        <CallSplit\n          sx={{\n            color: \"#1FBADC\",\n          }}\n        />\n      ),\n      name: \"Randomizador\",\n      type: \"random\",\n    },\n    {\n      icon: (\n        <AccessTime\n          sx={{\n            color: \"#F7953B\",\n          }}\n        />\n      ),\n      name: \"Intervalo\",\n      type: \"interval\",\n    },\n    {\n      icon: (\n        <ConfirmationNumber\n          sx={{\n            color: \"#F7953B\",\n          }}\n        />\n      ),\n      name: \"Ticket\",\n      type: \"ticket\",\n    },\n    {\n      icon: (\n        <Box\n          component=\"img\"\n          sx={{\n            width: 24,\n            height: 24,\n            color: \"#3aba38\",\n          }}\n          src={typebotIcon}\n          alt=\"icon\"\n        />\n      ),\n      name: \"TypeBot\",\n      type: \"typebot\",\n    },\n    {\n      icon: (\n        <SiOpenai\n          sx={{\n            color: \"#F7953B\",\n          }}\n        />\n      ),\n      name: \"OpenAI\",\n      type: \"openai\",\n    },\n    {\n      icon: (\n        <BallotIcon\n          sx={{\n            color: \"#F7953B\",\n          }}\n        />\n      ),\n      name: \"Pergunta\",\n      type: \"question\",\n    },\n  ];\n\n  const clickActions = (type) => {\n    switch (type) {\n      case \"start\":\n        addNode(\"start\");\n        break;\n      case \"menu\":\n        setModalAddMenu(\"create\");\n        break;\n      case \"content\":\n        setModalAddSingleBlock(\"create\");\n        break;\n      case \"random\":\n        setModalAddRandomizer(\"create\");\n        break;\n      case \"interval\":\n        setModalAddInterval(\"create\");\n        break;\n      case \"ticket\":\n        setModalAddTicket(\"create\");\n        break;\n      case \"typebot\":\n        setModalAddTypebot(\"create\");\n        break;\n      case \"openai\":\n        setModalAddOpenAI(\"create\");\n        break;\n      case \"question\":\n        setModalAddQuestion(\"create\");\n      default:\n    }\n  };\n\n  return (\n    <Stack sx={{ height: \"100vh\" }}>\n      <FlowBuilderAddTextModal\n        open={modalAddText}\n        onSave={textAdd}\n        data={dataNode}\n        onUpdate={updateNode}\n        close={setModalAddText}\n      />\n      <FlowBuilderIntervalModal\n        open={modalAddInterval}\n        onSave={intervalAdd}\n        data={dataNode}\n        onUpdate={updateNode}\n        close={setModalAddInterval}\n      />\n      <FlowBuilderMenuModal\n        open={modalAddMenu}\n        onSave={menuAdd}\n        data={dataNode}\n        onUpdate={updateNode}\n        close={setModalAddMenu}\n      />\n      <FlowBuilderAddImgModal\n        open={modalAddImg}\n        onSave={imgAdd}\n        data={dataNode}\n        onUpdate={updateNode}\n        close={setModalAddImg}\n      />\n      <FlowBuilderAddAudioModal\n        open={modalAddAudio}\n        onSave={audioAdd}\n        data={dataNode}\n        onUpdate={updateNode}\n        close={setModalAddAudio}\n      />\n      <FlowBuilderRandomizerModal\n        open={modalAddRandomizer}\n        onSave={randomizerAdd}\n        data={dataNode}\n        onUpdate={updateNode}\n        close={setModalAddRandomizer}\n      />\n      <FlowBuilderAddVideoModal\n        open={modalAddVideo}\n        onSave={videoAdd}\n        data={dataNode}\n        onUpdate={updateNode}\n        close={setModalAddVideo}\n      />\n      <FlowBuilderSingleBlockModal\n        open={modalAddSingleBlock}\n        onSave={singleBlockAdd}\n        data={dataNode}\n        onUpdate={updateNode}\n        close={setModalAddSingleBlock}\n      />\n      <FlowBuilderTicketModal\n        open={modalAddTicket}\n        onSave={ticketAdd}\n        data={dataNode}\n        onUpdate={updateNode}\n        close={setModalAddTicket}\n      />\n\n      <FlowBuilderOpenAIModal\n        open={modalAddOpenAI}\n        onSave={openaiAdd}\n        data={dataNode}\n        onUpdate={updateNode}\n        close={setModalAddOpenAI}\n      />\n\n      <FlowBuilderTypebotModal\n        open={modalAddTypebot}\n        onSave={typebotAdd}\n        data={dataNode}\n        onUpdate={updateNode}\n        close={setModalAddTypebot}\n      />\n\n      <FlowBuilderAddQuestionModal\n        open={modalAddQuestion}\n        onSave={questionAdd}\n        data={dataNode}\n        onUpdate={updateNode}\n        close={setModalAddQuestion}\n      />\n\n      <MainHeader>\n        <Title>Desenhe seu fluxo</Title>\n      </MainHeader>\n      {!loading && (\n        <Paper\n          className={classes.mainPaper}\n          variant=\"outlined\"\n          onScroll={handleScroll}\n        >\n          <Stack>\n            <SpeedDial\n              ariaLabel=\"SpeedDial basic example\"\n              sx={{\n                position: \"absolute\",\n                top: 16,\n                left: 16,\n                \".MuiSpeedDial-fab\": {\n                  backgroundColor: colorPrimary(),\n                  \"&:hover\": {\n                    backgroundColor: colorPrimary(),\n                  },\n                },\n              }}\n              icon={<SpeedDialIcon />}\n              direction={\"down\"}\n            >\n              {actions.map((action) => (\n                <SpeedDialAction\n                  key={action.name}\n                  icon={action.icon}\n                  tooltipTitle={action.name}\n                  tooltipOpen\n                  tooltipPlacement={\"right\"}\n                  onClick={() => {\n                    console.log(action.type);\n                    clickActions(action.type);\n                  }}\n                />\n              ))}\n            </SpeedDial>\n          </Stack>\n          <Stack\n            sx={{\n              position: \"absolute\",\n              justifyContent: \"center\",\n              flexDirection: \"row\",\n              width: \"100%\",\n            }}\n          >\n            <Typography\n              style={{ color: \"#010101\", textShadow: \"#010101 1px 0 10px\" }}\n            >\n              Não se esqueça de salvar seu fluxo!\n            </Typography>\n          </Stack>\n          <Stack direction={\"row\"} justifyContent={\"end\"}>\n            <Button\n              sx={{ textTransform: \"none\" }}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => saveFlow()}\n            >\n              Salvar\n            </Button>\n          </Stack>\n\n          <Stack\n            direction={\"row\"}\n            style={{\n              width: \"100%\",\n              height: \"90%\",\n              position: \"relative\",\n              display: \"flex\",\n            }}\n          >\n            <ReactFlow\n              nodes={nodes}\n              edges={edges}\n              deleteKeyCode={[\"Backspace\", \"Delete\"]}\n              onNodesChange={onNodesChange}\n              onEdgesChange={onEdgesChange}\n              onNodeDoubleClick={doubleClick}\n              onNodeClick={clickNode}\n              onEdgeClick={clickEdge}\n              onConnect={onConnect}\n              nodeTypes={nodeTypes}\n              fitView\n              connectionLineStyle={connectionLineStyle}\n              style={{\n                //backgroundImage: `url(${imgBackground})`,\n                //backgroundSize: \"cover\"\n                backgroundColor: \"#F8F9FA\",\n              }}\n              edgeTypes={edgeTypes}\n              variant={\"cross\"}\n              defaultEdgeOptions={{\n                style: { color: \"#ff0000\", strokeWidth: \"6px\" },\n                animated: false,\n              }}\n            >\n              <Controls />\n              <MiniMap />\n              <Background variant=\"dots\" gap={12} size={-1} />\n            </ReactFlow>\n\n            <Stack\n              style={{\n                backgroundColor: \"#FAFAFA\",\n                height: \"20px\",\n                width: \"58px\",\n                position: \"absolute\",\n                bottom: 0,\n                right: 0,\n                zIndex: 1111,\n              }}\n            />\n            {/* <Stack\n                style={{\n                  backgroundColor: \"#1B1B1B\",\n                  height: \"70%\",\n                  width: \"150px\",\n                  position: \"absolute\",\n                  left: 0,\n                  top: 0,\n                  zIndex: 1111,\n                  borderRadius: 3,\n                  padding: 8\n                }}\n                spacing={1}\n              >\n                <Typography style={{ color: \"#ffffff\", textAlign: \"center\" }}>\n                  Adicionar\n                </Typography>\n                <Button\n                  onClick={() => addNode(\"start\")}\n                  variant=\"contained\"\n                  style={{\n                    backgroundColor: \"#3ABA38\",\n                    color: \"#ffffff\",\n                    padding: 8,\n                    \"&:hover\": {\n                      backgroundColor: \"#3e3b7f\"\n                    },\n                    textTransform: \"none\"\n                  }}\n                >\n                  <RocketLaunch\n                    sx={{\n                      width: \"16px\",\n                      height: \"16px\",\n                      marginRight: \"4px\"\n                    }}\n                  />\n                  Inicio\n                </Button>\n                <Button\n                  onClick={() => setModalAddText(\"create\")}\n                  variant=\"contained\"\n                  style={{\n                    backgroundColor: \"#6865A5\",\n                    color: \"#ffffff\",\n                    padding: 8,\n                    textTransform: \"none\"\n                  }}\n                >\n                  <Message\n                    sx={{\n                      width: \"16px\",\n                      height: \"16px\",\n                      marginRight: \"4px\"\n                    }}\n                  />\n                  Texto\n                </Button>\n                <Button\n                  onClick={() => setModalAddInterval(\"create\")}\n                  variant=\"contained\"\n                  style={{\n                    backgroundColor: \"#F7953B\",\n                    color: \"#ffffff\",\n                    padding: 8,\n                    textTransform: \"none\"\n                  }}\n                >\n                  <AccessTime\n                    sx={{\n                      width: \"16px\",\n                      height: \"16px\",\n                      marginRight: \"4px\"\n                    }}\n                  />\n                  Intervalo\n                </Button>\n                <Button\n                  onClick={() => setModalAddCondition(\"create\")}\n                  variant=\"contained\"\n                  disabled\n                  style={{\n                    backgroundColor: \"#524d4d\",\n                    color: \"#cccaed\",\n                    padding: 8,\n                    textTransform: \"none\"\n                  }}\n                >\n                  <ImportExport\n                    sx={{\n                      width: \"16px\",\n                      height: \"16px\",\n                      marginRight: \"4px\"\n                    }}\n                  />\n                  Condição\n                </Button>\n                <Button\n                  onClick={() => setModalAddMenu(\"create\")}\n                  variant=\"contained\"\n                  style={{\n                    backgroundColor: \"#683AC8\",\n                    color: \"#ffffff\",\n                    padding: 8,\n                    textTransform: \"none\"\n                  }}\n                >\n                  <DynamicFeed\n                    sx={{\n                      width: \"16px\",\n                      height: \"16px\",\n                      marginRight: \"4px\"\n                    }}\n                  />\n                  Menu\n                </Button>\n                <Button\n                  onClick={() => setModalAddAudio(\"create\")}\n                  variant=\"contained\"\n                  style={{\n                    backgroundColor: \"#6865A5\",\n                    color: \"#ffffff\",\n                    padding: 8,\n                    textTransform: \"none\"\n                  }}\n                >\n                  <MicNone\n                    sx={{\n                      width: \"16px\",\n                      height: \"16px\",\n                      marginRight: \"4px\"\n                    }}\n                  />\n                  Audio\n                </Button>\n                <Button\n                  onClick={() => setModalAddVideo(\"create\")}\n                  variant=\"contained\"\n                  style={{\n                    backgroundColor: \"#6865A5\",\n                    color: \"#ffffff\",\n                    padding: 8,\n                    textTransform: \"none\"\n                  }}\n                >\n                  <Videocam\n                    sx={{\n                      width: \"16px\",\n                      height: \"16px\",\n                      marginRight: \"4px\"\n                    }}\n                  />\n                  Video\n                </Button>\n                <Button\n                  onClick={() => setModalAddImg(\"create\")}\n                  variant=\"contained\"\n                  style={{\n                    backgroundColor: \"#6865A5\",\n                    color: \"#ffffff\",\n                    padding: 8,\n                    textTransform: \"none\"\n                  }}\n                >\n                  <Image\n                    sx={{\n                      width: \"16px\",\n                      height: \"16px\",\n                      marginRight: \"4px\"\n                    }}\n                  />\n                  Imagem\n                </Button>\n                <Button\n                  onClick={() => setModalAddRandomizer(\"create\")}\n                  variant=\"contained\"\n                  style={{\n                    backgroundColor: \"#1FBADC\",\n                    color: \"#ffffff\",\n                    padding: 8,\n                    textTransform: \"none\"\n                  }}\n                >\n                  <CallSplit\n                    sx={{\n                      width: \"16px\",\n                      height: \"16px\",\n                      marginRight: \"4px\"\n                    }}\n                  />\n                  Randomizador\n                </Button>\n                <Button\n                  onClick={() => setModalAddSingleBlock(\"create\")}\n                  variant=\"contained\"\n                  style={{\n                    backgroundColor: \"#EC5858\",\n                    color: \"#ffffff\",\n                    padding: 8,\n                    textTransform: \"none\"\n                  }}\n                >\n                  <LibraryBooks\n                    sx={{\n                      width: \"16px\",\n                      height: \"16px\",\n                      marginRight: \"4px\"\n                    }}\n                  />\n                  Conteúdo\n                </Button>\n              </Stack> */}\n          </Stack>\n        </Paper>\n      )}\n      {loading && (\n        <Stack justifyContent={\"center\"} alignItems={\"center\"} height={\"70vh\"}>\n          <CircularProgress />\n        </Stack>\n      )}\n    </Stack>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}