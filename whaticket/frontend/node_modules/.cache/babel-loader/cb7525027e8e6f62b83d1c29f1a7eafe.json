{"ast":null,"code":"var _jsxFileName = \"/workspaces/simao/whaticket/frontend/src/components/TicketsListCustom/index.js\";\nimport React, { useState, useEffect, useReducer, useContext, useMemo } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TicketListItem from \"../TicketListItemCustom\";\nimport TicketsListSkeleton from \"../TicketsListSkeleton\";\nimport useTickets from \"../../hooks/useTickets\";\nimport { i18n } from \"../../translate/i18n\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nconst useStyles = makeStyles(theme => ({\n  ticketsListWrapper: {\n    position: \"relative\",\n    display: \"flex\",\n    height: \"100%\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  ticketsList: {\n    flex: 1,\n    maxHeight: \"100%\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n    borderTop: \"2px solid rgba(0, 0, 0, 0.12)\"\n  },\n  ticketsListHeader: {\n    color: \"rgb(67, 83, 105)\",\n    zIndex: 2,\n    backgroundColor: \"white\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  ticketsCount: {\n    fontWeight: \"normal\",\n    color: \"rgb(104, 121, 146)\",\n    marginLeft: \"8px\",\n    fontSize: \"14px\"\n  },\n  noTicketsText: {\n    textAlign: \"center\",\n    color: \"rgb(104, 121, 146)\",\n    fontSize: \"14px\",\n    lineHeight: \"1.4\"\n  },\n  noTicketsTitle: {\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    margin: \"0px\"\n  },\n  noTicketsDiv: {\n    display: \"flex\",\n    // height: \"190px\",\n    margin: 40,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n}));\nconst ticketSortAsc = (a, b) => {\n  if (a.updatedAt < b.updatedAt) {\n    return -1;\n  }\n  if (a.updatedAt > b.updatedAt) {\n    return 1;\n  }\n  return 0;\n};\nconst ticketSortDesc = (a, b) => {\n  if (a.updatedAt > b.updatedAt) {\n    return -1;\n  }\n  if (a.updatedAt < b.updatedAt) {\n    return 1;\n  }\n  return 0;\n};\nconst reducer = (state, action) => {\n  //console.log(\"action\", action, state)\n  const sortDir = action.sortDir;\n  if (action.type === \"LOAD_TICKETS\") {\n    const newTickets = action.payload;\n    newTickets.forEach(ticket => {\n      const ticketIndex = state.findIndex(t => t.id === ticket.id);\n      if (ticketIndex !== -1) {\n        state[ticketIndex] = ticket;\n        if (ticket.unreadMessages > 0) {\n          state.unshift(state.splice(ticketIndex, 1)[0]);\n        }\n      } else {\n        state.push(ticket);\n      }\n    });\n    if (sortDir && ['ASC', 'DESC'].includes(sortDir)) {\n      sortDir === 'ASC' ? state.sort(ticketSortAsc) : state.sort(ticketSortDesc);\n    }\n    return [...state];\n  }\n  if (action.type === \"RESET_UNREAD\") {\n    const ticketId = action.payload;\n    const ticketIndex = state.findIndex(t => t.id === ticketId);\n    if (ticketIndex !== -1) {\n      state[ticketIndex].unreadMessages = 0;\n    }\n    if (sortDir && ['ASC', 'DESC'].includes(sortDir)) {\n      sortDir === 'ASC' ? state.sort(ticketSortAsc) : state.sort(ticketSortDesc);\n    }\n    return [...state];\n  }\n  if (action.type === \"UPDATE_TICKET\") {\n    const ticket = action.payload;\n    const ticketIndex = state.findIndex(t => t.id === ticket.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex] = ticket;\n    } else {\n      state.unshift(ticket);\n    }\n    if (sortDir && ['ASC', 'DESC'].includes(sortDir)) {\n      sortDir === 'ASC' ? state.sort(ticketSortAsc) : state.sort(ticketSortDesc);\n    }\n    return [...state];\n  }\n  if (action.type === \"UPDATE_TICKET_UNREAD_MESSAGES\") {\n    const ticket = action.payload;\n    const ticketIndex = state.findIndex(t => t.id === ticket.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex] = ticket;\n      state.unshift(state.splice(ticketIndex, 1)[0]);\n    } else {\n      if (action.status === action.payload.status) {\n        state.unshift(ticket);\n      }\n    }\n    if (sortDir && ['ASC', 'DESC'].includes(sortDir)) {\n      sortDir === 'ASC' ? state.sort(ticketSortAsc) : state.sort(ticketSortDesc);\n    }\n    return [...state];\n  }\n  if (action.type === \"UPDATE_TICKET_CONTACT\") {\n    const contact = action.payload;\n    const ticketIndex = state.findIndex(t => t.contactId === contact.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex].contact = contact;\n    }\n    return [...state];\n  }\n  if (action.type === \"DELETE_TICKET\") {\n    const ticketId = action.payload;\n    const ticketIndex = state.findIndex(t => t.id === ticketId);\n    if (ticketIndex !== -1) {\n      state.splice(ticketIndex, 1);\n    }\n    if (sortDir && ['ASC', 'DESC'].includes(sortDir)) {\n      sortDir === 'ASC' ? state.sort(ticketSortAsc) : state.sort(ticketSortDesc);\n    }\n    return [...state];\n  }\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\nconst TicketsListCustom = props => {\n  const {\n    setTabOpen,\n    status,\n    searchParam,\n    searchOnMessages,\n    tags,\n    users,\n    showAll,\n    selectedQueueIds,\n    updateCount,\n    style,\n    whatsappIds,\n    forceSearch,\n    statusFilter,\n    userFilter,\n    sortTickets\n  } = props;\n  const classes = useStyles();\n  const [pageNumber, setPageNumber] = useState(1);\n  let [ticketsList, dispatch] = useReducer(reducer, []);\n  //   const socketManager = useContext(SocketContext);\n  const {\n    user,\n    socket\n  } = useContext(AuthContext);\n  const {\n    profile,\n    queues\n  } = user;\n  const showTicketWithoutQueue = user.allTicket === 'enable';\n  const companyId = user.companyId;\n  useEffect(() => {\n    dispatch({\n      type: \"RESET\"\n    });\n    setPageNumber(1);\n  }, [status, searchParam, dispatch, showAll, tags, users, forceSearch, selectedQueueIds, whatsappIds, statusFilter, sortTickets, searchOnMessages]);\n  const {\n    tickets,\n    hasMore,\n    loading\n  } = useTickets({\n    pageNumber,\n    searchParam,\n    status,\n    showAll,\n    searchOnMessages: searchOnMessages ? \"true\" : \"false\",\n    tags: JSON.stringify(tags),\n    users: JSON.stringify(users),\n    queueIds: JSON.stringify(selectedQueueIds),\n    whatsappIds: JSON.stringify(whatsappIds),\n    statusFilter: JSON.stringify(statusFilter),\n    userFilter,\n    sortTickets\n  });\n  useEffect(() => {\n    // const queueIds = queues.map((q) => q.id);\n    // const filteredTickets = tickets.filter(\n    //     (t) => queueIds.indexOf(t.queueId) > -1\n    // );\n    // const allticket = user.allTicket === 'enabled';\n    // if (profile === \"admin\" || allTicket || allowGroup || allHistoric) {\n    if (companyId) {\n      dispatch({\n        type: \"LOAD_TICKETS\",\n        payload: tickets,\n        status,\n        sortDir: sortTickets\n      });\n    }\n    // } else {\n    //  dispatch({ type: \"LOAD_TICKETS\", payload: filteredTickets });\n    // }\n  }, [tickets]);\n  useEffect(() => {\n    const shouldUpdateTicket = ticket => {\n      return (!(ticket === null || ticket === void 0 ? void 0 : ticket.userId) || (ticket === null || ticket === void 0 ? void 0 : ticket.userId) === (user === null || user === void 0 ? void 0 : user.id) || showAll) && (!(ticket === null || ticket === void 0 ? void 0 : ticket.queueId) && showTicketWithoutQueue || selectedQueueIds.indexOf(ticket === null || ticket === void 0 ? void 0 : ticket.queueId) > -1);\n      // (!blockNonDefaultConnections || (ticket.status == 'group' && ignoreUserConnectionForGroups) || !user?.whatsappId || ticket.whatsappId == user?.whatsappId);\n    };\n    // const shouldUpdateTicketUser = (ticket) =>\n    //     selectedQueueIds.indexOf(ticket?.queueId) > -1 && (ticket?.userId === user?.id || !ticket?.userId);\n\n    const notBelongsToUserQueues = ticket => ticket.queueId && selectedQueueIds.indexOf(ticket.queueId) === -1;\n    const onCompanyTicketTicketsList = data => {\n      // console.log(\"onCompanyTicketTicketsList\", data)\n      if (data.action === \"updateUnread\") {\n        dispatch({\n          type: \"RESET_UNREAD\",\n          payload: data.ticketId,\n          status: status,\n          sortDir: sortTickets\n        });\n      }\n      // console.log(shouldUpdateTicket(data.ticket))\n      if (data.action === \"update\" && shouldUpdateTicket(data.ticket) && data.ticket.status === status) {\n        dispatch({\n          type: \"UPDATE_TICKET\",\n          payload: data.ticket,\n          status: status,\n          sortDir: sortTickets\n        });\n      }\n\n      // else if (data.action === \"update\" && shouldUpdateTicketUser(data.ticket) && data.ticket.status === status) {\n      //     dispatch({\n      //         type: \"UPDATE_TICKET\",\n      //         payload: data.ticket,\n      //     });\n      // }\n      if (data.action === \"update\" && notBelongsToUserQueues(data.ticket)) {\n        var _data$ticket;\n        dispatch({\n          type: \"DELETE_TICKET\",\n          payload: (_data$ticket = data.ticket) === null || _data$ticket === void 0 ? void 0 : _data$ticket.id,\n          status: status,\n          sortDir: sortTickets\n        });\n      }\n      if (data.action === \"delete\") {\n        dispatch({\n          type: \"DELETE_TICKET\",\n          payload: data === null || data === void 0 ? void 0 : data.ticketId,\n          status: status,\n          sortDir: sortTickets\n        });\n      }\n    };\n    const onCompanyAppMessageTicketsList = data => {\n      if (data.action === \"create\" && shouldUpdateTicket(data.ticket) && data.ticket.status === status) {\n        dispatch({\n          type: \"UPDATE_TICKET_UNREAD_MESSAGES\",\n          payload: data.ticket,\n          status: status,\n          sortDir: sortTickets\n        });\n      }\n      // else if (data.action === \"create\" && shouldUpdateTicketUser(data.ticket) && data.ticket.status === status) {\n      //     dispatch({\n      //         type: \"UPDATE_TICKET_UNREAD_MESSAGES\",\n      //         payload: data.ticket,\n      //     });\n      // }\n    };\n    const onCompanyContactTicketsList = data => {\n      if (data.action === \"update\" && data.contact) {\n        dispatch({\n          type: \"UPDATE_TICKET_CONTACT\",\n          payload: data.contact,\n          status: status,\n          sortDir: sortTickets\n        });\n      }\n    };\n    const onConnectTicketsList = () => {\n      if (status) {\n        socket.emit(\"joinTickets\", status);\n      } else {\n        socket.emit(\"joinNotification\");\n      }\n    };\n    socket.on(\"connect\", onConnectTicketsList);\n    socket.on(`company-${companyId}-ticket`, onCompanyTicketTicketsList);\n    socket.on(`company-${companyId}-appMessage`, onCompanyAppMessageTicketsList);\n    socket.on(`company-${companyId}-contact`, onCompanyContactTicketsList);\n    return () => {\n      if (status) {\n        socket.emit(\"leaveTickets\", status);\n      } else {\n        socket.emit(\"leaveNotification\");\n      }\n      socket.off(\"connect\", onConnectTicketsList);\n      socket.off(`company-${companyId}-ticket`, onCompanyTicketTicketsList);\n      socket.off(`company-${companyId}-appMessage`, onCompanyAppMessageTicketsList);\n      socket.off(`company-${companyId}-contact`, onCompanyContactTicketsList);\n    };\n  }, [status, showAll, user, selectedQueueIds, tags, users, profile, queues, sortTickets, showTicketWithoutQueue]);\n  useEffect(() => {\n    if (typeof updateCount === \"function\") {\n      updateCount(ticketsList.length);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ticketsList]);\n  const loadMore = () => {\n    setPageNumber(prevState => prevState + 1);\n  };\n  const handleScroll = e => {\n    if (!hasMore || loading) return;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n  if (status && status !== \"search\") {\n    ticketsList = ticketsList.filter(ticket => ticket.status === status);\n  }\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.ticketsListWrapper,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    square: true,\n    name: \"closed\",\n    elevation: 0,\n    className: classes.ticketsList,\n    onScroll: handleScroll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    style: {\n      paddingTop: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 17\n    }\n  }, ticketsList.length === 0 && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noTicketsDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.noTicketsTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 29\n    }\n  }, i18n.t(\"ticketsList.noTicketsTitle\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.noTicketsText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 29\n    }\n  }, i18n.t(\"ticketsList.noTicketsMessage\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, ticketsList.map(ticket =>\n  /*#__PURE__*/\n  // <List key={ticket.id}>\n  //     {console.log(ticket)}\n  React.createElement(TicketListItem, {\n    ticket: ticket,\n    key: ticket.id,\n    setTabOpen: setTabOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 33\n    }\n  })\n  // </List>\n  )), loading && /*#__PURE__*/React.createElement(TicketsListSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 33\n    }\n  }))));\n};\nexport default TicketsListCustom;","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useMemo","makeStyles","List","Paper","TicketListItem","TicketsListSkeleton","useTickets","i18n","AuthContext","useStyles","theme","ticketsListWrapper","position","display","height","flexDirection","overflow","borderTopRightRadius","borderBottomRightRadius","ticketsList","flex","maxHeight","overflowY","scrollbarStyles","borderTop","ticketsListHeader","color","zIndex","backgroundColor","borderBottom","alignItems","justifyContent","ticketsCount","fontWeight","marginLeft","fontSize","noTicketsText","textAlign","lineHeight","noTicketsTitle","margin","noTicketsDiv","ticketSortAsc","a","b","updatedAt","ticketSortDesc","reducer","state","action","sortDir","type","newTickets","payload","forEach","ticket","ticketIndex","findIndex","t","id","unreadMessages","unshift","splice","push","includes","sort","ticketId","status","contact","contactId","TicketsListCustom","props","setTabOpen","searchParam","searchOnMessages","tags","users","showAll","selectedQueueIds","updateCount","style","whatsappIds","forceSearch","statusFilter","userFilter","sortTickets","classes","pageNumber","setPageNumber","dispatch","user","socket","profile","queues","showTicketWithoutQueue","allTicket","companyId","tickets","hasMore","loading","JSON","stringify","queueIds","shouldUpdateTicket","userId","queueId","indexOf","notBelongsToUserQueues","onCompanyTicketTicketsList","data","_data$ticket","onCompanyAppMessageTicketsList","onCompanyContactTicketsList","onConnectTicketsList","emit","on","off","length","loadMore","prevState","handleScroll","e","scrollTop","scrollHeight","clientHeight","currentTarget","filter","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","square","name","elevation","onScroll","paddingTop","Fragment","map","key"],"sources":["/workspaces/simao/whaticket/frontend/src/components/TicketsListCustom/index.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useContext, useMemo } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport TicketListItem from \"../TicketListItemCustom\";\nimport TicketsListSkeleton from \"../TicketsListSkeleton\";\n\nimport useTickets from \"../../hooks/useTickets\";\nimport { i18n } from \"../../translate/i18n\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    ticketsListWrapper: {\n        position: \"relative\",\n        display: \"flex\",\n        height: \"100%\",\n        flexDirection: \"column\",\n        overflow: \"hidden\",\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0,\n    },\n\n    ticketsList: {\n        flex: 1,\n        maxHeight: \"100%\",\n        overflowY: \"scroll\",\n        ...theme.scrollbarStyles,\n        borderTop: \"2px solid rgba(0, 0, 0, 0.12)\",\n    },\n\n    ticketsListHeader: {\n        color: \"rgb(67, 83, 105)\",\n        zIndex: 2,\n        backgroundColor: \"white\",\n        borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n\n    ticketsCount: {\n        fontWeight: \"normal\",\n        color: \"rgb(104, 121, 146)\",\n        marginLeft: \"8px\",\n        fontSize: \"14px\",\n    },\n\n    noTicketsText: {\n        textAlign: \"center\",\n        color: \"rgb(104, 121, 146)\",\n        fontSize: \"14px\",\n        lineHeight: \"1.4\",\n    },\n\n    noTicketsTitle: {\n        textAlign: \"center\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        margin: \"0px\",\n    },\n\n    noTicketsDiv: {\n        display: \"flex\",\n        // height: \"190px\",\n        margin: 40,\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n}));\n\nconst ticketSortAsc = (a, b) => {\n    \n    if (a.updatedAt < b.updatedAt) {\n        return -1;\n    }\n    if (a.updatedAt > b.updatedAt) {\n        return 1;\n    }\n    return 0;\n}\n\nconst ticketSortDesc = (a, b) => {\n   \n    if (a.updatedAt > b.updatedAt) {\n        return -1;\n    }\n    if (a.updatedAt < b.updatedAt) {\n        return 1;\n    }\n    return 0;\n}\n\nconst reducer = (state, action) => {\n    //console.log(\"action\", action, state)\n    const sortDir = action.sortDir;\n    \n    if (action.type === \"LOAD_TICKETS\") {\n        const newTickets = action.payload;\n\n        newTickets.forEach((ticket) => {\n            const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n            if (ticketIndex !== -1) {\n                state[ticketIndex] = ticket;\n                if (ticket.unreadMessages > 0) {\n                    state.unshift(state.splice(ticketIndex, 1)[0]);\n                }\n            } else {\n                state.push(ticket);\n            }\n        });\n        if (sortDir && ['ASC', 'DESC'].includes(sortDir)) {\n            sortDir === 'ASC' ? state.sort(ticketSortAsc) : state.sort(ticketSortDesc);\n        }\n\n        return [...state];\n    }\n\n    if (action.type === \"RESET_UNREAD\") {\n        const ticketId = action.payload;\n\n        const ticketIndex = state.findIndex((t) => t.id === ticketId);\n        if (ticketIndex !== -1) {\n            state[ticketIndex].unreadMessages = 0;\n        }\n\n        if (sortDir && ['ASC', 'DESC'].includes(sortDir)) {\n            sortDir === 'ASC' ? state.sort(ticketSortAsc) : state.sort(ticketSortDesc);\n        }\n\n        return [...state];\n    }\n\n    if (action.type === \"UPDATE_TICKET\") {\n        const ticket = action.payload;\n\n        const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n        if (ticketIndex !== -1) {\n            state[ticketIndex] = ticket;\n        } else {\n            state.unshift(ticket);\n        }\n        if (sortDir && ['ASC', 'DESC'].includes(sortDir)) {\n            sortDir === 'ASC' ? state.sort(ticketSortAsc) : state.sort(ticketSortDesc);\n        }\n\n        return [...state];\n    }\n\n    if (action.type === \"UPDATE_TICKET_UNREAD_MESSAGES\") {\n        const ticket = action.payload;\n\n        const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n        if (ticketIndex !== -1) {\n            state[ticketIndex] = ticket;\n            state.unshift(state.splice(ticketIndex, 1)[0]);\n        } else {\n            if (action.status === action.payload.status) {\n                state.unshift(ticket);\n            }\n        }\n        if (sortDir && ['ASC', 'DESC'].includes(sortDir)) {\n            sortDir === 'ASC' ? state.sort(ticketSortAsc) : state.sort(ticketSortDesc);\n        }\n\n        return [...state];\n    }\n\n    if (action.type === \"UPDATE_TICKET_CONTACT\") {\n        const contact = action.payload;\n        const ticketIndex = state.findIndex((t) => t.contactId === contact.id);\n        if (ticketIndex !== -1) {\n            state[ticketIndex].contact = contact;\n        }\n        return [...state];\n    }\n\n    if (action.type === \"DELETE_TICKET\") {\n        const ticketId = action.payload;\n        const ticketIndex = state.findIndex((t) => t.id === ticketId);\n        if (ticketIndex !== -1) {\n            state.splice(ticketIndex, 1);\n        }\n\n        if (sortDir && ['ASC', 'DESC'].includes(sortDir)) {\n            sortDir === 'ASC' ? state.sort(ticketSortAsc) : state.sort(ticketSortDesc);\n        }\n\n        return [...state];\n    }\n\n    if (action.type === \"RESET\") {\n        return [];\n    }\n};\n\nconst TicketsListCustom = (props) => {\n    const {\n        setTabOpen,\n        status,\n        searchParam,\n        searchOnMessages,\n        tags,\n        users,\n        showAll,\n        selectedQueueIds,\n        updateCount,\n        style,\n        whatsappIds,\n        forceSearch,\n        statusFilter,\n        userFilter,\n        sortTickets\n    } = props;\n\n    const classes = useStyles();\n    const [pageNumber, setPageNumber] = useState(1);\n    let [ticketsList, dispatch] = useReducer(reducer, []);\n    //   const socketManager = useContext(SocketContext);\n    const { user, socket } = useContext(AuthContext);\n\n    const { profile, queues } = user;\n    const showTicketWithoutQueue = user.allTicket === 'enable';\n    const companyId = user.companyId;\n\n    useEffect(() => {\n        dispatch({ type: \"RESET\" });\n        setPageNumber(1);\n    }, [status, searchParam, dispatch, showAll, tags, users, forceSearch, selectedQueueIds, whatsappIds, statusFilter, sortTickets, searchOnMessages]);\n\n    const { tickets, hasMore, loading } = useTickets({\n        pageNumber,\n        searchParam,\n        status,\n        showAll,\n        searchOnMessages: searchOnMessages ? \"true\" : \"false\",\n        tags: JSON.stringify(tags),\n        users: JSON.stringify(users),\n        queueIds: JSON.stringify(selectedQueueIds),\n        whatsappIds: JSON.stringify(whatsappIds),\n        statusFilter: JSON.stringify(statusFilter),\n        userFilter,\n        sortTickets\n    });\n\n\n    useEffect(() => {\n        // const queueIds = queues.map((q) => q.id);\n        // const filteredTickets = tickets.filter(\n        //     (t) => queueIds.indexOf(t.queueId) > -1\n        // );\n        // const allticket = user.allTicket === 'enabled';\n        // if (profile === \"admin\" || allTicket || allowGroup || allHistoric) {\n        if (companyId) {\n            dispatch({\n                type: \"LOAD_TICKETS\",\n                payload: tickets,\n                status,\n                sortDir: sortTickets\n            });\n        }\n        // } else {\n        //  dispatch({ type: \"LOAD_TICKETS\", payload: filteredTickets });\n        // }\n\n    }, [tickets]);\n\n    useEffect(() => {\n        const shouldUpdateTicket = ticket => {\n            return (!ticket?.userId || ticket?.userId === user?.id || showAll) &&\n                ((!ticket?.queueId && showTicketWithoutQueue) || selectedQueueIds.indexOf(ticket?.queueId) > -1)\n            // (!blockNonDefaultConnections || (ticket.status == 'group' && ignoreUserConnectionForGroups) || !user?.whatsappId || ticket.whatsappId == user?.whatsappId);\n        }\n        // const shouldUpdateTicketUser = (ticket) =>\n        //     selectedQueueIds.indexOf(ticket?.queueId) > -1 && (ticket?.userId === user?.id || !ticket?.userId);\n\n        const notBelongsToUserQueues = (ticket) =>\n            ticket.queueId && selectedQueueIds.indexOf(ticket.queueId) === -1;\n\n        const onCompanyTicketTicketsList = (data) => {\n            // console.log(\"onCompanyTicketTicketsList\", data)\n            if (data.action === \"updateUnread\") {\n                dispatch({\n                    type: \"RESET_UNREAD\",\n                    payload: data.ticketId,\n                    status: status,\n                    sortDir: sortTickets\n                });\n            }\n            // console.log(shouldUpdateTicket(data.ticket))\n            if (data.action === \"update\" &&\n                shouldUpdateTicket(data.ticket) && data.ticket.status === status) {\n                dispatch({\n                    type: \"UPDATE_TICKET\",\n                    payload: data.ticket,\n                    status: status,\n                    sortDir: sortTickets\n                });\n            }\n\n            // else if (data.action === \"update\" && shouldUpdateTicketUser(data.ticket) && data.ticket.status === status) {\n            //     dispatch({\n            //         type: \"UPDATE_TICKET\",\n            //         payload: data.ticket,\n            //     });\n            // }\n            if (data.action === \"update\" && notBelongsToUserQueues(data.ticket)) {\n                dispatch({\n                    type: \"DELETE_TICKET\", payload: data.ticket?.id, status: status,\n                    sortDir: sortTickets\n                });\n            }\n\n            if (data.action === \"delete\") {\n                dispatch({\n                    type: \"DELETE_TICKET\", payload: data?.ticketId, status: status,\n                    sortDir: sortTickets\n                });\n\n            }\n        };\n\n        const onCompanyAppMessageTicketsList = (data) => {\n            if (data.action === \"create\" &&\n                shouldUpdateTicket(data.ticket) && data.ticket.status === status) {\n                dispatch({\n                    type: \"UPDATE_TICKET_UNREAD_MESSAGES\",\n                    payload: data.ticket,\n                    status: status,\n                    sortDir: sortTickets\n                });\n            }\n            // else if (data.action === \"create\" && shouldUpdateTicketUser(data.ticket) && data.ticket.status === status) {\n            //     dispatch({\n            //         type: \"UPDATE_TICKET_UNREAD_MESSAGES\",\n            //         payload: data.ticket,\n            //     });\n            // }\n        };\n\n        const onCompanyContactTicketsList = (data) => {\n            if (data.action === \"update\" && data.contact) {\n                dispatch({\n                    type: \"UPDATE_TICKET_CONTACT\",\n                    payload: data.contact,\n                    status: status,\n                    sortDir: sortTickets\n                });\n            }\n        };\n\n        const onConnectTicketsList = () => {\n            if (status) {\n                socket.emit(\"joinTickets\", status);\n            } else {\n                socket.emit(\"joinNotification\");\n            }\n        }\n\n        socket.on(\"connect\", onConnectTicketsList)\n        socket.on(`company-${companyId}-ticket`, onCompanyTicketTicketsList);\n        socket.on(`company-${companyId}-appMessage`, onCompanyAppMessageTicketsList);\n        socket.on(`company-${companyId}-contact`, onCompanyContactTicketsList);\n\n        return () => {\n            if (status) {\n                socket.emit(\"leaveTickets\", status);\n            } else {\n                socket.emit(\"leaveNotification\");\n            }\n            socket.off(\"connect\", onConnectTicketsList);\n            socket.off(`company-${companyId}-ticket`, onCompanyTicketTicketsList);\n            socket.off(`company-${companyId}-appMessage`, onCompanyAppMessageTicketsList);\n            socket.off(`company-${companyId}-contact`, onCompanyContactTicketsList);\n        };\n\n    }, [status, showAll, user, selectedQueueIds, tags, users, profile, queues, sortTickets, showTicketWithoutQueue]);\n\n    useEffect(() => {\n        if (typeof updateCount === \"function\") {\n            updateCount(ticketsList.length);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ticketsList]);\n\n    const loadMore = () => {\n        setPageNumber((prevState) => prevState + 1);\n    };\n\n    const handleScroll = (e) => {\n        if (!hasMore || loading) return;\n\n        const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n\n        if (scrollHeight - (scrollTop + 100) < clientHeight) {\n            loadMore();\n        }\n    };\n\n    if (status && status !== \"search\") {\n        ticketsList = ticketsList.filter(ticket => ticket.status === status)\n    }\n\n    return (\n        <Paper className={classes.ticketsListWrapper} style={style}>\n            <Paper\n                square\n                name=\"closed\"\n                elevation={0}\n                className={classes.ticketsList}\n                onScroll={handleScroll}\n            >\n                <List style={{ paddingTop: 0 }} >\n                    {ticketsList.length === 0 && !loading ? (\n                        <div className={classes.noTicketsDiv}>\n                            <span className={classes.noTicketsTitle}>\n                                {i18n.t(\"ticketsList.noTicketsTitle\")}\n                            </span>\n                            <p className={classes.noTicketsText}>\n                                {i18n.t(\"ticketsList.noTicketsMessage\")}\n                            </p>\n                        </div>\n                    ) : (\n                        <>\n                            {ticketsList.map((ticket) => (\n                                // <List key={ticket.id}>\n                                //     {console.log(ticket)}\n                                <TicketListItem\n                                    ticket={ticket}\n                                    key={ticket.id}\n                                    setTabOpen={setTabOpen}\n                                />\n                                // </List>\n                            ))}\n                        </>\n                    )}\n                    {loading && <TicketsListSkeleton />}\n                </List>\n            </Paper>\n        </Paper>\n    );\n};\n\nexport default TicketsListCustom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}