#!/bin/bash

# 🕒 Setup de Cron Jobs - Simão IA Rural
# Configuração automática de backups e manutenção

set -e

echo "🕒 Configurando cron jobs para Simão IA Rural..."

# Diretório do projeto
PROJECT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)
SCRIPTS_DIR="$PROJECT_DIR/scripts"

# Verificar se os scripts existem
if [[ ! -f "$SCRIPTS_DIR/backup_system.py" ]]; then
    echo "❌ Script de backup não encontrado: $SCRIPTS_DIR/backup_system.py"
    exit 1
fi

# Criar diretório de logs se não existir
LOG_DIR="/var/log/simao-ia-rural"
sudo mkdir -p "$LOG_DIR"
sudo chown -R $(whoami):$(whoami) "$LOG_DIR"

# Backup dos cron jobs existentes
echo "💾 Fazendo backup dos cron jobs atuais..."
crontab -l > "$PROJECT_DIR/cron_backup_$(date +%Y%m%d_%H%M%S).txt" 2>/dev/null || echo "# No existing crontab" > "$PROJECT_DIR/cron_backup_$(date +%Y%m%d_%H%M%S).txt"

# Criar arquivo temporário para novos cron jobs
TEMP_CRON=$(mktemp)

# Preservar cron jobs existentes (exceto os do Simão)
crontab -l 2>/dev/null | grep -v "# Simão IA Rural" | grep -v "backup_system.py" | grep -v "simao-" > "$TEMP_CRON" || true

cat >> "$TEMP_CRON" << 'EOF'

# 🐟 Simão IA Rural - Automated Jobs
# Generated by setup_cron.sh - Do not edit manually

# 🔄 Backup diário completo às 2h da manhã
0 2 * * * cd /PROJECT_DIR && /usr/bin/python3 scripts/backup_system.py >> /var/log/simao-ia-rural/backup.log 2>&1 # Simão IA Rural

# 🔄 Backup incremental a cada 6 horas (6h, 12h, 18h)
0 6,12,18 * * * cd /PROJECT_DIR && /usr/bin/python3 scripts/backup_system.py --incremental >> /var/log/simao-ia-rural/backup-incremental.log 2>&1 # Simão IA Rural

# 🧹 Limpeza de logs antigos (manter 30 dias)
0 3 * * * find /var/log/simao-ia-rural/ -name "*.log" -type f -mtime +30 -delete # Simão IA Rural

# 🗄️ Otimização do banco de dados - toda segunda às 3h
0 3 * * 1 cd /PROJECT_DIR && /usr/bin/python3 scripts/db_maintenance.py --vacuum >> /var/log/simao-ia-rural/db-maintenance.log 2>&1 # Simão IA Rural

# 🔴 Limpeza do Redis - todo domingo às 4h
0 4 * * 0 cd /PROJECT_DIR && /usr/bin/python3 scripts/redis_maintenance.py --cleanup >> /var/log/simao-ia-rural/redis-maintenance.log 2>&1 # Simão IA Rural

# 📊 Relatório semanal de custos - todo domingo às 8h
0 8 * * 0 cd /PROJECT_DIR && /usr/bin/python3 scripts/generate_reports.py --weekly >> /var/log/simao-ia-rural/reports.log 2>&1 # Simão IA Rural

# 💰 Monitoramento de custos Gemini - a cada hora (horário comercial)
0 8-18 * * 1-5 cd /PROJECT_DIR && /usr/bin/python3 scripts/cost_monitor.py >> /var/log/simao-ia-rural/cost-monitor.log 2>&1 # Simão IA Rural

# 🏥 Health check do sistema - a cada 15 minutos
*/15 * * * * cd /PROJECT_DIR && /usr/bin/python3 scripts/health_check.py >> /var/log/simao-ia-rural/health-check.log 2>&1 # Simão IA Rural

# 🔔 Verificação de alertas pendentes - a cada 5 minutos
*/5 * * * * cd /PROJECT_DIR && /usr/bin/python3 scripts/alert_processor.py >> /var/log/simao-ia-rural/alerts.log 2>&1 # Simão IA Rural

# 📈 Update de métricas de performance - a cada hora
0 * * * * cd /PROJECT_DIR && /usr/bin/python3 scripts/update_metrics.py >> /var/log/simao-ia-rural/metrics.log 2>&1 # Simão IA Rural

EOF

# Substituir placeholder pelo diretório real
sed -i "s|/PROJECT_DIR|$PROJECT_DIR|g" "$TEMP_CRON"

# Instalar novos cron jobs
crontab "$TEMP_CRON"

# Limpar arquivo temporário
rm "$TEMP_CRON"

echo "✅ Cron jobs configurados com sucesso!"

# Mostrar cron jobs instalados
echo "
📋 Cron jobs do Simão IA Rural instalados:
================================================"
crontab -l | grep "Simão IA Rural" -A 1

echo "
📊 Resumo dos agendamentos:
================================================
🔄 Backup completo:      Diário às 2h
🔄 Backup incremental:   A cada 6h (6h, 12h, 18h)  
🧹 Limpeza logs:         Diário às 3h
🗄️ Manutenção DB:        Segunda às 3h
🔴 Manutenção Redis:     Domingo às 4h
📊 Relatório semanal:    Domingo às 8h
💰 Monitor custos:       Hora em hora (8h-18h, seg-sex)
🏥 Health check:         A cada 15 minutos
🔔 Verificar alertas:    A cada 5 minutos
📈 Update métricas:      A cada hora
================================================

📝 Logs em: /var/log/simao-ia-rural/
💾 Backup cron anterior: $PROJECT_DIR/cron_backup_*.txt

⚠️  IMPORTANTE:
- Verifique se as variáveis de ambiente estão configuradas
- Confirme permissões de escrita em /var/log/simao-ia-rural/
- Teste os scripts manualmente antes de confiar nos cron jobs
"

# Verificar se serviço cron está rodando
if systemctl is-active --quiet cron; then
    echo "✅ Serviço cron está ativo"
elif systemctl is-active --quiet crond; then
    echo "✅ Serviço crond está ativo"  
else
    echo "⚠️  AVISO: Serviço cron não está rodando!"
    echo "   Para Ubuntu/Debian: sudo systemctl start cron"
    echo "   Para CentOS/RHEL: sudo systemctl start crond"
fi

# Criar script de verificação de cron jobs
cat > "$SCRIPTS_DIR/verify_cron.sh" << 'EOF'
#!/bin/bash
# 🔍 Verificador de Cron Jobs - Simão IA Rural

echo "🔍 Verificando status dos cron jobs..."

LOG_DIR="/var/log/simao-ia-rural"

if [[ ! -d "$LOG_DIR" ]]; then
    echo "❌ Diretório de logs não existe: $LOG_DIR"
    exit 1
fi

echo "📊 Status dos logs (últimas 24h):"
echo "=================================="

for log_file in "$LOG_DIR"/*.log; do
    if [[ -f "$log_file" ]]; then
        filename=$(basename "$log_file")
        size=$(du -sh "$log_file" | cut -f1)
        last_modified=$(stat -c %y "$log_file" | cut -d' ' -f1,2 | cut -d'.' -f1)
        
        # Verificar se foi modificado nas últimas 24h
        if [[ $(find "$log_file" -mtime -1) ]]; then
            status="✅ Ativo"
        else
            status="⚠️  Inativo"
        fi
        
        echo "$status $filename - $size - $last_modified"
    fi
done

echo ""
echo "📋 Cron jobs instalados:"
echo "========================"
crontab -l | grep "Simão IA Rural" | wc -l | xargs echo "Total:"

echo ""
echo "🔄 Para ver logs em tempo real:"
echo "tail -f $LOG_DIR/backup.log"
echo "tail -f $LOG_DIR/health-check.log"
EOF

chmod +x "$SCRIPTS_DIR/verify_cron.sh"

echo "
🔧 Script de verificação criado: $SCRIPTS_DIR/verify_cron.sh
   Execute para verificar status dos cron jobs
"